{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/MinimalClockSelector.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useLongPress = (onLongPress, onClick, {\n  shouldPreventDefault = true,\n  delay = 300\n} = {}) => {\n  _s();\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n  const start = useCallback(event => {\n    if (shouldPreventDefault && event.target) {\n      event.target.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = event.target;\n    }\n    timeout.current = setTimeout(() => {\n      onLongPress(event);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault]);\n  const clear = useCallback((event, shouldTriggerClick = true) => {\n    timeout.current && clearTimeout(timeout.current);\n    shouldTriggerClick && !longPressTriggered && (onClick === null || onClick === void 0 ? void 0 : onClick(event));\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered]);\n  const preventDefault = useCallback(event => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: e => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n_s(useLongPress, \"sEA6RYxNdLRjb6bSPp47o1/k8qQ=\");\nconst SimplifiedClockSelector = () => {\n  _s2();\n  const [selectedHours, setSelectedHours] = useState([]);\n  const [detachmentSegments, setDetachmentSegments] = useState([]);\n  const [hoveredHour, setHoveredHour] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Toggle detachment segment\n  const toggleSegment = segmentId => {\n    setDetachmentSegments(prev => prev.includes(segmentId) ? prev.filter(id => id !== segmentId) : [...prev, segmentId]);\n  };\n\n  // Toggle tear marker\n  const toggleTear = hour => {\n    setSelectedHours(prev => prev.includes(hour) ? prev.filter(h => h !== hour) : [...prev, hour]);\n  };\n\n  // Long press handler for tears\n  const longPressHandlers = useLongPress(event => {\n    const hour = parseInt(event.target.getAttribute('data-hour'));\n    if (hour) toggleTear(hour);\n  }, null, {\n    delay: 500\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(ClockFace, {\n      selectedHours: selectedHours,\n      detachmentSegments: detachmentSegments,\n      hoveredHour: hoveredHour,\n      onSegmentClick: toggleSegment,\n      tearHandlers: longPressHandlers,\n      onHoverChange: setHoveredHour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSelectedHours([]);\n          setDetachmentSegments([]);\n        },\n        className: \"px-3 py-1.5 text-sm bg-gray-100 hover:bg-gray-200 rounded transition-colors\",\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(SimplifiedClockSelector, \"yzN3zVtdr/b6dKzaH6CFBsXiw/4=\", false, function () {\n  return [useLongPress];\n});\n_c = SimplifiedClockSelector;\nexport default SimplifiedClockSelector;\nvar _c;\n$RefreshReg$(_c, \"SimplifiedClockSelector\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","_s","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","event","addEventListener","preventDefault","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","e","onTouchEnd","SimplifiedClockSelector","_s2","selectedHours","setSelectedHours","detachmentSegments","setDetachmentSegments","hoveredHour","setHoveredHour","isDrawing","setIsDrawing","toggleSegment","segmentId","prev","includes","filter","id","toggleTear","hour","h","longPressHandlers","parseInt","getAttribute","className","children","ClockFace","onSegmentClick","tearHandlers","onHoverChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/MinimalClockSelector.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\n\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 300 } = {}) => {\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n\n  const start = useCallback(\n    (event) => {\n      if (shouldPreventDefault && event.target) {\n        event.target.addEventListener('touchend', preventDefault, {\n          passive: false\n        });\n        target.current = event.target;\n      }\n      timeout.current = setTimeout(() => {\n        onLongPress(event);\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault]\n  );\n\n  const clear = useCallback(\n    (event, shouldTriggerClick = true) => {\n      timeout.current && clearTimeout(timeout.current);\n      shouldTriggerClick && !longPressTriggered && onClick?.(event);\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener('touchend', preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered]\n  );\n\n  const preventDefault = useCallback((event) => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: (e) => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n\nconst SimplifiedClockSelector = () => {\n  const [selectedHours, setSelectedHours] = useState([]);\n  const [detachmentSegments, setDetachmentSegments] = useState([]);\n  const [hoveredHour, setHoveredHour] = useState(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  // Toggle detachment segment\n  const toggleSegment = (segmentId) => {\n    setDetachmentSegments(prev => \n      prev.includes(segmentId) \n        ? prev.filter(id => id !== segmentId)\n        : [...prev, segmentId]\n    );\n  };\n\n  // Toggle tear marker\n  const toggleTear = (hour) => {\n    setSelectedHours(prev =>\n      prev.includes(hour)\n        ? prev.filter(h => h !== hour)\n        : [...prev, hour]\n    );\n  };\n\n  // Long press handler for tears\n  const longPressHandlers = useLongPress(\n    (event) => {\n      const hour = parseInt(event.target.getAttribute('data-hour'));\n      if (hour) toggleTear(hour);\n    },\n    null,\n    { delay: 500 }\n  );\n\n  return (\n    <div className=\"w-full max-w-2xl\">\n      <ClockFace\n        selectedHours={selectedHours}\n        detachmentSegments={detachmentSegments}\n        hoveredHour={hoveredHour}\n        onSegmentClick={toggleSegment}\n        tearHandlers={longPressHandlers}\n        onHoverChange={setHoveredHour}\n      />\n      <div className=\"mt-4\">\n        <button \n          onClick={() => {\n            setSelectedHours([]);\n            setDetachmentSegments([]);\n          }}\n          className=\"px-3 py-1.5 text-sm bg-gray-100 hover:bg-gray-200 rounded transition-colors\"\n        >\n          Clear All\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SimplifiedClockSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}