{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useLongPress = (onLongPress, onClick, {\n  shouldPreventDefault = true,\n  delay = 500\n} = {}) => {\n  _s();\n  const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n  const preventDefault = React.useCallback(event => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n  const start = React.useCallback(event => {\n    const element = event.type.includes('touch') ? document.elementFromPoint(event.touches[0].clientX, event.touches[0].clientY) : event.currentTarget;\n    if (shouldPreventDefault && element) {\n      element.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = element;\n    }\n    timeout.current = setTimeout(() => {\n      onLongPress(element);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault, preventDefault]);\n  const clear = React.useCallback((event, shouldTriggerClick = true) => {\n    timeout.current && clearTimeout(timeout.current);\n    shouldTriggerClick && !longPressTriggered && (onClick === null || onClick === void 0 ? void 0 : onClick(event));\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered, preventDefault]);\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: e => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n_s(useLongPress, \"NHdUO3uZeF4j8gnciUBsjuZws/4=\");\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s2();\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n  const [isDrawing, setIsDrawing] = React.useState(false);\n  const [lastPosition, setLastPosition] = React.useState(null);\n  const svgRef = React.useRef(null);\n  const getSegmentFromPoint = (x, y) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n\n    // Get vector from center to click point\n    const dx = x - centerX;\n    const dy = -(y - centerY);\n\n    // Calculate angle in radians\n    let angle = Math.atan2(dy, dx);\n\n    // Convert to clockwise from 12 o'clock\n    angle = -angle + Math.PI / 2;\n\n    // Convert to degrees and normalize to 0-360\n    angle = (angle * 180 / Math.PI + 360) % 360;\n\n    // Convert to segment (0-59)\n    const segment = Math.floor(angle / 6);\n    return segment;\n  };\n  const getSegmentsBetween = (start, end) => {\n    const segments = new Set();\n    let current = start;\n\n    // Simple version - just go from start to end\n    while (current !== end) {\n      segments.add(current);\n      current = (current + 1) % 60;\n      if (segments.size > 60) break; // Safety check\n    }\n    segments.add(end);\n    return Array.from(segments);\n  };\n  const handleDrawingStart = e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    console.log('Drawing Start:', {\n      segment,\n      isDrawing: true\n    });\n    onSegmentToggle(segment);\n  };\n  const handleDrawing = e => {\n    var _e$touches2;\n    if (!isDrawing) {\n      console.log('Drawing attempted but isDrawing is false');\n      return;\n    }\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    console.log('Drawing Move:', {\n      lastPosition,\n      currentSegment,\n      coords: {\n        x: touch.clientX,\n        y: touch.clientY\n      }\n    });\n    if (currentSegment !== lastPosition) {\n      const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n      console.log('Segments to toggle:', {\n        from: lastPosition,\n        to: currentSegment,\n        segments: segmentsBetween\n      });\n      segmentsBetween.forEach(segment => {\n        console.log('Toggling segment:', segment);\n        onSegmentToggle(segment);\n      });\n      setLastPosition(currentSegment);\n    }\n  };\n  const handleDrawingEnd = e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    console.log('Drawing End:', {\n      finalPosition: lastPosition,\n      isDrawing: false\n    });\n    setIsDrawing(false);\n    setLastPosition(null);\n  };\n  const longPressHandlers = useLongPress(element => {\n    const hourElement = element === null || element === void 0 ? void 0 : element.closest('[data-hour]');\n    const hour = hourElement ? parseInt(hourElement.dataset.hour) : null;\n    if (hour) {\n      onTearToggle(hour);\n    }\n  }, null, {\n    delay: 500\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: 'min(80vw, min(80vh, 500px))',\n        aspectRatio: '1',\n        minWidth: '200px',\n        maxWidth: '500px'\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseUp: handleDrawingEnd,\n        onMouseMove: handleDrawing,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n            return /*#__PURE__*/_jsxDEV(\"text\", {\n              x: pos.x,\n              y: pos.y,\n              textAnchor: \"middle\",\n              alignmentBaseline: \"middle\",\n              fontSize: \"6\",\n              fill: \"#666\",\n              children: i\n            }, `debug-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i + 1;\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? longPressHandlers : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: 'pointer'\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\",\n                className: \"touch-target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 41\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 41\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n_s2(ClockFace, \"lmVQPKOTKQH4yyIdOkPSiy6OPkM=\", false, function () {\n  return [useLongPress];\n});\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","getPosition","getSegmentPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","_s","longPressTriggered","setLongPressTriggered","useState","timeout","useRef","target","preventDefault","useCallback","event","start","element","type","includes","document","elementFromPoint","touches","clientX","clientY","currentTarget","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","e","onTouchEnd","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s2","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","getSegmentFromPoint","x","y","svgRect","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","dy","angle","atan2","PI","segment","getSegmentsBetween","end","segments","Set","add","size","Array","from","handleDrawingStart","_e$touches","touch","console","log","handleDrawing","_e$touches2","currentSegment","coords","segmentsBetween","to","forEach","handleDrawingEnd","finalPosition","longPressHandlers","hourElement","closest","hour","parseInt","dataset","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","_","i","pos","textAnchor","alignmentBaseline","fontSize","visualPos","interactionPos","isSelected","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\n\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 500 } = {}) => {\n  const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n\n  const preventDefault = React.useCallback((event) => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n\n  const start = React.useCallback(\n    (event) => {\n      const element = event.type.includes('touch') \n        ? document.elementFromPoint(\n            event.touches[0].clientX,\n            event.touches[0].clientY\n          )\n        : event.currentTarget;\n\n      if (shouldPreventDefault && element) {\n        element.addEventListener('touchend', preventDefault, {\n          passive: false\n        });\n        target.current = element;\n      }\n\n      timeout.current = setTimeout(() => {\n        onLongPress(element);\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault, preventDefault]\n  );\n\n  const clear = React.useCallback(\n    (event, shouldTriggerClick = true) => {\n      timeout.current && clearTimeout(timeout.current);\n      shouldTriggerClick && !longPressTriggered && onClick?.(event);\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener('touchend', preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered, preventDefault]\n  );\n\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: (e) => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n\nconst ClockFace = ({\n    selectedHours,\n    detachmentSegments,\n    hoveredHour,\n    isTouchDevice,\n    onSegmentToggle,\n    onTearToggle,\n    onHoverChange\n  }) => {\n    const outerRadius = 110;\n    const innerRadius = 65;\n    const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n    const tearRadius = middleRadius + 12;\n    const indicatorExtension = 10;\n  \n    const [isDrawing, setIsDrawing] = React.useState(false);\n    const [lastPosition, setLastPosition] = React.useState(null);\n    const svgRef = React.useRef(null);\n  \n    const getSegmentFromPoint = (x, y) => {\n        const svgRect = svgRef.current.getBoundingClientRect();\n        const centerX = svgRect.left + svgRect.width / 2;\n        const centerY = svgRect.top + svgRect.height / 2;\n        \n        // Get vector from center to click point\n        const dx = x - centerX;\n        const dy = -(y - centerY);\n        \n        // Calculate angle in radians\n        let angle = Math.atan2(dy, dx);\n        \n        // Convert to clockwise from 12 o'clock\n        angle = (-angle + Math.PI/2);\n        \n        // Convert to degrees and normalize to 0-360\n        angle = (angle * 180 / Math.PI + 360) % 360;\n        \n        // Convert to segment (0-59)\n        const segment = Math.floor(angle / 6);\n        \n        return segment;\n    };\n    \n    const getSegmentsBetween = (start, end) => {\n        const segments = new Set();\n        let current = start;\n        \n        // Simple version - just go from start to end\n        while (current !== end) {\n            segments.add(current);\n            current = (current + 1) % 60;\n            if (segments.size > 60) break; // Safety check\n        }\n        segments.add(end);\n        \n        return Array.from(segments);\n    };\n    const handleDrawingStart = (e) => {\n        e.preventDefault();\n        setIsDrawing(true);\n        const touch = e.touches?.[0] || e;\n        const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        setLastPosition(segment);\n        console.log('Drawing Start:', { segment, isDrawing: true });\n        onSegmentToggle(segment);\n    };\n\n    const handleDrawing = (e) => {\n        if (!isDrawing) {\n            console.log('Drawing attempted but isDrawing is false');\n            return;\n        }\n        e.preventDefault();\n        \n        const touch = e.touches?.[0] || e;\n        const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        console.log('Drawing Move:', { \n            lastPosition,\n            currentSegment,\n            coords: { x: touch.clientX, y: touch.clientY }\n        });\n        \n        if (currentSegment !== lastPosition) {\n            const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n            console.log('Segments to toggle:', {\n                from: lastPosition,\n                to: currentSegment,\n                segments: segmentsBetween\n            });\n            \n            segmentsBetween.forEach(segment => {\n                console.log('Toggling segment:', segment);\n                onSegmentToggle(segment);\n            });\n            setLastPosition(currentSegment);\n        }\n    };\n\n    const handleDrawingEnd = (e) => {\n        if (!isDrawing) return;\n        e.preventDefault();\n        console.log('Drawing End:', { \n            finalPosition: lastPosition,\n            isDrawing: false \n        });\n        setIsDrawing(false);\n        setLastPosition(null);\n    };\n\n\n    const longPressHandlers = useLongPress(\n        (element) => {\n            const hourElement = element?.closest('[data-hour]');\n            const hour = hourElement ? parseInt(hourElement.dataset.hour) : null;\n            if (hour) {\n                onTearToggle(hour);\n            }\n        },\n        null,\n        { delay: 500 }\n    );\n\n    return (\n        <div className=\"flex justify-center\">\n            <div \n                className=\"relative touch-none select-none\"\n                style={{\n                    width: 'min(80vw, min(80vh, 500px))',\n                    aspectRatio: '1',\n                    minWidth: '200px',\n                    maxWidth: '500px'\n                }}\n                onContextMenu={(e) => e.preventDefault()}\n            >\n                <svg \n                    ref={svgRef}\n                    viewBox=\"-110 -110 220 220\" \n                    className=\"w-full h-full\"\n                    preserveAspectRatio=\"xMidYMid meet\"\n                    onMouseDown={handleDrawingStart}\n                    onMouseUp={handleDrawingEnd}\n                    onMouseMove={handleDrawing}\n                    onMouseLeave={handleDrawingEnd}\n                    onTouchStart={handleDrawingStart}\n                    onTouchMove={handleDrawing}\n                    onTouchEnd={handleDrawingEnd}\n                >\n                    {/* Grid circles */}\n                    <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n                    <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\"/>\n                    <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n\n                    {/* Detachment segments */}\n                    <g>\n                     {/* Debug segment numbers */}\n                     {[...Array(60)].map((_, i) => {\n                    const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n                    return (\n                        <text\n                            key={`debug-${i}`}\n                            x={pos.x}\n                            y={pos.y}\n                            textAnchor=\"middle\"\n                            alignmentBaseline=\"middle\"\n                            fontSize=\"6\"\n                            fill=\"#666\"\n                        >\n                            {i}\n                        </text>\n                    );\n                })}\n\n                    </g>\n\n                    {/* Tear markers */}\n                    <g>\n                        {[...Array(12)].map((_, i) => {\n                            const hour = i + 1;\n                            const visualPos = getPosition(hour, tearRadius);\n                            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n                            const isSelected = selectedHours.includes(hour);\n                            \n                            return (\n                                <g \n                                    key={`tear-${hour}`}\n                                    {...(isTouchDevice ? longPressHandlers : { onClick: () => onTearToggle(hour) })}\n                                    onMouseEnter={() => onHoverChange(hour)}\n                                    onMouseLeave={() => onHoverChange(null)}\n                                    style={{ cursor: 'pointer' }}\n                                    data-hour={hour}\n                                >\n                                    {isTouchDevice && (\n                                        <circle\n                                            cx={interactionPos.x}\n                                            cy={interactionPos.y}\n                                            r=\"12\"\n                                            fill=\"transparent\"\n                                            className=\"touch-target\"\n                                        />\n                                    )}\n                                    \n                                    {isSelected ? (\n                                        <path\n                                            {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                                            style={getStyles(hour, hoveredHour, true)}\n                                        />\n                                    ) : (\n                                        <circle\n                                            cx={visualPos.x}\n                                            cy={visualPos.y}\n                                            r=\"12\"\n                                            style={getStyles(hour, hoveredHour, false)}\n                                        />\n                                    )}\n                                </g>\n                            );\n                        })}\n                    </g>\n\n                    {/* 12 o'clock indicator */}\n                    <line \n                        x1=\"0\" \n                        y1={-outerRadius} \n                        x2=\"0\" \n                        y2={-(outerRadius + indicatorExtension)} \n                        stroke=\"#666\" \n                        strokeWidth=\"2\"\n                    />\n                </svg>\n            </div>\n        </div>\n    );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}