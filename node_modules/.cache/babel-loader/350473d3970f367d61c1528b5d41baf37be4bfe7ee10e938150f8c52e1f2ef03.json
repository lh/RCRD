{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\n// import { interpolateSegments } from './utils/interpolateSegments.js';  \nimport { calculateSegmentsForHourRange } from './utils/segmentCalculator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  setDetachmentSegments,\n  readOnly = false\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20;\n  const indicatorExtension = 1;\n  const LONG_PRESS_DURATION = 500; // ms\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [touchStartTime, setTouchStartTime] = useState(null);\n  //const [touchStartPosition, setTouchStartPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  // Event handlers for tears\n  const handleTearToggle = useCallback((hour, e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    onTearToggle(hour);\n    return false;\n  }, [readOnly, onTearToggle]);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    if (readOnly) return;\n    e.preventDefault();\n    const pointer = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(pointer.clientX, pointer.clientY);\n    if (segment !== null) {\n      setIsDrawing(true);\n      setLastPosition(segment);\n\n      // Calculate hour for first segment\n      const currentHour = Math.floor(segment / 5) + 1;\n      const initialSegments = calculateSegmentsForHourRange(currentHour, currentHour);\n      setDetachmentSegments(initialSegments);\n      if (document.getElementById('touch-debug')) {\n        document.getElementById('touch-debug').textContent = JSON.stringify({\n          action: 'start',\n          segment,\n          hour: currentHour,\n          segments: initialSegments\n        }, null, 2);\n      }\n    }\n  }, [getSegmentFromPoint, readOnly, setDetachmentSegments]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    const pointer = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(pointer.clientX, pointer.clientY);\n    if (currentSegment !== null && currentSegment !== lastPosition) {\n      const debugEl = document.getElementById('touch-debug');\n\n      // Get hour for current segment\n      const currentHour = Math.floor(currentSegment / 5) + 1;\n\n      // If we have existing segments, extend from first segment to current\n      if (detachmentSegments.length > 0) {\n        const startHour = Math.floor(detachmentSegments[0] / 5) + 1;\n        const segmentsToAdd = calculateSegmentsForHourRange(startHour, currentHour);\n        if (debugEl) {\n          debugEl.textContent = JSON.stringify({\n            action: 'draw',\n            currentSegment,\n            currentHour,\n            startHour,\n            segmentsToAdd,\n            totalSegments: segmentsToAdd.length\n          }, null, 2);\n        }\n        setDetachmentSegments(segmentsToAdd);\n      }\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, readOnly, detachmentSegments, setDetachmentSegments]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Style constants and helper functions\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // SVG path helpers\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30;\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`,\n      style: {\n        width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: readOnly ? \"200px\" : \"200px\",\n        maxWidth: readOnly ? \"200px\" : \"500px\",\n        margin: \"0 auto\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: outerRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: middleRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: innerRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-auto\",\n          style: {\n            isolation: 'isolate'\n          },\n          children: [...Array(60)].map((_, i) => {\n            const isHighlighted = detachmentSegments.includes(i);\n            const degreeStart = segmentToDegree(i);\n            const degreeEnd = segmentToDegree(i + 1);\n            const posStart = polarToCartesian(degreeStart, innerRadius);\n            const posOuterStart = polarToCartesian(degreeStart, outerRadius);\n            const posEnd = polarToCartesian(degreeEnd, innerRadius);\n            const posOuterEnd = polarToCartesian(degreeEnd, outerRadius);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${posStart.x} ${posStart.y} \n                      L ${posOuterStart.x} ${posOuterStart.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${posOuterEnd.x} ${posOuterEnd.y}\n                      L ${posEnd.x} ${posEnd.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${posStart.x} ${posStart.y}`,\n              fill: isHighlighted ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: `cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`,\n              style: {\n                pointerEvents: readOnly ? 'none' : 'auto'\n              }\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-auto\",\n          style: {\n            isolation: 'isolate'\n          },\n          children: [...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i;\n            const visualPos = getPosition(hour, tearRadius);\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              onClick: e => handleTearToggle(hour, e),\n              onMouseEnter: () => !readOnly && onHoverChange(hour),\n              onMouseLeave: () => !readOnly && onHoverChange(null),\n              style: {\n                cursor: readOnly ? 'default' : 'pointer'\n              },\n              children: [!readOnly && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: tearHitRadius,\n                fill: \"transparent\",\n                className: \"pointer-events-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: {\n                  ...getStyles(hour, hoveredHour, true),\n                  zIndex: 10\n                },\n                onMouseDown: e => e.stopPropagation()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: {\n                  ...getStyles(hour, hoveredHour, false),\n                  pointerEvents: 'all',\n                  zIndex: 10\n                },\n                onMouseDown: e => e.stopPropagation()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"pointer-events-none\",\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"9wy3xId6N7/ogwzldgDv1GM95R4=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","calculateSegmentsForHourRange","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","onHoverChange","onTearToggle","onSegmentToggle","setDetachmentSegments","readOnly","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","tearHitRadius","indicatorExtension","LONG_PRESS_DURATION","isDrawing","setIsDrawing","lastPosition","setLastPosition","touchStartTime","setTouchStartTime","svgRef","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segmentToDegree","segment","getSegmentFromPoint","clientX","clientY","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","handleTearToggle","hour","e","preventDefault","stopPropagation","handleDrawingStart","_e$touches","pointer","touches","currentHour","initialSegments","document","getElementById","textContent","JSON","stringify","action","segments","handleDrawing","_e$touches2","currentSegment","debugEl","length","startHour","segmentsToAdd","totalSegments","handleDrawingEnd","styles","transition","tear","default","fill","stroke","strokeWidth","hover","circle","getStyles","isSelected","isHovered","createTearPath","tearPath","d","transform","getPosition","radius","point","className","children","style","aspectRatio","minWidth","maxWidth","margin","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","isolation","Array","map","_","i","isHighlighted","includes","degreeStart","degreeEnd","posStart","posOuterStart","posEnd","posOuterEnd","pointerEvents","visualPos","onClick","onMouseEnter","cursor","zIndex","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\n// import { interpolateSegments } from './utils/interpolateSegments.js';  \nimport { calculateSegmentsForHourRange } from './utils/segmentCalculator.js';\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  setDetachmentSegments, \n  readOnly = false\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20;\n  const indicatorExtension = 1;\n  const LONG_PRESS_DURATION = 500; // ms\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [touchStartTime, setTouchStartTime] = useState(null);\n  //const [touchStartPosition, setTouchStartPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  // Event handlers for tears\n  const handleTearToggle = useCallback((hour, e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    onTearToggle(hour);\n    return false;\n  }, [readOnly, onTearToggle]);\n\n  const handleDrawingStart = useCallback((e) => {\n    if (readOnly) return;\n    e.preventDefault();\n\n    const pointer = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(pointer.clientX, pointer.clientY);\n    \n    if (segment !== null) {\n        setIsDrawing(true);\n        setLastPosition(segment);\n        \n        // Calculate hour for first segment\n        const currentHour = Math.floor(segment / 5) + 1;\n        const initialSegments = calculateSegmentsForHourRange(currentHour, currentHour);\n        setDetachmentSegments(initialSegments);\n\n        if (document.getElementById('touch-debug')) {\n            document.getElementById('touch-debug').textContent = JSON.stringify({\n                action: 'start',\n                segment,\n                hour: currentHour,\n                segments: initialSegments\n            }, null, 2);\n        }\n    }\n  }, [getSegmentFromPoint, readOnly, setDetachmentSegments]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n\n    const pointer = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(pointer.clientX, pointer.clientY);\n    \n    if (currentSegment !== null && currentSegment !== lastPosition) {\n        const debugEl = document.getElementById('touch-debug');\n        \n        // Get hour for current segment\n        const currentHour = Math.floor(currentSegment / 5) + 1;\n        \n        // If we have existing segments, extend from first segment to current\n        if (detachmentSegments.length > 0) {\n            const startHour = Math.floor(detachmentSegments[0] / 5) + 1;\n            const segmentsToAdd = calculateSegmentsForHourRange(startHour, currentHour);\n            \n            if (debugEl) {\n                debugEl.textContent = JSON.stringify({\n                    action: 'draw',\n                    currentSegment,\n                    currentHour,\n                    startHour,\n                    segmentsToAdd,\n                    totalSegments: segmentsToAdd.length\n                }, null, 2);\n            }\n            \n            setDetachmentSegments(segmentsToAdd);\n        }\n        \n        setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, readOnly, detachmentSegments, setDetachmentSegments]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Style constants and helper functions\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // SVG path helpers\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30;\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n\n  // Render component\n  return (\n    <div className=\"flex justify-center items-center w-full\">\n      <div\n        className={`relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`}\n        style={{\n          width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: readOnly ? \"200px\" : \"200px\",\n          maxWidth: readOnly ? \"200px\" : \"500px\",\n          margin: \"0 auto\"\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Background circles */}\n          <g className=\"pointer-events-none\">\n            <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n            <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n            <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          </g>\n\n          {/* Detachment segments */}\n          <g className=\"pointer-events-auto\" style={{ isolation: 'isolate' }}>\n            {[...Array(60)].map((_, i) => {\n              const isHighlighted = detachmentSegments.includes(i);\n              const degreeStart = segmentToDegree(i);\n              const degreeEnd = segmentToDegree(i + 1);\n              const posStart = polarToCartesian(degreeStart, innerRadius);\n              const posOuterStart = polarToCartesian(degreeStart, outerRadius);\n              const posEnd = polarToCartesian(degreeEnd, innerRadius);\n              const posOuterEnd = polarToCartesian(degreeEnd, outerRadius);\n\n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${posStart.x} ${posStart.y} \n                      L ${posOuterStart.x} ${posOuterStart.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${posOuterEnd.x} ${posOuterEnd.y}\n                      L ${posEnd.x} ${posEnd.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${posStart.x} ${posStart.y}`}\n                  fill={isHighlighted ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className={`cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`}\n                  style={{ pointerEvents: readOnly ? 'none' : 'auto' }}\n                />\n              );\n            })}\n          </g>\n\n          {/* Tear markers */}\n          <g className=\"pointer-events-auto\" style={{ isolation: 'isolate' }}>\n            {[...Array(12)].map((_, i) => {\n              const hour = i === 0 ? 12 : i;\n              const visualPos = getPosition(hour, tearRadius);\n              const isSelected = selectedHours.includes(hour);\n\n              return (\n                <g\n                  key={`tear-${hour}`}\n                  onClick={(e) => handleTearToggle(hour, e)}\n                  onMouseEnter={() => !readOnly && onHoverChange(hour)}\n                  onMouseLeave={() => !readOnly && onHoverChange(null)}\n                  style={{ cursor: readOnly ? 'default' : 'pointer' }}\n                >\n                  {!readOnly && (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r={tearHitRadius}\n                      fill=\"transparent\"\n                      className=\"pointer-events-auto\"\n                    />\n                  )}\n\n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                      style={{\n                        ...getStyles(hour, hoveredHour, true),\n                        zIndex: 10\n                      }}\n                      onMouseDown={(e) => e.stopPropagation()}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={{\n                        ...getStyles(hour, hoveredHour, false),\n                        pointerEvents: 'all',\n                        zIndex: 10\n                      }}\n                      onMouseDown={(e) => e.stopPropagation()}\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            className=\"pointer-events-none\"\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}