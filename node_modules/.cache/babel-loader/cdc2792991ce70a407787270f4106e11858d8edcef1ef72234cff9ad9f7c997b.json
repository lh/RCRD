{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useLongPress = (onLongPress, onClick, {\n  shouldPreventDefault = true,\n  delay = 500\n} = {}) => {\n  _s();\n  const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n  const preventDefault = React.useCallback(event => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n  const start = React.useCallback(event => {\n    if (shouldPreventDefault && event.target) {\n      event.target.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = event.target;\n    }\n    timeout.current = setTimeout(() => {\n      onLongPress(event);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault, preventDefault]);\n  const clear = React.useCallback((event, shouldTriggerClick = true) => {\n    timeout.current && clearTimeout(timeout.current);\n    shouldTriggerClick && !longPressTriggered && (onClick === null || onClick === void 0 ? void 0 : onClick(event));\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered, preventDefault]);\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: e => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n_s(useLongPress, \"NHdUO3uZeF4j8gnciUBsjuZws/4=\");\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s3();\n  var _s2 = $RefreshSig$();\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n  const [isDrawing, setIsDrawing] = React.useState(false);\n  const [lastPosition, setLastPosition] = React.useState(null);\n  const svgRef = React.useRef(null);\n\n  // Create handlers for each hour outside of the map function\n  const hourHandlers = [...Array(12)].map((_, i) => {\n    const hour = i + 1;\n    if (isTouchDevice) {\n      return {\n        onMouseDown: event => {\n          let timeout = setTimeout(() => {\n            onTearToggle(hour);\n          }, 500);\n          const cleanup = () => {\n            clearTimeout(timeout);\n            window.removeEventListener('mouseup', cleanup);\n            window.removeEventListener('touchend', cleanup);\n          };\n          window.addEventListener('mouseup', cleanup);\n          window.addEventListener('touchend', cleanup);\n        },\n        onTouchStart: event => {\n          event.preventDefault();\n          let timeout = setTimeout(() => {\n            onTearToggle(hour);\n          }, 500);\n          const cleanup = () => {\n            clearTimeout(timeout);\n            window.removeEventListener('mouseup', cleanup);\n            window.removeEventListener('touchend', cleanup);\n          };\n          window.addEventListener('mouseup', cleanup);\n          window.addEventListener('touchend', cleanup);\n        }\n      };\n    } else {\n      return {\n        onClick: () => onTearToggle(hour)\n      };\n    }\n  });\n  const getSegmentsBetween = (start, end) => {\n    const segments = new Set();\n    start = (start % 60 + 60) % 60;\n    end = (end % 60 + 60) % 60;\n    let current = start;\n    const step = start <= end ? 1 : -1;\n    do {\n      segments.add(current);\n      current = (current + step + 60) % 60;\n    } while (current !== (end + step + 60) % 60);\n    return Array.from(segments);\n  };\n  const handleDrawingStart = e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    console.log('Drawing Start:', {\n      segment\n    });\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  };\n  const handleDrawing = e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      console.log('Drawing Move:', {\n        lastPosition,\n        currentSegment\n      });\n      const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n      segmentsBetween.forEach(segment => {\n        onSegmentToggle(segment);\n      });\n      setLastPosition(currentSegment);\n    }\n  };\n  const handleDrawingEnd = e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    console.log('Drawing End');\n    setIsDrawing(false);\n    setLastPosition(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: 'min(80vw, min(80vh, 500px))',\n        aspectRatio: '1',\n        minWidth: '200px',\n        maxWidth: '500px'\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const isDetachmentSelected = detachmentSegments.includes(i);\n            const nextSegment = (i + 1) % 60;\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                                        L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                                        A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                                        L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                                        A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`,\n              fill: isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\",\n              \"data-segment-id\": i\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), [...Array(60)].map((_, i) => {\n          const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            x: pos.x,\n            y: pos.y,\n            textAnchor: \"middle\",\n            alignmentBaseline: \"middle\",\n            fontSize: \"6\",\n            fill: \"#666\",\n            children: i\n          }, `debug-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: _s2([...Array(12)].map(_s2((_, i) => {\n            _s2();\n            const hour = i + 1;\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? useLongPress(() => onTearToggle(hour), null, {\n                delay: 500\n              }) : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: 'pointer'\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\",\n                className: \"touch-target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 41\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this);\n          }, \"i5k9rvQISygysnCFAHzQkzOIUis=\", false, function () {\n            return [useLongPress];\n          })), \"i5k9rvQISygysnCFAHzQkzOIUis=\", false, function () {\n            return [useLongPress];\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s3(ClockFace, \"pcYHJzAeSl1GeIq9DP/OPmxCXrU=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","getPosition","getSegmentPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","_s","longPressTriggered","setLongPressTriggered","useState","timeout","useRef","target","preventDefault","useCallback","event","start","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","e","onTouchEnd","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s3","_s2","$RefreshSig$","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","hourHandlers","Array","map","_","i","hour","cleanup","window","getSegmentsBetween","end","segments","Set","step","add","from","handleDrawingStart","_e$touches","touch","touches","segment","getSegmentFromPoint","clientX","clientY","console","log","handleDrawing","_e$touches2","currentSegment","segmentsBetween","forEach","handleDrawingEnd","className","children","style","width","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","isDetachmentSelected","includes","nextSegment","d","x","y","pos","textAnchor","alignmentBaseline","fontSize","visualPos","interactionPos","isSelected","onMouseEnter","cursor","angle","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\n\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 500 } = {}) => {\n    const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n    const timeout = React.useRef();\n    const target = React.useRef();\n\n    const preventDefault = React.useCallback((event) => {\n        if (!longPressTriggered) {\n            event.preventDefault();\n        }\n    }, [longPressTriggered]);\n\n    const start = React.useCallback(\n        (event) => {\n            if (shouldPreventDefault && event.target) {\n                event.target.addEventListener('touchend', preventDefault, { passive: false });\n                target.current = event.target;\n            }\n            timeout.current = setTimeout(() => {\n                onLongPress(event);\n                setLongPressTriggered(true);\n            }, delay);\n        },\n        [onLongPress, delay, shouldPreventDefault, preventDefault]\n    );\n\n    const clear = React.useCallback(\n        (event, shouldTriggerClick = true) => {\n            timeout.current && clearTimeout(timeout.current);\n            shouldTriggerClick && !longPressTriggered && onClick?.(event);\n            setLongPressTriggered(false);\n            if (shouldPreventDefault && target.current) {\n                target.current.removeEventListener('touchend', preventDefault);\n            }\n        },\n        [shouldPreventDefault, onClick, longPressTriggered, preventDefault]\n    );\n\n    return {\n        onMouseDown: start,\n        onTouchStart: start,\n        onMouseUp: clear,\n        onMouseLeave: (e) => clear(e, false),\n        onTouchEnd: clear\n    };\n};\n\nconst ClockFace = ({\n    selectedHours,\n    detachmentSegments,\n    hoveredHour,\n    isTouchDevice,\n    onSegmentToggle,\n    onTearToggle,\n    onHoverChange\n}) => {\n    const outerRadius = 110;\n    const innerRadius = 65;\n    const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n    const tearRadius = middleRadius + 12;\n    const indicatorExtension = 10;\n\n    const [isDrawing, setIsDrawing] = React.useState(false);\n    const [lastPosition, setLastPosition] = React.useState(null);\n    const svgRef = React.useRef(null);\n\n    // Create handlers for each hour outside of the map function\n    const hourHandlers = [...Array(12)].map((_, i) => {\n        const hour = i + 1;\n        if (isTouchDevice) {\n            return {\n                onMouseDown: (event) => {\n                    let timeout = setTimeout(() => {\n                        onTearToggle(hour);\n                    }, 500);\n                    \n                    const cleanup = () => {\n                        clearTimeout(timeout);\n                        window.removeEventListener('mouseup', cleanup);\n                        window.removeEventListener('touchend', cleanup);\n                    };\n                    \n                    window.addEventListener('mouseup', cleanup);\n                    window.addEventListener('touchend', cleanup);\n                },\n                onTouchStart: (event) => {\n                    event.preventDefault();\n                    let timeout = setTimeout(() => {\n                        onTearToggle(hour);\n                    }, 500);\n                    \n                    const cleanup = () => {\n                        clearTimeout(timeout);\n                        window.removeEventListener('mouseup', cleanup);\n                        window.removeEventListener('touchend', cleanup);\n                    };\n                    \n                    window.addEventListener('mouseup', cleanup);\n                    window.addEventListener('touchend', cleanup);\n                }\n            };\n        } else {\n            return {\n                onClick: () => onTearToggle(hour)\n            };\n        }\n    });\n\n    const getSegmentsBetween = (start, end) => {\n        const segments = new Set();\n        start = ((start % 60) + 60) % 60;\n        end = ((end % 60) + 60) % 60;\n        \n        let current = start;\n        const step = start <= end ? 1 : -1;\n        \n        do {\n            segments.add(current);\n            current = (current + step + 60) % 60;\n        } while (current !== (end + step + 60) % 60);\n        \n        return Array.from(segments);\n    };\n\n    const handleDrawingStart = (e) => {\n        e.preventDefault();\n        setIsDrawing(true);\n        const touch = e.touches?.[0] || e;\n        const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        console.log('Drawing Start:', { segment });\n        setLastPosition(segment);\n        onSegmentToggle(segment);\n    };\n\n    const handleDrawing = (e) => {\n        if (!isDrawing) return;\n        e.preventDefault();\n        \n        const touch = e.touches?.[0] || e;\n        const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        \n        if (currentSegment !== lastPosition) {\n            console.log('Drawing Move:', { \n                lastPosition, \n                currentSegment,\n            });\n            const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n            segmentsBetween.forEach(segment => {\n                onSegmentToggle(segment);\n            });\n            setLastPosition(currentSegment);\n        }\n    };\n\n    const handleDrawingEnd = (e) => {\n        if (!isDrawing) return;\n        e.preventDefault();\n        console.log('Drawing End');\n        setIsDrawing(false);\n        setLastPosition(null);\n    };\n\n    return (\n        <div className=\"flex justify-center\">\n            <div \n                className=\"relative touch-none select-none\"\n                style={{\n                    width: 'min(80vw, min(80vh, 500px))',\n                    aspectRatio: '1',\n                    minWidth: '200px',\n                    maxWidth: '500px'\n                }}\n                onContextMenu={(e) => e.preventDefault()}\n            >\n                <svg \n                    ref={svgRef}\n                    viewBox=\"-110 -110 220 220\" \n                    className=\"w-full h-full\"\n                    preserveAspectRatio=\"xMidYMid meet\"\n                    onMouseDown={handleDrawingStart}\n                    onMouseMove={handleDrawing}\n                    onMouseUp={handleDrawingEnd}\n                    onMouseLeave={handleDrawingEnd}\n                    onTouchStart={handleDrawingStart}\n                    onTouchMove={handleDrawing}\n                    onTouchEnd={handleDrawingEnd}\n                >\n                    {/* Grid circles */}\n                    <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n                    <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\"/>\n                    <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n\n                    {/* Detachment segments */}\n                    <g>\n                        {[...Array(60)].map((_, i) => {\n                            const isDetachmentSelected = detachmentSegments.includes(i);\n                            const nextSegment = (i + 1) % 60;\n                            \n                            return (\n                                <path\n                                    key={`segment-${i}`}\n                                    d={`M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                                        L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                                        A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                                        L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                                        A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`}\n                                    fill={isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                                    className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                                    data-segment-id={i}\n                                />\n                            );\n                        })}\n                    </g>\n\n                    {/* Debug segment numbers */}\n                    {[...Array(60)].map((_, i) => {\n                        const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n                        return (\n                            <text\n                                key={`debug-${i}`}\n                                x={pos.x}\n                                y={pos.y}\n                                textAnchor=\"middle\"\n                                alignmentBaseline=\"middle\"\n                                fontSize=\"6\"\n                                fill=\"#666\"\n                            >\n                                {i}\n                            </text>\n                        );\n                    })}\n\n                    {/* Tear markers */}\n                    <g>\n                        {[...Array(12)].map((_, i) => {\n                            const hour = i + 1;\n                            const visualPos = getPosition(hour, tearRadius);\n                            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n                            const isSelected = selectedHours.includes(hour);\n                            \n                            return (\n                                <g \n                                    key={`tear-${hour}`}\n                                    {...(isTouchDevice ? useLongPress(\n                                        () => onTearToggle(hour),\n                                        null,\n                                        { delay: 500 }\n                                    ) : { onClick: () => onTearToggle(hour) })}\n                                    onMouseEnter={() => onHoverChange(hour)}\n                                    onMouseLeave={() => onHoverChange(null)}\n                                    style={{ cursor: 'pointer' }}\n                                    data-hour={hour}\n                                >\n                                    {isTouchDevice && (\n                                        <circle\n                                            cx={interactionPos.x}\n                                            cy={interactionPos.y}\n                                            r=\"12\"\n                                            fill=\"transparent\"\n                                            className=\"touch-target\"\n                                        />\n                                    )}\n                                    \n                                    {isSelected ? (\n                                        <path\n                                            {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                                            style={getStyles(hour, hoveredHour, true)}\n                                        />\n                                    ) : (\n                                        <circle\n                                            cx={visualPos.x}\n                                            cy={visualPos.y}\n                                            r=\"12\"\n                                            style={getStyles(hour, hoveredHour, false)}\n                                        />\n                                    )}\n                                </g>\n                            );\n                        })}\n                    </g>\n\n                    {/* 12 o'clock indicator */}\n                    <line \n                        x1=\"0\" \n                        y1={-outerRadius} \n                        x2=\"0\" \n                        y2={-(outerRadius + indicatorExtension)} \n                        stroke=\"#666\" \n                        strokeWidth=\"2\"\n                    />\n                </svg>\n            </div>\n        </div>\n    );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}