{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { segmentToClockHour, getSegmentsForClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { getPosition, createTearPath } from \"./utils/clockCalculations\";\nimport { getStyles } from \"./styles/clockStyles\";\nimport CoordinateSystem from \"./utils/clockCoordinates\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // Style constants remain unchanged\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Updated coordinate conversion functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180); // -90 to start at top\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360; // Convert to clockwise from top\n  };\n\n  // Updated hour and position calculations\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle,\n      debug: {\n        hour,\n        clockAngle: angle\n      }\n    };\n  };\n\n  // Rest of the utility functions remain unchanged\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n\n  // Group consecutive numbers into ranges\n  const groupConsecutive = numbers => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n\n      // Check if numbers are consecutive (including 12->1 wrap)\n      if (curr === prev + 1 || prev === 12 && curr === 1) {\n        range.push(curr);\n      } else {\n        ranges.push(range);\n        range = [curr];\n      }\n    }\n    ranges.push(range);\n    return ranges;\n  };\n\n  // Format a range of hours into a string\n  const formatHourRange = range => {\n    if (range.length === 1) return `${range[0]}`;\n    return `${range[0]}-${range[range.length - 1]}`;\n  };\n\n  // Create description of current selections\n  const createSelectionDescription = () => {\n    // Handle tears (already in clock hours)\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0 ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock` : 'No breaks marked';\n\n    // Handle detachment (convert segments to clock hours first)\n    const detachmentHours = [...new Set(detachmentSegments.map(segmentToClockHour))];\n    const detachmentRanges = groupConsecutive(detachmentHours);\n    const detachmentDescription = detachmentRanges.length > 0 ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock` : 'No detachment marked';\n    return {\n      tearDescription,\n      detachmentDescription\n    };\n  };\n\n  // Style helper remains unchanged\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Create tear path remains unchanged\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n      M -4 -8\n      c -0.091 -0.936 0.333 -1.232 0.777 0.658\n      c 0.389 1.655 1.060 3.281 1.060 3.281\n      s 0 0.254 1.022 0.617\n      c 0.793 0.282 2.183 -2.882 2.183 -2.882\n      s 1.953 -4.433 1.437 -1.294\n      c -1.217 7.410 -1.640 6.716 -1.664 6.897\n      c -0.024 0.181 -0.510 0.596 -0.510 0.596\n      s -0.178 0.183 -0.585 0.327\n      c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n      L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Event handlers remain unchanged\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler remains unchanged\n  const handleTearLongPress = useCallback(hour => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: e => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel\n    };\n  }, [onTearToggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: \"200px\",\n        maxWidth: \"500px\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const degree = segmentToDegree(i);\n            const pos = polarToCartesian(degree, innerRadius);\n            const posOuter = polarToCartesian(degree, outerRadius);\n            const nextDegree = segmentToDegree(i + 1);\n            const nextPos = polarToCartesian(nextDegree, innerRadius);\n            const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`,\n              fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\"\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i; // Fixed hour calculation\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? handleTearLongPress(hour) : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: \"pointer\"\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: visualPos.x,\n                y: visualPos.y,\n                textAnchor: \"middle\",\n                alignmentBaseline: \"middle\",\n                fontSize: \"8\",\n                fill: \"black\",\n                children: hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white rounded-lg shadow-sm p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-medium text-gray-900\",\n          children: \"Current Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: (() => {\n            const {\n              tearDescription,\n              detachmentDescription\n            } = createSelectionDescription();\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: tearDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: detachmentDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 pt-2 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Debug Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Raw segments: \", detachmentSegments.sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Mapped clock hours: \", [...new Set(detachmentSegments.map(segmentToClockHour))].sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Selected tear hours: \", selectedHours.sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Segment ranges by hour: \", Array.from(clockHourToSegmentsMap.entries()).filter(([hour]) => detachmentSegments.map(segmentToClockHour).includes(hour)).map(([hour, segs]) => `${hour}:${segs.join(',')}`).join(' | ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"Uy+H0dy2aI7YeAR/EOLSd72XEdY=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","segmentToClockHour","getSegmentsForClockHour","clockHourToSegmentsMap","getPosition","createTearPath","getStyles","CoordinateSystem","jsxDEV","_jsxDEV","Fragment","_Fragment","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","styles","transition","tear","default","fill","stroke","strokeWidth","hover","circle","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","hour","radius","point","debug","clockAngle","degreeToSegment","degree","segmentToDegree","segment","groupConsecutive","numbers","length","sorted","Set","sort","a","b","ranges","range","i","curr","prev","push","formatHourRange","createSelectionDescription","tearRanges","tearDescription","map","join","detachmentHours","detachmentRanges","detachmentDescription","isSelected","isHovered","tearPath","d","transform","getSegmentFromPoint","clientX","clientY","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTearLongPress","timeout","start","setTimeout","cancel","clearTimeout","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","onTouchCancel","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","Array","_","pos","posOuter","nextDegree","nextPos","nextPosOuter","includes","visualPos","interactionPos","onClick","onMouseEnter","cursor","textAnchor","alignmentBaseline","fontSize","x1","y1","x2","y2","from","entries","filter","segs","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  segmentToClockHour,\n  getSegmentsForClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nimport {\n  getPosition,\n  createTearPath,\n} from \"./utils/clockCalculations\";\nimport { getStyles } from \"./styles/clockStyles\";\nimport CoordinateSystem from \"./utils/clockCoordinates\";\n\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange,\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // Style constants remain unchanged\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Updated coordinate conversion functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180); // -90 to start at top\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360; // Convert to clockwise from top\n  };\n\n  // Updated hour and position calculations\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle,\n      debug: {\n        hour,\n        clockAngle: angle\n      }\n    };\n  };\n\n  // Rest of the utility functions remain unchanged\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n\n\n  // Group consecutive numbers into ranges\n  const groupConsecutive = (numbers) => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n\n      // Check if numbers are consecutive (including 12->1 wrap)\n      if (curr === prev + 1 || (prev === 12 && curr === 1)) {\n        range.push(curr);\n      } else {\n        ranges.push(range);\n        range = [curr];\n      }\n    }\n    ranges.push(range);\n    return ranges;\n  };\n\n  // Format a range of hours into a string\n  const formatHourRange = (range) => {\n    if (range.length === 1) return `${range[0]}`;\n    return `${range[0]}-${range[range.length - 1]}`;\n  };\n\n  // Create description of current selections\n  const createSelectionDescription = () => {\n    // Handle tears (already in clock hours)\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0\n      ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No breaks marked';\n\n    // Handle detachment (convert segments to clock hours first)\n    const detachmentHours = [...new Set(detachmentSegments.map(segmentToClockHour))];\n    const detachmentRanges = groupConsecutive(detachmentHours);\n    const detachmentDescription = detachmentRanges.length > 0\n      ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No detachment marked';\n\n    return { tearDescription, detachmentDescription };\n  };\n\n  // Style helper remains unchanged\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Create tear path remains unchanged\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n      M -4 -8\n      c -0.091 -0.936 0.333 -1.232 0.777 0.658\n      c 0.389 1.655 1.060 3.281 1.060 3.281\n      s 0 0.254 1.022 0.617\n      c 0.793 0.282 2.183 -2.882 2.183 -2.882\n      s 1.953 -4.433 1.437 -1.294\n      c -1.217 7.410 -1.640 6.716 -1.664 6.897\n      c -0.024 0.181 -0.510 0.596 -0.510 0.596\n      s -0.178 0.183 -0.585 0.327\n      c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n      L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Event handlers remain unchanged\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  const handleDrawingStart = useCallback((e) => {\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler remains unchanged\n  const handleTearLongPress = useCallback((hour) => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: (e) => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel,\n    };\n  }, [onTearToggle]);\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <div className=\"relative touch-none select-none\"\n        style={{\n          width: \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: \"200px\",\n          maxWidth: \"500px\",\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Grid circles */}\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n          <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n\n          {/* Detachment segments */}\n          <g>\n            {[...Array(60)].map((_, i) => {\n              const degree = segmentToDegree(i);\n              const pos = polarToCartesian(degree, innerRadius);\n              const posOuter = polarToCartesian(degree, outerRadius);\n              const nextDegree = segmentToDegree(i + 1);\n              const nextPos = polarToCartesian(nextDegree, innerRadius);\n              const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n\n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`}\n                  fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                />\n              );\n            })}\n          </g>\n\n          {/* Hour markers and tears */}\n          <g>\n            {[...Array(12)].map((_, i) => {\n              const hour = i === 0 ? 12 : i; // Fixed hour calculation\n              const visualPos = getPosition(hour, tearRadius);\n              const interactionPos = isTouchDevice\n                ? getPosition(hour, outerRadius)\n                : visualPos;\n              const isSelected = selectedHours.includes(hour);\n\n              return (\n                <g\n                  key={`tear-${hour}`}\n                  {...(isTouchDevice\n                    ? handleTearLongPress(hour)\n                    : { onClick: () => onTearToggle(hour) })}\n                  onMouseEnter={() => onHoverChange(hour)}\n                  onMouseLeave={() => onHoverChange(null)}\n                  style={{ cursor: \"pointer\" }}\n                  data-hour={hour}\n                >\n                  {isTouchDevice && (\n                    <circle\n                      cx={interactionPos.x}\n                      cy={interactionPos.y}\n                      r=\"12\"\n                      fill=\"transparent\"\n                    />\n                  )}\n\n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n\n                  {/* Hour label - simplified */}\n                  <text\n                    x={visualPos.x}\n                    y={visualPos.y}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"middle\"\n                    fontSize=\"8\"\n                    fill=\"black\"\n                  >\n                    {hour}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n  \n\n       {/* Enhanced debug panel */}\n       <div className=\"w-full max-w-md bg-white rounded-lg shadow-sm p-4\">\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900\">Current Selection:</h3>\n          <div className=\"space-y-1\">\n            {(() => {\n              const { tearDescription, detachmentDescription } = createSelectionDescription();\n              return (\n                <>\n                  <p className=\"text-sm text-gray-600\">{tearDescription}</p>\n                  <p className=\"text-sm text-gray-600\">{detachmentDescription}</p>\n                </>\n              );\n            })()}\n          </div>\n          \n          {/* Enhanced debug information */}\n          <div className=\"mt-4 pt-2 border-t border-gray-200\">\n            <p className=\"text-xs font-medium text-gray-700\">Debug Information:</p>\n            <div className=\"mt-1 space-y-1\">\n              <p className=\"text-xs text-gray-600\">\n                Raw segments: {detachmentSegments.sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Mapped clock hours: {[...new Set(detachmentSegments.map(segmentToClockHour))].sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Selected tear hours: {selectedHours.sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Segment ranges by hour: {\n                  Array.from(clockHourToSegmentsMap.entries())\n                    .filter(([hour]) => detachmentSegments.map(segmentToClockHour).includes(hour))\n                    .map(([hour, segs]) => `${hour}:${segs.join(',')}`)\n                    .join(' | ')\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n};\n\nexport default ClockFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}