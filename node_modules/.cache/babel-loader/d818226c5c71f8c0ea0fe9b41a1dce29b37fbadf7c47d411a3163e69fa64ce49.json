{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { segmentToClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const mobileInnerRadius = 40; // Smaller inner radius for mobile\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20; // Larger hit area for tears on mobile\n  const indicatorExtension = 1;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [longPressTimer, setLongPressTimer] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    // Only set as touch device if it's a mobile device (no mouse)\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    setIsTouchDevice(isMobile && ('ontouchstart' in window || navigator.maxTouchPoints > 0));\n  }, []);\n\n  // Set segment count depending on device type\n  const segmentCount = isTouchDevice ? 12 : 60; // Use 12 segments for mobile, 60 for others\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n\n  // Check if a point is within tear hit area\n  const isWithinTearArea = useCallback((x, y) => {\n    if (!isTouchDevice) return false;\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = x - centerX;\n    const relY = -(y - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const hourAngle = Math.floor((angle + 15) / 30) % 12;\n    const hour = hourAngle === 0 ? 12 : hourAngle;\n    const tearPos = getPosition(hour, tearRadius);\n    const dx = relX - tearPos.x;\n    const dy = -relY - tearPos.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance <= tearHitRadius;\n  }, [isTouchDevice]);\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n  const segmentToHour = segment => {\n    // Each hour on a clock face is represented by 5 segments (60 minutes / 12 hours)\n    const hour = Math.floor(segment / 5) % 12;\n    return hour === 0 ? 12 : hour; // Convert 0 to 12 for 12 o'clock\n  };\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRef.current.getBoundingClientRect().top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const segment = degreeToSegment(angle);\n    if (isTouchDevice) {\n      // Snap to nearest segment for mobile\n      const snappedSegment = Math.round(segment / (60 / 12)) * (60 / 12);\n      return snappedSegment % 60;\n    }\n    return segment;\n  }, [isTouchDevice]);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    if (readOnly) return;\n    e.preventDefault();\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (segment !== null) {\n      setIsDrawing(true);\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    }\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== null && currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback(hour => e => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n  const effectiveInnerRadius = isTouchDevice ? mobileInnerRadius : innerRadius;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`,\n    style: {\n      width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n      aspectRatio: \"1\",\n      minWidth: readOnly ? \"200px\" : \"200px\",\n      maxWidth: readOnly ? \"200px\" : \"500px\"\n    },\n    onContextMenu: e => e.preventDefault(),\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      viewBox: \"-110 -110 220 220\",\n      className: \"w-full h-full\",\n      preserveAspectRatio: \"xMidYMid meet\",\n      onMouseDown: handleDrawingStart,\n      onMouseMove: handleDrawing,\n      onMouseUp: handleDrawingEnd,\n      onMouseLeave: handleDrawingEnd,\n      onTouchStart: handleDrawingStart,\n      onTouchMove: handleDrawing,\n      onTouchEnd: handleDrawingEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: effectiveInnerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-auto\",\n        children: [...Array(segmentCount)].map((_, i) => {\n          // Calculate the logical segment index for the displayed segment\n          const logicalSegmentStart = Math.floor(i * (60 / segmentCount));\n          const logicalSegmentEnd = Math.floor((i + 1) * (60 / segmentCount));\n\n          // Determine if any logical segment within this range is selected\n          const isHighlighted = detachmentSegments.some(segment => segment >= logicalSegmentStart && segment < logicalSegmentEnd);\n          const degreeStart = segmentToDegree(logicalSegmentStart);\n          const degreeEnd = segmentToDegree(logicalSegmentEnd);\n          const posStart = polarToCartesian(degreeStart, effectiveInnerRadius);\n          const posOuterStart = polarToCartesian(degreeStart, outerRadius);\n          const posEnd = polarToCartesian(degreeEnd, effectiveInnerRadius);\n          const posOuterEnd = polarToCartesian(degreeEnd, outerRadius);\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: `M ${posStart.x} ${posStart.y} \n                    L ${posOuterStart.x} ${posOuterStart.y} \n                    A ${outerRadius} ${outerRadius} 0 0 1 ${posOuterEnd.x} ${posOuterEnd.y}\n                    L ${posEnd.x} ${posEnd.y}\n                    A ${effectiveInnerRadius} ${effectiveInnerRadius} 0 0 0 ${posStart.x} ${posStart.y}`,\n            fill: isHighlighted ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n            className: `cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`\n          }, `segment-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-auto\",\n        children: [...Array(12)].map((_, i) => {\n          const hour = i === 0 ? 12 : i;\n          const visualPos = getPosition(hour, tearRadius);\n          const isSelected = selectedHours.includes(hour);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            onClick: !readOnly ? e => {\n              e.preventDefault();\n              e.stopPropagation();\n              onTearToggle(hour);\n            } : undefined,\n            onTouchStart: isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined,\n            onTouchEnd: isTouchDevice && !readOnly ? handleTouchEnd : undefined,\n            onMouseEnter: !readOnly ? () => onHoverChange(hour) : undefined,\n            onMouseLeave: !readOnly ? () => onHoverChange(null) : undefined,\n            style: {\n              cursor: readOnly ? 'default' : 'pointer'\n            },\n            children: [isTouchDevice && !readOnly && /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: visualPos.x,\n              cy: visualPos.y,\n              r: tearHitRadius,\n              fill: \"transparent\",\n              className: \"pointer-events-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n              ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n              style: getStyles(hour, hoveredHour, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: visualPos.x,\n              cy: visualPos.y,\n              r: \"12\",\n              style: getStyles(hour, hoveredHour, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this)]\n          }, `tear-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"pointer-events-none\",\n        x1: \"0\",\n        y1: -outerRadius,\n        x2: \"0\",\n        y2: -(outerRadius + indicatorExtension),\n        stroke: \"#666\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"aMDsFuRrzZoL34PXDzgYze0kUtA=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","segmentToClockHour","clockHourToSegmentsMap","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","onHoverChange","onTearToggle","onSegmentToggle","readOnly","_s","outerRadius","innerRadius","mobileInnerRadius","middleRadius","Math","floor","tearRadius","tearHitRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","isTouchDevice","setIsTouchDevice","longPressTimer","setLongPressTimer","svgRef","isMobile","test","navigator","userAgent","window","maxTouchPoints","segmentCount","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segmentToDegree","segment","isWithinTearArea","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","hourAngle","hour","tearPos","getPosition","dx","dy","distance","sqrt","styles","transition","tear","default","fill","stroke","strokeWidth","hover","circle","getStyles","isSelected","isHovered","createTearPath","tearPath","d","transform","radius","point","segmentToHour","getSegmentFromPoint","clientX","clientY","snappedSegment","round","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTouchStart","stopPropagation","timer","setTimeout","handleTouchEnd","clearTimeout","effectiveInnerRadius","className","style","aspectRatio","minWidth","maxWidth","onContextMenu","children","ref","viewBox","preserveAspectRatio","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","logicalSegmentStart","logicalSegmentEnd","isHighlighted","some","degreeStart","degreeEnd","posStart","posOuterStart","posEnd","posOuterEnd","visualPos","includes","onClick","undefined","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport {\n  segmentToClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const mobileInnerRadius = 40; // Smaller inner radius for mobile\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20; // Larger hit area for tears on mobile\n  const indicatorExtension = 1;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [longPressTimer, setLongPressTimer] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    // Only set as touch device if it's a mobile device (no mouse)\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    setIsTouchDevice(isMobile && ('ontouchstart' in window || navigator.maxTouchPoints > 0));\n  }, []);\n\n  // Set segment count depending on device type\n  const segmentCount = isTouchDevice ? 12 : 60; // Use 12 segments for mobile, 60 for others\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n  // Check if a point is within tear hit area\n  const isWithinTearArea = useCallback((x, y) => {\n    if (!isTouchDevice) return false;\n    \n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = x - centerX;\n    const relY = -(y - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const hourAngle = Math.floor((angle + 15) / 30) % 12;\n    const hour = hourAngle === 0 ? 12 : hourAngle;\n    \n    const tearPos = getPosition(hour, tearRadius);\n    const dx = relX - tearPos.x;\n    const dy = -relY - tearPos.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    \n    return distance <= tearHitRadius;\n  }, [isTouchDevice]);\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n  \n  const segmentToHour = (segment) => {\n    // Each hour on a clock face is represented by 5 segments (60 minutes / 12 hours)\n    const hour = Math.floor(segment / 5) % 12;\n    return hour === 0 ? 12 : hour; // Convert 0 to 12 for 12 o'clock\n  };\n  \n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRef.current.getBoundingClientRect().top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const segment = degreeToSegment(angle);\n\n    if (isTouchDevice) {\n      // Snap to nearest segment for mobile\n      const snappedSegment = Math.round(segment / (60 / 12)) * (60 / 12);\n      return snappedSegment % 60;\n    }\n\n    return segment;\n  }, [isTouchDevice]);\n\n  const handleDrawingStart = useCallback((e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    \n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (segment !== null) {\n      setIsDrawing(true);\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    }\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    \n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== null && currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback((hour) => (e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n\n  const effectiveInnerRadius = isTouchDevice ? mobileInnerRadius : innerRadius;\n\n  return (\n    <div className={`relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`}\n      style={{\n        width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: readOnly ? \"200px\" : \"200px\",\n        maxWidth: readOnly ? \"200px\" : \"500px\",\n      }}\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      <svg\n        ref={svgRef}\n        viewBox=\"-110 -110 220 220\"\n        className=\"w-full h-full\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        onMouseDown={handleDrawingStart}\n        onMouseMove={handleDrawing}\n        onMouseUp={handleDrawingEnd}\n        onMouseLeave={handleDrawingEnd}\n        onTouchStart={handleDrawingStart}\n        onTouchMove={handleDrawing}\n        onTouchEnd={handleDrawingEnd}\n      >\n        {/* Background and grid circles */}\n        <g className=\"pointer-events-none\">\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n          <circle cx=\"0\" cy=\"0\" r={effectiveInnerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n        </g>\n\n        {/* Detachment segments layer */}\n        <g className=\"pointer-events-auto\">\n          {[...Array(segmentCount)].map((_, i) => {\n            // Calculate the logical segment index for the displayed segment\n            const logicalSegmentStart = Math.floor(i * (60 / segmentCount));\n            const logicalSegmentEnd = Math.floor((i + 1) * (60 / segmentCount));\n\n            // Determine if any logical segment within this range is selected\n            const isHighlighted = detachmentSegments.some(\n              (segment) => segment >= logicalSegmentStart && segment < logicalSegmentEnd\n            );\n\n            const degreeStart = segmentToDegree(logicalSegmentStart);\n            const degreeEnd = segmentToDegree(logicalSegmentEnd);\n            const posStart = polarToCartesian(degreeStart, effectiveInnerRadius);\n            const posOuterStart = polarToCartesian(degreeStart, outerRadius);\n            const posEnd = polarToCartesian(degreeEnd, effectiveInnerRadius);\n            const posOuterEnd = polarToCartesian(degreeEnd, outerRadius);\n\n            return (\n              <path\n                key={`segment-${i}`}\n                d={`M ${posStart.x} ${posStart.y} \n                    L ${posOuterStart.x} ${posOuterStart.y} \n                    A ${outerRadius} ${outerRadius} 0 0 1 ${posOuterEnd.x} ${posOuterEnd.y}\n                    L ${posEnd.x} ${posEnd.y}\n                    A ${effectiveInnerRadius} ${effectiveInnerRadius} 0 0 0 ${posStart.x} ${posStart.y}`}\n                fill={isHighlighted ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                className={`cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`}\n              />\n            );\n          })}\n        </g>\n\n        {/* Tear markers layer */}\n        <g className=\"pointer-events-auto\">\n          {[...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i;\n            const visualPos = getPosition(hour, tearRadius);\n            const isSelected = selectedHours.includes(hour);\n\n            return (\n              <g\n                key={`tear-${hour}`}\n                onClick={!readOnly ? (e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  onTearToggle(hour);\n                } : undefined}\n                onTouchStart={isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined}\n                onTouchEnd={isTouchDevice && !readOnly ? handleTouchEnd : undefined}\n                onMouseEnter={!readOnly ? () => onHoverChange(hour) : undefined}\n                onMouseLeave={!readOnly ? () => onHoverChange(null) : undefined}\n                style={{\n                  cursor: readOnly ? 'default' : 'pointer'\n                }}\n              >\n                {/* Invisible larger hit area for mobile */}\n                {isTouchDevice && !readOnly && (\n                  <circle\n                    cx={visualPos.x}\n                    cy={visualPos.y}\n                    r={tearHitRadius}\n                    fill=\"transparent\"\n                    className=\"pointer-events-auto\"\n                  />\n                )}\n                \n                {isSelected ? (\n                  <path\n                    {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                    style={getStyles(hour, hoveredHour, true)}\n                  />\n                ) : (\n                  <circle\n                    cx={visualPos.x}\n                    cy={visualPos.y}\n                    r=\"12\"\n                    style={getStyles(hour, hoveredHour, false)}\n                  />\n                )}\n              </g>\n            );\n          })}\n        </g>\n\n        {/* 12 o'clock indicator */}\n        <line\n          className=\"pointer-events-none\"\n          x1=\"0\"\n          y1={-outerRadius}\n          x2=\"0\"\n          y2={-(outerRadius + indicatorExtension)}\n          stroke=\"#666\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default ClockFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}