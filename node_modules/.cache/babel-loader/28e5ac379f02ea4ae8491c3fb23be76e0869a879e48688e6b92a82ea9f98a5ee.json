{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { segmentToClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const mobileInnerRadius = 40;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20;\n  const indicatorExtension = 1;\n  const LONG_PRESS_DURATION = 500; // ms\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [touchStartTime, setTouchStartTime] = useState(null);\n  const [touchStartPosition, setTouchStartPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    setIsTouchDevice(isMobile && ('ontouchstart' in window || navigator.maxTouchPoints > 0));\n  }, []);\n  const segmentCount = isTouchDevice ? 12 : 60;\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n\n  // Check if a point is within tear hit area\n  const isWithinTearArea = useCallback((x, y) => {\n    if (!isTouchDevice) return false;\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = x - centerX;\n    const relY = -(y - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const hourAngle = Math.floor((angle + 15) / 30) % 12;\n    const hour = hourAngle === 0 ? 12 : hourAngle;\n    const tearPos = getPosition(hour, tearRadius);\n    const dx = relX - tearPos.x;\n    const dy = -relY - tearPos.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance <= tearHitRadius;\n  }, [isTouchDevice]);\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n  const segmentToHour = segment => {\n    // Each hour on a clock face is represented by 5 segments (60 minutes / 12 hours)\n    const hour = Math.floor(segment / 5) % 12;\n    return hour === 0 ? 12 : hour; // Convert 0 to 12 for 12 o'clock\n  };\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRef.current.getBoundingClientRect().top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const segment = degreeToSegment(angle);\n    if (isTouchDevice) {\n      // Snap to nearest segment for mobile\n      const snappedSegment = Math.round(segment / (60 / 12)) * (60 / 12);\n      return snappedSegment % 60;\n    }\n    return segment;\n  }, [isTouchDevice]);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    if (readOnly) return;\n    e.preventDefault();\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (segment !== null) {\n      setIsDrawing(true);\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    }\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== null && currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback(hour => e => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n  const effectiveInnerRadius = isTouchDevice ? mobileInnerRadius : innerRadius;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`,\n      style: {\n        width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: readOnly ? \"200px\" : \"200px\",\n        maxWidth: readOnly ? \"200px\" : \"500px\",\n        margin: \"0 auto\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: outerRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: middleRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: effectiveInnerRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-auto\",\n          children: [...Array(segmentCount)].map((_, i) => {\n            // Calculate the logical segment index for the displayed segment\n            const logicalSegmentStart = Math.floor(i * (60 / segmentCount));\n            const logicalSegmentEnd = Math.floor((i + 1) * (60 / segmentCount));\n\n            // Determine if any logical segment within this range is selected\n            const isHighlighted = detachmentSegments.some(segment => segment >= logicalSegmentStart && segment < logicalSegmentEnd);\n            const degreeStart = segmentToDegree(logicalSegmentStart);\n            const degreeEnd = segmentToDegree(logicalSegmentEnd);\n            const posStart = polarToCartesian(degreeStart, effectiveInnerRadius);\n            const posOuterStart = polarToCartesian(degreeStart, outerRadius);\n            const posEnd = polarToCartesian(degreeEnd, effectiveInnerRadius);\n            const posOuterEnd = polarToCartesian(degreeEnd, outerRadius);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${posStart.x} ${posStart.y} \n                      L ${posOuterStart.x} ${posOuterStart.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${posOuterEnd.x} ${posOuterEnd.y}\n                      L ${posEnd.x} ${posEnd.y}\n                      A ${effectiveInnerRadius} ${effectiveInnerRadius} 0 0 0 ${posStart.x} ${posStart.y}`,\n              fill: isHighlighted ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: `cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-auto\",\n          children: [...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i;\n            const visualPos = getPosition(hour, tearRadius);\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              onClick: !readOnly ? e => {\n                e.preventDefault();\n                e.stopPropagation();\n                onTearToggle(hour);\n              } : undefined,\n              onTouchStart: isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined,\n              onTouchEnd: isTouchDevice && !readOnly ? handleTouchEnd : undefined,\n              onMouseEnter: !readOnly ? () => onHoverChange(hour) : undefined,\n              onMouseLeave: !readOnly ? () => onHoverChange(null) : undefined,\n              style: {\n                cursor: readOnly ? 'default' : 'pointer'\n              },\n              children: [isTouchDevice && !readOnly && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: tearHitRadius,\n                fill: \"transparent\",\n                className: \"pointer-events-auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 21\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"pointer-events-none\",\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"urqUUwlwnMn/2rrw2UbTMS1TJ3A=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","segmentToClockHour","clockHourToSegmentsMap","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","onHoverChange","onTearToggle","onSegmentToggle","readOnly","_s","outerRadius","innerRadius","mobileInnerRadius","middleRadius","Math","floor","tearRadius","tearHitRadius","indicatorExtension","LONG_PRESS_DURATION","isDrawing","setIsDrawing","lastPosition","setLastPosition","isTouchDevice","setIsTouchDevice","touchStartTime","setTouchStartTime","touchStartPosition","setTouchStartPosition","svgRef","isMobile","test","navigator","userAgent","window","maxTouchPoints","segmentCount","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segmentToDegree","segment","isWithinTearArea","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","hourAngle","hour","tearPos","getPosition","dx","dy","distance","sqrt","styles","transition","tear","default","fill","stroke","strokeWidth","hover","circle","getStyles","isSelected","isHovered","createTearPath","tearPath","d","transform","radius","point","segmentToHour","getSegmentFromPoint","clientX","clientY","snappedSegment","round","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTouchStart","stopPropagation","timer","setTimeout","setLongPressTimer","handleTouchEnd","longPressTimer","clearTimeout","effectiveInnerRadius","className","children","style","aspectRatio","minWidth","maxWidth","margin","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","logicalSegmentStart","logicalSegmentEnd","isHighlighted","some","degreeStart","degreeEnd","posStart","posOuterStart","posEnd","posOuterEnd","visualPos","includes","onClick","undefined","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport {\n  segmentToClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const mobileInnerRadius = 40;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20;\n  const indicatorExtension = 1;\n  const LONG_PRESS_DURATION = 500; // ms\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [touchStartTime, setTouchStartTime] = useState(null);\n  const [touchStartPosition, setTouchStartPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    setIsTouchDevice(isMobile && ('ontouchstart' in window || navigator.maxTouchPoints > 0));\n  }, []);\n\n  const segmentCount = isTouchDevice ? 12 : 60;\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n  // Check if a point is within tear hit area\n  const isWithinTearArea = useCallback((x, y) => {\n    if (!isTouchDevice) return false;\n    \n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = x - centerX;\n    const relY = -(y - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const hourAngle = Math.floor((angle + 15) / 30) % 12;\n    const hour = hourAngle === 0 ? 12 : hourAngle;\n    \n    const tearPos = getPosition(hour, tearRadius);\n    const dx = relX - tearPos.x;\n    const dy = -relY - tearPos.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    \n    return distance <= tearHitRadius;\n  }, [isTouchDevice]);\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n  \n  const segmentToHour = (segment) => {\n    // Each hour on a clock face is represented by 5 segments (60 minutes / 12 hours)\n    const hour = Math.floor(segment / 5) % 12;\n    return hour === 0 ? 12 : hour; // Convert 0 to 12 for 12 o'clock\n  };\n  \n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRef.current.getBoundingClientRect().top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    const segment = degreeToSegment(angle);\n\n    if (isTouchDevice) {\n      // Snap to nearest segment for mobile\n      const snappedSegment = Math.round(segment / (60 / 12)) * (60 / 12);\n      return snappedSegment % 60;\n    }\n\n    return segment;\n  }, [isTouchDevice]);\n\n  const handleDrawingStart = useCallback((e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    \n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (segment !== null) {\n      setIsDrawing(true);\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    }\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    \n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== null && currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback((hour) => (e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n\n  const effectiveInnerRadius = isTouchDevice ? mobileInnerRadius : innerRadius;\n\n  return (\n    <div className=\"flex justify-center items-center w-full\">\n      <div \n        className={`relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`}\n        style={{\n          width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: readOnly ? \"200px\" : \"200px\",\n          maxWidth: readOnly ? \"200px\" : \"500px\",\n          margin: \"0 auto\"\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Background and grid circles */}\n          <g className=\"pointer-events-none\">\n            <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n            <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n            <circle cx=\"0\" cy=\"0\" r={effectiveInnerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          </g>\n\n          {/* Detachment segments layer */}\n          <g className=\"pointer-events-auto\">\n            {[...Array(segmentCount)].map((_, i) => {\n              // Calculate the logical segment index for the displayed segment\n              const logicalSegmentStart = Math.floor(i * (60 / segmentCount));\n              const logicalSegmentEnd = Math.floor((i + 1) * (60 / segmentCount));\n\n              // Determine if any logical segment within this range is selected\n              const isHighlighted = detachmentSegments.some(\n                (segment) => segment >= logicalSegmentStart && segment < logicalSegmentEnd\n              );\n\n              const degreeStart = segmentToDegree(logicalSegmentStart);\n              const degreeEnd = segmentToDegree(logicalSegmentEnd);\n              const posStart = polarToCartesian(degreeStart, effectiveInnerRadius);\n              const posOuterStart = polarToCartesian(degreeStart, outerRadius);\n              const posEnd = polarToCartesian(degreeEnd, effectiveInnerRadius);\n              const posOuterEnd = polarToCartesian(degreeEnd, outerRadius);\n\n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${posStart.x} ${posStart.y} \n                      L ${posOuterStart.x} ${posOuterStart.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${posOuterEnd.x} ${posOuterEnd.y}\n                      L ${posEnd.x} ${posEnd.y}\n                      A ${effectiveInnerRadius} ${effectiveInnerRadius} 0 0 0 ${posStart.x} ${posStart.y}`}\n                  fill={isHighlighted ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className={`cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`}\n                />\n              );\n            })}\n          </g>\n\n          {/* Tear markers layer */}\n          <g className=\"pointer-events-auto\">\n            {[...Array(12)].map((_, i) => {\n              const hour = i === 0 ? 12 : i;\n              const visualPos = getPosition(hour, tearRadius);\n              const isSelected = selectedHours.includes(hour);\n\n              return (\n                <g\n                  key={`tear-${hour}`}\n                  onClick={!readOnly ? (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onTearToggle(hour);\n                  } : undefined}\n                  onTouchStart={isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined}\n                  onTouchEnd={isTouchDevice && !readOnly ? handleTouchEnd : undefined}\n                  onMouseEnter={!readOnly ? () => onHoverChange(hour) : undefined}\n                  onMouseLeave={!readOnly ? () => onHoverChange(null) : undefined}\n                  style={{\n                    cursor: readOnly ? 'default' : 'pointer'\n                  }}\n                >\n                  {/* Invisible larger hit area for mobile */}\n                  {isTouchDevice && !readOnly && (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r={tearHitRadius}\n                      fill=\"transparent\"\n                      className=\"pointer-events-auto\"\n                    />\n                  )}\n                  \n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            className=\"pointer-events-none\"\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}