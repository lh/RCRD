{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Segment calculation functions\n  const getSegmentFromPoint = useCallback((x, y) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const dx = x - centerX;\n    const dy = -(y - centerY);\n    let angle = Math.atan2(dy, dx);\n    angle = -angle + Math.PI / 2;\n    angle = (angle * 180 / Math.PI + 360) % 360;\n    return Math.floor(angle / 6);\n  }, []);\n\n  // Drawing event handlers\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    console.log('Drawing Start:', {\n      segment\n    });\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      console.log('Drawing Move:', {\n        lastPosition,\n        currentSegment\n      });\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    console.log('Drawing End');\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler for tears\n  const handleTearLongPress = useCallback(hour => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: e => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel\n    };\n  }, [onTearToggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: 'min(80vw, min(80vh, 500px))',\n        aspectRatio: '1',\n        minWidth: '200px',\n        maxWidth: '500px'\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const nextSegment = (i + 1) % 60;\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                                       L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                                       A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                                       L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                                       A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`,\n              fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\"\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), [...Array(60)].map((_, i) => {\n          const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            x: pos.x,\n            y: pos.y,\n            textAnchor: \"middle\",\n            alignmentBaseline: \"middle\",\n            fontSize: \"6\",\n            fill: \"#666\",\n            children: i\n          }, `debug-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i + 1;\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? handleTearLongPress(hour) : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: 'pointer'\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(ClockFace, \"Uy+H0dy2aI7YeAR/EOLSd72XEdY=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","getPosition","getSegmentPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","getSegmentFromPoint","x","y","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","dy","angle","atan2","PI","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","segment","clientX","clientY","console","log","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTearLongPress","hour","timeout","start","setTimeout","cancel","clearTimeout","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","onTouchCancel","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","nextSegment","d","includes","pos","textAnchor","alignmentBaseline","fontSize","visualPos","interactionPos","isSelected","onClick","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\n\nconst ClockFace = ({\n    selectedHours,\n    detachmentSegments,\n    hoveredHour,\n    isTouchDevice,\n    onSegmentToggle,\n    onTearToggle,\n    onHoverChange\n}) => {\n    // Constants\n    const outerRadius = 110;\n    const innerRadius = 65;\n    const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n    const tearRadius = middleRadius + 12;\n    const indicatorExtension = 10;\n\n    // State\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [lastPosition, setLastPosition] = useState(null);\n    const svgRef = useRef(null);\n\n    // Segment calculation functions\n    const getSegmentFromPoint = useCallback((x, y) => {\n        const svgRect = svgRef.current.getBoundingClientRect();\n        const centerX = svgRect.left + svgRect.width / 2;\n        const centerY = svgRect.top + svgRect.height / 2;\n        \n        const dx = x - centerX;\n        const dy = -(y - centerY);\n        \n        let angle = Math.atan2(dy, dx);\n        angle = (-angle + Math.PI/2);\n        angle = (angle * 180 / Math.PI + 360) % 360;\n        \n        return Math.floor(angle / 6);\n    }, []);\n\n    // Drawing event handlers\n    const handleDrawingStart = useCallback((e) => {\n        e.preventDefault();\n        setIsDrawing(true);\n        const touch = e.touches?.[0] || e;\n        const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        console.log('Drawing Start:', { segment });\n        setLastPosition(segment);\n        onSegmentToggle(segment);\n    }, [getSegmentFromPoint, onSegmentToggle]);\n\n    const handleDrawing = useCallback((e) => {\n        if (!isDrawing) return;\n        e.preventDefault();\n        \n        const touch = e.touches?.[0] || e;\n        const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        \n        if (currentSegment !== lastPosition) {\n            console.log('Drawing Move:', { lastPosition, currentSegment });\n            onSegmentToggle(currentSegment);\n            setLastPosition(currentSegment);\n        }\n    }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n\n    const handleDrawingEnd = useCallback((e) => {\n        if (!isDrawing) return;\n        e.preventDefault();\n        console.log('Drawing End');\n        setIsDrawing(false);\n        setLastPosition(null);\n    }, [isDrawing]);\n\n    // Long press handler for tears\n    const handleTearLongPress = useCallback((hour) => {\n        let timeout;\n        \n        const start = () => {\n            timeout = setTimeout(() => {\n                onTearToggle(hour);\n            }, 500);\n        };\n        \n        const cancel = () => {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        };\n\n        return {\n            onMouseDown: start,\n            onTouchStart: (e) => {\n                e.preventDefault();\n                start();\n            },\n            onMouseUp: cancel,\n            onMouseLeave: cancel,\n            onTouchEnd: cancel,\n            onTouchCancel: cancel\n        };\n    }, [onTearToggle]);\n\n    return (\n        <div className=\"flex justify-center\">\n            <div \n                className=\"relative touch-none select-none\"\n                style={{\n                    width: 'min(80vw, min(80vh, 500px))',\n                    aspectRatio: '1',\n                    minWidth: '200px',\n                    maxWidth: '500px'\n                }}\n                onContextMenu={(e) => e.preventDefault()}\n            >\n                <svg \n                    ref={svgRef}\n                    viewBox=\"-110 -110 220 220\" \n                    className=\"w-full h-full\"\n                    preserveAspectRatio=\"xMidYMid meet\"\n                    onMouseDown={handleDrawingStart}\n                    onMouseMove={handleDrawing}\n                    onMouseUp={handleDrawingEnd}\n                    onMouseLeave={handleDrawingEnd}\n                    onTouchStart={handleDrawingStart}\n                    onTouchMove={handleDrawing}\n                    onTouchEnd={handleDrawingEnd}\n                >\n                    {/* Grid circles */}\n                    <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n                    <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\"/>\n                    <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n\n                    {/* Detachment segments */}\n                    <g>\n                        {[...Array(60)].map((_, i) => {\n                            const nextSegment = (i + 1) % 60;\n                            return (\n                                <path\n                                    key={`segment-${i}`}\n                                    d={`M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                                       L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                                       A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                                       L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                                       A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`}\n                                    fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                                    className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                                />\n                            );\n                        })}\n                    </g>\n\n                    {/* Debug numbers */}\n                    {[...Array(60)].map((_, i) => {\n                        const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n                        return (\n                            <text\n                                key={`debug-${i}`}\n                                x={pos.x}\n                                y={pos.y}\n                                textAnchor=\"middle\"\n                                alignmentBaseline=\"middle\"\n                                fontSize=\"6\"\n                                fill=\"#666\"\n                            >\n                                {i}\n                            </text>\n                        );\n                    })}\n\n                    {/* Tear markers */}\n                    <g>\n                        {[...Array(12)].map((_, i) => {\n                            const hour = i + 1;\n                            const visualPos = getPosition(hour, tearRadius);\n                            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n                            const isSelected = selectedHours.includes(hour);\n                            \n                            return (\n                                <g \n                                    key={`tear-${hour}`}\n                                    {...(isTouchDevice ? handleTearLongPress(hour) : { onClick: () => onTearToggle(hour) })}\n                                    onMouseEnter={() => onHoverChange(hour)}\n                                    onMouseLeave={() => onHoverChange(null)}\n                                    style={{ cursor: 'pointer' }}\n                                    data-hour={hour}\n                                >\n                                    {isTouchDevice && (\n                                        <circle\n                                            cx={interactionPos.x}\n                                            cy={interactionPos.y}\n                                            r=\"12\"\n                                            fill=\"transparent\"\n                                        />\n                                    )}\n                                    \n                                    {isSelected ? (\n                                        <path\n                                            {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                                            style={getStyles(hour, hoveredHour, true)}\n                                        />\n                                    ) : (\n                                        <circle\n                                            cx={visualPos.x}\n                                            cy={visualPos.y}\n                                            r=\"12\"\n                                            style={getStyles(hour, hoveredHour, false)}\n                                        />\n                                    )}\n                                </g>\n                            );\n                        })}\n                    </g>\n\n                    {/* 12 o'clock indicator */}\n                    <line \n                        x1=\"0\" \n                        y1={-outerRadius} \n                        x2=\"0\" \n                        y2={-(outerRadius + indicatorExtension)} \n                        stroke=\"#666\" \n                        strokeWidth=\"2\"\n                    />\n                </svg>\n            </div>\n        </div>\n    );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}