{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useLongPress = (onLongPress, onClick, {\n  shouldPreventDefault = true,\n  delay = 500\n} = {}) => {\n  _s();\n  const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n  const preventDefault = React.useCallback(event => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n  const start = React.useCallback(event => {\n    // For touch events, we need to get the element differently\n    const element = event.type.includes('touch') ? document.elementFromPoint(event.touches[0].clientX, event.touches[0].clientY) : event.currentTarget;\n    if (shouldPreventDefault && element) {\n      element.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = element;\n    }\n    timeout.current = setTimeout(() => {\n      onLongPress(element);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault, preventDefault]);\n  const clear = React.useCallback((event, shouldTriggerClick = true) => {\n    timeout.current && clearTimeout(timeout.current);\n    shouldTriggerClick && !longPressTriggered && (onClick === null || onClick === void 0 ? void 0 : onClick(event));\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered, preventDefault]);\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: e => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n_s(useLongPress, \"NHdUO3uZeF4j8gnciUBsjuZws/4=\");\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s2();\n  const [isDrawing, setIsDrawing] = React.useState(false);\n  const [lastPosition, setLastPosition] = React.useState(null);\n  const svgRef = React.useRef(null);\n\n  // Convert screen coordinates to polar coordinates\n  const getSegmentFromPoint = (x, y) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.width / 2;\n    const centerY = svgRect.height / 2;\n\n    // Convert to relative coordinates (-1 to 1)\n    const relX = (x - svgRect.left - centerX) / centerX;\n    const relY = (y - svgRect.top - centerY) / centerY;\n\n    // Convert to angle (0-360)\n    let angle = Math.atan2(relY, relX) * (180 / Math.PI);\n    if (angle < 0) angle += 360;\n\n    // Convert to segment (0-59)\n    return Math.floor(angle / 360 * 60);\n  };\n\n  // Get segments between two points\n  const getSegmentsBetween = (start, end) => {\n    const segments = new Set();\n\n    // Ensure we're going the shorter way around the circle\n    let diff = (end - start + 60) % 60;\n    if (diff > 30) {\n      diff = diff - 60;\n    }\n    const step = Math.sign(diff);\n    let current = start;\n    do {\n      segments.add(current);\n      current = (current + step + 60) % 60;\n    } while (current !== (end + step + 60) % 60);\n    return Array.from(segments);\n  };\n  const handleDrawingStart = e => {\n    var _e$touches;\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  };\n  const handleDrawing = e => {\n    var _e$touches2;\n    if (!isDrawing || !lastPosition) return;\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n      segmentsBetween.forEach(segment => onSegmentToggle(segment));\n      setLastPosition(currentSegment);\n    }\n  };\n  const handleDrawingEnd = () => {\n    setIsDrawing(false);\n    setLastPosition(null);\n  };\n\n  // Long press handlers for tear markers\n  const longPressHandlers = useLongPress(element => {\n    // Safely get the hour from the element or its parent\n    const hourElement = element === null || element === void 0 ? void 0 : element.closest('[data-hour]');\n    const hour = hourElement ? parseInt(hourElement.dataset.hour) : null;\n    if (hour) {\n      onTearToggle(hour);\n    }\n  }, null, {\n    delay: 500\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: 'min(80vw, min(80vh, 500px))',\n        aspectRatio: '1',\n        minWidth: '200px',\n        maxWidth: '500px'\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseUp: handleDrawingEnd,\n        onTouchEnd: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchMove: handleDrawing,\n        onMouseMove: handleDrawing,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const isDetachmentSelected = detachmentSegments.includes(i);\n            const nextSegment = (i + 1) % 60;\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                      L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                      L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`,\n              fill: isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\",\n              onMouseDown: handleDrawingStart,\n              onTouchStart: handleDrawingStart,\n              \"data-segment-id\": i\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i + 1;\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? longPressHandlers : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: 'pointer'\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\",\n                className: \"touch-target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s2(ClockFace, \"lmVQPKOTKQH4yyIdOkPSiy6OPkM=\", false, function () {\n  return [useLongPress];\n});\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","getPosition","getSegmentPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","_s","longPressTriggered","setLongPressTriggered","useState","timeout","useRef","target","preventDefault","useCallback","event","start","element","type","includes","document","elementFromPoint","touches","clientX","clientY","currentTarget","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","e","onTouchEnd","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s2","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","getSegmentFromPoint","x","y","svgRect","getBoundingClientRect","centerX","width","centerY","height","relX","left","relY","top","angle","Math","atan2","PI","floor","getSegmentsBetween","end","segments","Set","diff","step","sign","add","Array","from","handleDrawingStart","_e$touches","touch","segment","handleDrawing","_e$touches2","currentSegment","segmentsBetween","forEach","handleDrawingEnd","longPressHandlers","hourElement","closest","hour","parseInt","dataset","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onTouchMove","onMouseMove","cx","cy","r","outerRadius","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","middleRadius","innerRadius","map","_","i","isDetachmentSelected","nextSegment","d","visualPos","tearRadius","interactionPos","isSelected","onMouseEnter","cursor","x1","y1","x2","y2","indicatorExtension","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\n\n\n\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 500 } = {}) => {\n  const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n\n  const preventDefault = React.useCallback((event) => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n\n  const start = React.useCallback(\n    (event) => {\n      // For touch events, we need to get the element differently\n      const element = event.type.includes('touch') \n        ? document.elementFromPoint(\n            event.touches[0].clientX,\n            event.touches[0].clientY\n          )\n        : event.currentTarget;\n\n      if (shouldPreventDefault && element) {\n        element.addEventListener('touchend', preventDefault, {\n          passive: false\n        });\n        target.current = element;\n      }\n\n      timeout.current = setTimeout(() => {\n        onLongPress(element);\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault, preventDefault]\n  );\n\n  const clear = React.useCallback(\n    (event, shouldTriggerClick = true) => {\n      timeout.current && clearTimeout(timeout.current);\n      shouldTriggerClick && !longPressTriggered && onClick?.(event);\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener('touchend', preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered, preventDefault]\n  );\n\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: (e) => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n\nconst ClockFace = ({\n    selectedHours,\n    detachmentSegments,\n    hoveredHour,\n    isTouchDevice,\n    onSegmentToggle,\n    onTearToggle,\n    onHoverChange\n  }) => {\n    const [isDrawing, setIsDrawing] = React.useState(false);\n    const [lastPosition, setLastPosition] = React.useState(null);\n    const svgRef = React.useRef(null);\n  \n    // Convert screen coordinates to polar coordinates\n    const getSegmentFromPoint = (x, y) => {\n      const svgRect = svgRef.current.getBoundingClientRect();\n      const centerX = svgRect.width / 2;\n      const centerY = svgRect.height / 2;\n      \n      // Convert to relative coordinates (-1 to 1)\n      const relX = (x - svgRect.left - centerX) / centerX;\n      const relY = (y - svgRect.top - centerY) / centerY;\n      \n      // Convert to angle (0-360)\n      let angle = Math.atan2(relY, relX) * (180 / Math.PI);\n      if (angle < 0) angle += 360;\n      \n      // Convert to segment (0-59)\n      return Math.floor((angle / 360) * 60);\n    };\n  \n    // Get segments between two points\n    const getSegmentsBetween = (start, end) => {\n      const segments = new Set();\n      \n      // Ensure we're going the shorter way around the circle\n      let diff = (end - start + 60) % 60;\n      if (diff > 30) {\n        diff = diff - 60;\n      }\n      \n      const step = Math.sign(diff);\n      let current = start;\n      \n      do {\n        segments.add(current);\n        current = (current + step + 60) % 60;\n      } while (current !== (end + step + 60) % 60);\n      \n      return Array.from(segments);\n    };\n  \n    const handleDrawingStart = (e) => {\n      setIsDrawing(true);\n      const touch = e.touches?.[0] || e;\n      const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    };\n  \n    const handleDrawing = (e) => {\n      if (!isDrawing || !lastPosition) return;\n      \n      const touch = e.touches?.[0] || e;\n      const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n      \n      if (currentSegment !== lastPosition) {\n        const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n        segmentsBetween.forEach(segment => onSegmentToggle(segment));\n        setLastPosition(currentSegment);\n      }\n    };\n  \n    const handleDrawingEnd = () => {\n      setIsDrawing(false);\n      setLastPosition(null);\n    };\n\n  // Long press handlers for tear markers\n  const longPressHandlers = useLongPress(\n    (element) => {\n      // Safely get the hour from the element or its parent\n      const hourElement = element?.closest('[data-hour]');\n      const hour = hourElement ? parseInt(hourElement.dataset.hour) : null;\n      if (hour) {\n        onTearToggle(hour);\n      }\n    },\n    null,\n    { delay: 500 }\n  );\n\n  return (\n    <div className=\"flex justify-center\">\n      <div \n        className=\"relative touch-none select-none\"\n        style={{\n          width: 'min(80vw, min(80vh, 500px))',\n          aspectRatio: '1',\n          minWidth: '200px',\n          maxWidth: '500px'\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg \n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\" \n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseUp={handleDrawingEnd}\n          onTouchEnd={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchMove={handleDrawing}\n          onMouseMove={handleDrawing}\n        >\n          {/* Grid circles */}\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\"/>\n          <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n\n          {/* Detachment segments */}\n          <g>\n            {[...Array(60)].map((_, i) => {\n              const isDetachmentSelected = detachmentSegments.includes(i);\n              const nextSegment = (i + 1) % 60;\n              \n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                      L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                      L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`}\n                  fill={isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                  onMouseDown={handleDrawingStart}\n                  onTouchStart={handleDrawingStart}\n                  data-segment-id={i}\n                />\n              );\n            })}\n          </g>\n\n          {/* Tear markers */}\n          <g>\n            {[...Array(12)].map((_, i) => {\n              const hour = i + 1;\n              const visualPos = getPosition(hour, tearRadius);\n              const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n              const isSelected = selectedHours.includes(hour);\n              \n              return (\n                <g \n                  key={`tear-${hour}`}\n                  {...(isTouchDevice ? longPressHandlers : { onClick: () => onTearToggle(hour) })}\n                  onMouseEnter={() => onHoverChange(hour)}\n                  onMouseLeave={() => onHoverChange(null)}\n                  style={{ cursor: 'pointer' }}\n                  data-hour={hour}\n                >\n                  {isTouchDevice && (\n                    <circle\n                      cx={interactionPos.x}\n                      cy={interactionPos.y}\n                      r=\"12\"\n                      fill=\"transparent\"\n                      className=\"touch-target\"\n                    />\n                  )}\n                  \n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n\n            {/* 12 o'clock indicator */}\n            <line \n            x1=\"0\" \n            y1={-outerRadius} \n            x2=\"0\" \n            y2={-(outerRadius + indicatorExtension)} \n            stroke=\"#666\" \n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}