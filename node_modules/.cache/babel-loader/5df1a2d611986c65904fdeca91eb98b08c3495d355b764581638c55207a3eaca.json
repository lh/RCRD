{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { segmentToClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 15;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n  const formatHourRange = range => {\n    if (!Array.isArray(range)) return '';\n    if (range.length === 0) return '';\n    if (range.length === 1) return `${range[0]}`;\n    return `${range[0]}-${range[range.length - 1]}`;\n  };\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle,\n      debug: {\n        hour,\n        clockAngle: angle\n      }\n    };\n  };\n\n  // Long press handler for tears\n  const handleTearLongPress = useCallback(hour => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: e => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel\n    };\n  }, [onTearToggle]);\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Selection description logic\n  // Updated grouping function for detachment ranges\n  const groupConsecutive = numbers => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n      const currSegments = clockHourToSegmentsMap.get(curr) || [];\n      const prevSegments = clockHourToSegmentsMap.get(prev) || [];\n\n      // Check if hours are consecutive, including 12-1 transition\n      const isConsecutive = curr === prev + 1 || prev === 12 && curr === 1;\n\n      // Check for segments presence\n      const hasPrevSegments = prevSegments.some(seg => detachmentSegments.includes(seg));\n      const hasCurrSegments = currSegments.some(seg => detachmentSegments.includes(seg));\n\n      // Hours are connected if they're consecutive and both have segments\n      const isConnected = isConsecutive && hasPrevSegments && hasCurrSegments;\n      if (isConnected) {\n        range.push(curr);\n      } else {\n        // Only add the range if it has any segments\n        if (hasPrevSegments) {\n          ranges.push(range);\n        }\n        // Start new range if current hour has segments\n        if (hasCurrSegments) {\n          range = [curr];\n        } else {\n          range = [];\n        }\n      }\n    }\n\n    // Special handling for last range - check if it connects back to the beginning\n    if (range.length > 0) {\n      const lastHour = range[range.length - 1];\n      const firstHour = sorted[0];\n      const lastHourSegments = clockHourToSegmentsMap.get(lastHour) || [];\n      const firstHourSegments = clockHourToSegmentsMap.get(firstHour) || [];\n\n      // If the last hour is 12 and first is 1, and both have segments, merge them\n      if (lastHour === 12 && firstHour === 1 && lastHourSegments.some(seg => detachmentSegments.includes(seg)) && firstHourSegments.some(seg => detachmentSegments.includes(seg))) {\n        // Remove the first range if it exists and merge with last range\n        if (ranges.length > 0) {\n          const firstRange = ranges[0];\n          ranges[0] = [...range, ...firstRange];\n        } else {\n          ranges.push(range);\n        }\n      } else if (lastHourSegments.some(seg => detachmentSegments.includes(seg))) {\n        ranges.push(range);\n      }\n    }\n    return ranges.filter(range => range.length > 0);\n  };\n  const createSelectionDescription = () => {\n    // Handle tears (remains unchanged)\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0 ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock` : 'No breaks marked';\n\n    // Handle detachment with updated logic\n    const affectedHours = Array.from(clockHourToSegmentsMap.entries()).filter(([_, segments]) => segments.some(seg => detachmentSegments.includes(seg))).map(([hour]) => hour);\n    const detachmentRanges = groupConsecutive(affectedHours);\n    const detachmentDescription = detachmentRanges.length > 0 ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock` : 'No detachment marked';\n    return {\n      tearDescription,\n      detachmentDescription\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: \"200px\",\n        maxWidth: \"500px\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: outerRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: middleRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"0\",\n            cy: \"0\",\n            r: innerRadius,\n            fill: \"none\",\n            stroke: \"#e5e5e5\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-auto\",\n          style: {\n            pointerEvents: selectedHours.length > 0 ? 'none' : 'auto'\n          },\n          children: [...Array(60)].map((_, i) => {\n            const degree = segmentToDegree(i);\n            const pos = polarToCartesian(degree, innerRadius);\n            const posOuter = polarToCartesian(degree, outerRadius);\n            const nextDegree = segmentToDegree(i + 1);\n            const nextPos = polarToCartesian(nextDegree, innerRadius);\n            const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${pos.x} ${pos.y} \n            L ${posOuter.x} ${posOuter.y} \n            A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n            L ${nextPos.x} ${nextPos.y}\n            A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`,\n              fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\",\n              style: {\n                pointerEvents: selectedHours.length > 0 ? 'none' : 'auto'\n              }\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"pointer-events-auto\",\n          style: {\n            pointerEvents: 'auto'\n          },\n          children: [...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i;\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? handleTearLongPress(hour) : {\n                onClick: e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  onTearToggle(hour);\n                },\n                onMouseDown: e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                },\n                onMouseUp: e => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              }),\n              onMouseEnter: e => {\n                e.preventDefault();\n                e.stopPropagation();\n                onHoverChange(hour);\n              },\n              onMouseLeave: e => {\n                e.preventDefault();\n                e.stopPropagation();\n                onHoverChange(null);\n              },\n              style: {\n                cursor: \"pointer\",\n                pointerEvents: 'auto'\n              },\n              className: \"pointer-events-auto\",\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: visualPos.x,\n                y: visualPos.y,\n                textAnchor: \"middle\",\n                alignmentBaseline: \"middle\",\n                fontSize: \"8\",\n                fill: \"black\",\n                children: hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"pointer-events-none\",\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white rounded-lg shadow-sm p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-medium text-gray-900\",\n          children: \"Current Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: (() => {\n            const {\n              tearDescription,\n              detachmentDescription\n            } = createSelectionDescription();\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: tearDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: detachmentDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 pt-2 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Debug Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Raw segments: \", detachmentSegments.sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Mapped clock hours: \", Array.from(new Set(detachmentSegments.map(segmentToClockHour))).sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Complete hours: \", Array.from(clockHourToSegmentsMap.entries()).filter(([_, segments]) => segments.every(seg => detachmentSegments.includes(seg))).map(([hour]) => hour).sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Partial hours: \", Array.from(clockHourToSegmentsMap.entries()).filter(([_, segments]) => {\n                const hasAny = segments.some(seg => detachmentSegments.includes(seg));\n                const hasAll = segments.every(seg => detachmentSegments.includes(seg));\n                return hasAny && !hasAll;\n              }).map(([hour, segs]) => `${hour}:(${segs.filter(seg => detachmentSegments.includes(seg)).join(',')})`).join(' | ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"diy77ZTfSIlBqanKIBcVOVpNRt8=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","segmentToClockHour","clockHourToSegmentsMap","jsxDEV","_jsxDEV","Fragment","_Fragment","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segmentToDegree","segment","formatHourRange","range","Array","isArray","length","styles","transition","tear","default","fill","stroke","strokeWidth","hover","circle","getStyles","hour","isSelected","isHovered","createTearPath","tearPath","d","transform","getPosition","radius","point","debug","clockAngle","handleTearLongPress","timeout","start","setTimeout","cancel","clearTimeout","onMouseDown","onTouchStart","e","preventDefault","onMouseUp","onMouseLeave","onTouchEnd","onTouchCancel","getSegmentFromPoint","clientX","clientY","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","handleDrawingStart","_e$touches","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","groupConsecutive","numbers","sorted","Set","sort","a","b","ranges","i","curr","prev","currSegments","get","prevSegments","isConsecutive","hasPrevSegments","some","seg","includes","hasCurrSegments","isConnected","push","lastHour","firstHour","lastHourSegments","firstHourSegments","firstRange","filter","createSelectionDescription","tearRanges","tearDescription","map","join","affectedHours","from","entries","_","segments","detachmentRanges","detachmentDescription","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","pointerEvents","pos","posOuter","nextDegree","nextPos","nextPosOuter","visualPos","interactionPos","onClick","stopPropagation","onMouseEnter","cursor","textAnchor","alignmentBaseline","fontSize","x1","y1","x2","y2","every","hasAny","hasAll","segs","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  segmentToClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange,\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 15;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n  const formatHourRange = (range) => {\n    if (!Array.isArray(range)) return '';\n    if (range.length === 0) return '';\n    if (range.length === 1) return `${range[0]}`;\n    return `${range[0]}-${range[range.length - 1]}`;\n  };\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle,\n      debug: {\n        hour,\n        clockAngle: angle\n      }\n    };\n  };\n\n  // Long press handler for tears\n  const handleTearLongPress = useCallback((hour) => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: (e) => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel,\n    };\n  }, [onTearToggle]);\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  const handleDrawingStart = useCallback((e) => {\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Selection description logic\n  // Updated grouping function for detachment ranges\n  const groupConsecutive = (numbers) => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n      const currSegments = clockHourToSegmentsMap.get(curr) || [];\n      const prevSegments = clockHourToSegmentsMap.get(prev) || [];\n\n      // Check if hours are consecutive, including 12-1 transition\n      const isConsecutive = curr === prev + 1 || (prev === 12 && curr === 1);\n\n      // Check for segments presence\n      const hasPrevSegments = prevSegments.some(seg => detachmentSegments.includes(seg));\n      const hasCurrSegments = currSegments.some(seg => detachmentSegments.includes(seg));\n\n      // Hours are connected if they're consecutive and both have segments\n      const isConnected = isConsecutive && hasPrevSegments && hasCurrSegments;\n\n      if (isConnected) {\n        range.push(curr);\n      } else {\n        // Only add the range if it has any segments\n        if (hasPrevSegments) {\n          ranges.push(range);\n        }\n        // Start new range if current hour has segments\n        if (hasCurrSegments) {\n          range = [curr];\n        } else {\n          range = [];\n        }\n      }\n    }\n\n    // Special handling for last range - check if it connects back to the beginning\n    if (range.length > 0) {\n      const lastHour = range[range.length - 1];\n      const firstHour = sorted[0];\n      const lastHourSegments = clockHourToSegmentsMap.get(lastHour) || [];\n      const firstHourSegments = clockHourToSegmentsMap.get(firstHour) || [];\n\n      // If the last hour is 12 and first is 1, and both have segments, merge them\n      if (lastHour === 12 && firstHour === 1 &&\n        lastHourSegments.some(seg => detachmentSegments.includes(seg)) &&\n        firstHourSegments.some(seg => detachmentSegments.includes(seg))) {\n        // Remove the first range if it exists and merge with last range\n        if (ranges.length > 0) {\n          const firstRange = ranges[0];\n          ranges[0] = [...range, ...firstRange];\n        } else {\n          ranges.push(range);\n        }\n      } else if (lastHourSegments.some(seg => detachmentSegments.includes(seg))) {\n        ranges.push(range);\n      }\n    }\n\n    return ranges.filter(range => range.length > 0);\n  };\n\n\n  const createSelectionDescription = () => {\n    // Handle tears (remains unchanged)\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0\n      ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No breaks marked';\n\n    // Handle detachment with updated logic\n    const affectedHours = Array.from(clockHourToSegmentsMap.entries())\n      .filter(([_, segments]) => segments.some(seg => detachmentSegments.includes(seg)))\n      .map(([hour]) => hour);\n\n    const detachmentRanges = groupConsecutive(affectedHours);\n    const detachmentDescription = detachmentRanges.length > 0\n      ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No detachment marked';\n\n    return { tearDescription, detachmentDescription };\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <div className=\"relative touch-none select-none\"\n        style={{\n          width: \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: \"200px\",\n          maxWidth: \"500px\",\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Background and grid circles */}\n          <g className=\"pointer-events-none\">\n            <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n            <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n            <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          </g>\n\n          {/* Detachment segments layer */}\n          <g\n            className=\"pointer-events-auto\"\n            style={{ pointerEvents: selectedHours.length > 0 ? 'none' : 'auto' }}\n          >\n            {[...Array(60)].map((_, i) => {\n              const degree = segmentToDegree(i);\n              const pos = polarToCartesian(degree, innerRadius);\n              const posOuter = polarToCartesian(degree, outerRadius);\n              const nextDegree = segmentToDegree(i + 1);\n              const nextPos = polarToCartesian(nextDegree, innerRadius);\n              const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n\n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${pos.x} ${pos.y} \n            L ${posOuter.x} ${posOuter.y} \n            A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n            L ${nextPos.x} ${nextPos.y}\n            A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`}\n                  fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                  style={{ pointerEvents: selectedHours.length > 0 ? 'none' : 'auto' }}\n                />\n              );\n            })}\n          </g>\n\n          {/* Tear markers layer with enhanced event control */}\n          <g className=\"pointer-events-auto\" style={{ pointerEvents: 'auto' }}>\n            {[...Array(12)].map((_, i) => {\n              const hour = i === 0 ? 12 : i;\n              const visualPos = getPosition(hour, tearRadius);\n              const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n              const isSelected = selectedHours.includes(hour);\n\n              return (\n                <g\n                  key={`tear-${hour}`}\n                  {...(isTouchDevice\n                    ? handleTearLongPress(hour)\n                    : {\n                      onClick: (e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        onTearToggle(hour);\n                      },\n                      onMouseDown: (e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                      },\n                      onMouseUp: (e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                      }\n                    }\n                  )}\n                  onMouseEnter={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onHoverChange(hour);\n                  }}\n                  onMouseLeave={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onHoverChange(null);\n                  }}\n                  style={{\n                    cursor: \"pointer\",\n                    pointerEvents: 'auto'\n                  }}\n                  className=\"pointer-events-auto\"\n                >\n                  {isTouchDevice && (\n                    <circle\n                      cx={interactionPos.x}\n                      cy={interactionPos.y}\n                      r=\"12\"\n                      fill=\"transparent\"\n                    />\n                  )}\n\n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n\n                  {/* Hour label */}\n                  <text\n                    x={visualPos.x}\n                    y={visualPos.y}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"middle\"\n                    fontSize=\"8\"\n                    fill=\"black\"\n                  >\n                    {hour}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            className=\"pointer-events-none\"\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n\n      {/* Description panel */}\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-sm p-4\">\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900\">Current Selection:</h3>\n          <div className=\"space-y-1\">\n            {(() => {\n              const { tearDescription, detachmentDescription } = createSelectionDescription();\n              return (\n                <>\n                  <p className=\"text-sm text-gray-600\">{tearDescription}</p>\n                  <p className=\"text-sm text-gray-600\">{detachmentDescription}</p>\n                </>\n              );\n            })()}\n          </div>\n\n          <div className=\"mt-4 pt-2 border-t border-gray-200\">\n            <p className=\"text-xs font-medium text-gray-700\">Debug Information:</p>\n            <div className=\"mt-1 space-y-1\">\n              <p className=\"text-xs text-gray-600\">\n                Raw segments: {detachmentSegments.sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Mapped clock hours: {Array.from(new Set(detachmentSegments.map(segmentToClockHour))).sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Complete hours: {\n                  Array.from(clockHourToSegmentsMap.entries())\n                    .filter(([_, segments]) => segments.every(seg => detachmentSegments.includes(seg)))\n                    .map(([hour]) => hour)\n                    .sort((a, b) => a - b)\n                    .join(', ')\n                }\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Partial hours: {\n                  Array.from(clockHourToSegmentsMap.entries())\n                    .filter(([_, segments]) => {\n                      const hasAny = segments.some(seg => detachmentSegments.includes(seg));\n                      const hasAll = segments.every(seg => detachmentSegments.includes(seg));\n                      return hasAny && !hasAll;\n                    })\n                    .map(([hour, segs]) => `${hour}:(${segs.filter(seg => detachmentSegments.includes(seg)).join(',')})`)\n                    .join(' | ')\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}