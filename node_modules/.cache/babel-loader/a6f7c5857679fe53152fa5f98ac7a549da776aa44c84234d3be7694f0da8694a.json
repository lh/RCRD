{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/MinimalClockSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Controls from './Controls';\nimport ClockFace from './ClockFace';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MinimalClockSelector = ({\n  onChange\n}) => {\n  _s();\n  const [selectedHours, setSelectedHours] = useState([]);\n  const [detachmentSegments, setDetachmentSegments] = useState([]);\n  const [hoveredHour, setHoveredHour] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n\n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Handle tear marker toggles\n  const handleTearToggle = useCallback(hour => {\n    setSelectedHours(prev => prev.includes(hour) ? prev.filter(h => h !== hour) : [...prev, hour]);\n  }, []);\n\n  // Handle detachment segment toggles\n  const handleSegmentToggle = useCallback(segmentId => {\n    setDetachmentSegments(prev => prev.includes(segmentId) ? prev.filter(id => id !== segmentId) : [...prev, segmentId]);\n  }, []);\n\n  // Clear all selections\n  const handleClearAll = useCallback(() => {\n    setSelectedHours([]);\n    setDetachmentSegments([]);\n  }, []);\n\n  // Notify parent of changes\n  useEffect(() => {\n    onChange === null || onChange === void 0 ? void 0 : onChange({\n      tears: selectedHours,\n      detachment: detachmentSegments\n    });\n  }, [selectedHours, detachmentSegments, onChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full min-h-screen p-4 bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center md:items-start gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full max-w-2xl md:flex-1\",\n          children: /*#__PURE__*/_jsxDEV(ClockFace, {\n            selectedHours: selectedHours,\n            detachmentSegments: detachmentSegments,\n            hoveredHour: hoveredHour,\n            isTouchDevice: isTouchDevice,\n            onSegmentToggle: handleSegmentToggle,\n            onTearToggle: handleTearToggle,\n            onHoverChange: setHoveredHour\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed md:static bottom-4 left-1/2 landscape:left-auto landscape:right-4 transform -translate-x-1/2 md:translate-x-0 landscape:translate-x-0 md:ml-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(Controls, {\n              isTouchDevice: isTouchDevice,\n              handleClearAll: handleClearAll,\n              expandDirection: \"up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MinimalClockSelector, \"I9nSPDr9R06lyWp/8p56gh3QwHw=\");\n_c = MinimalClockSelector;\nexport default MinimalClockSelector;\nvar _c;\n$RefreshReg$(_c, \"MinimalClockSelector\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","Controls","ClockFace","jsxDEV","_jsxDEV","MinimalClockSelector","onChange","_s","selectedHours","setSelectedHours","detachmentSegments","setDetachmentSegments","hoveredHour","setHoveredHour","isTouchDevice","setIsTouchDevice","window","navigator","maxTouchPoints","handleTearToggle","hour","prev","includes","filter","h","handleSegmentToggle","segmentId","id","handleClearAll","tears","detachment","className","children","onSegmentToggle","onTearToggle","onHoverChange","fileName","_jsxFileName","lineNumber","columnNumber","expandDirection","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/MinimalClockSelector.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport Controls from './Controls';\nimport ClockFace from './ClockFace';\n\nconst MinimalClockSelector = ({ onChange }) => {\n  const [selectedHours, setSelectedHours] = useState([]);\n  const [detachmentSegments, setDetachmentSegments] = useState([]);\n  const [hoveredHour, setHoveredHour] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n\n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Handle tear marker toggles\n  const handleTearToggle = useCallback((hour) => {\n    setSelectedHours(prev => \n      prev.includes(hour) \n        ? prev.filter(h => h !== hour)\n        : [...prev, hour]\n    );\n  }, []);\n\n  // Handle detachment segment toggles\n  const handleSegmentToggle = useCallback((segmentId) => {\n    setDetachmentSegments(prev => \n      prev.includes(segmentId)\n        ? prev.filter(id => id !== segmentId)\n        : [...prev, segmentId]\n    );\n  }, []);\n\n  // Clear all selections\n  const handleClearAll = useCallback(() => {\n    setSelectedHours([]);\n    setDetachmentSegments([]);\n  }, []);\n\n  // Notify parent of changes\n  useEffect(() => {\n    onChange?.({\n      tears: selectedHours,\n      detachment: detachmentSegments\n    });\n  }, [selectedHours, detachmentSegments, onChange]);\n\n  return (\n    <div className=\"w-full min-h-screen p-4 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col md:flex-row items-center md:items-start gap-4\">\n          {/* Clock section */}\n          <div className=\"w-full max-w-2xl md:flex-1\">\n            <ClockFace\n              selectedHours={selectedHours}\n              detachmentSegments={detachmentSegments}\n              hoveredHour={hoveredHour}\n              isTouchDevice={isTouchDevice}\n              onSegmentToggle={handleSegmentToggle}\n              onTearToggle={handleTearToggle}\n              onHoverChange={setHoveredHour}\n            />\n          </div>\n\n          {/* Controls section */}\n          <div className=\"fixed md:static bottom-4 left-1/2 landscape:left-auto landscape:right-4 transform -translate-x-1/2 md:translate-x-0 landscape:translate-x-0 md:ml-8\">\n            <div className=\"relative\">\n              <Controls\n                isTouchDevice={isTouchDevice}\n                handleClearAll={handleClearAll}\n                expandDirection=\"up\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MinimalClockSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}