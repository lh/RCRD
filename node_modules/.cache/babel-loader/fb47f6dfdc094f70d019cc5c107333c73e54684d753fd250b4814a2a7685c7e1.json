{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  // Previous code remains the same until after the SVG component\n\n  // Helper function to convert segment to hour (1-12)\n  const segmentToHour = segment => {\n    return Math.floor(segment / 5) + 1;\n  };\n\n  // Helper function to get all affected hours from segments\n  const getAffectedHours = segments => {\n    const hours = new Set(segments.map(segmentToHour));\n    return Array.from(hours).sort((a, b) => a - b);\n  };\n\n  // Helper function to group consecutive numbers\n  const groupConsecutiveNumbers = numbers => {\n    if (numbers.length === 0) return [];\n    const groups = [];\n    let currentGroup = [numbers[0]];\n    for (let i = 1; i < numbers.length; i++) {\n      // Special case for 12 and 1 being consecutive\n      const isConsecutive = numbers[i] === numbers[i - 1] + 1 || numbers[i - 1] === 12 && numbers[i] === 1;\n      if (isConsecutive) {\n        currentGroup.push(numbers[i]);\n      } else {\n        groups.push(currentGroup);\n        currentGroup = [numbers[i]];\n      }\n    }\n    groups.push(currentGroup);\n    return groups;\n  };\n\n  // Helper function to format hour ranges\n  const formatHourRange = group => {\n    if (group.length === 1) return `${group[0]}`;\n    return `${group[0]}-${group[group.length - 1]}`;\n  };\n\n  // Create text description\n  const createDescription = () => {\n    // Handle tears\n    const tearGroups = groupConsecutiveNumbers(selectedHours.sort((a, b) => a - b));\n    const tearDescription = tearGroups.length > 0 ? `Tears at ${tearGroups.map(formatHourRange).join(', ')} o'clock` : 'No tears marked';\n\n    // Handle detachment\n    const affectedHours = getAffectedHours(detachmentSegments);\n    const detachmentGroups = groupConsecutiveNumbers(affectedHours);\n    const detachmentDescription = detachmentGroups.length > 0 ? `Detachment affecting ${detachmentGroups.map(formatHourRange).join(', ')} o'clock` : 'No detachment marked';\n    return {\n      tears: tearDescription,\n      detachment: detachmentDescription\n    };\n  };\n  const description = createDescription();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: \"200px\",\n        maxWidth: \"500px\"\n      },\n      onContextMenu: e => e.preventDefault()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white rounded-lg shadow-sm p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium text-gray-900\",\n          children: \"Current Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: description.tears\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: description.detachment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 pt-2 border-t text-xs text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Debug info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Raw segments: \", detachmentSegments.sort((a, b) => a - b).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Raw hours: \", selectedHours.sort((a, b) => a - b).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","segmentToHour","segment","Math","floor","getAffectedHours","segments","hours","Set","map","Array","from","sort","a","b","groupConsecutiveNumbers","numbers","length","groups","currentGroup","i","isConsecutive","push","formatHourRange","group","createDescription","tearGroups","tearDescription","join","affectedHours","detachmentGroups","detachmentDescription","tears","detachment","description","className","children","style","width","aspectRatio","minWidth","maxWidth","onContextMenu","e","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange,\n}) => {\n  // Previous code remains the same until after the SVG component\n\n  // Helper function to convert segment to hour (1-12)\n  const segmentToHour = (segment) => {\n    return Math.floor(segment / 5) + 1;\n  };\n\n  // Helper function to get all affected hours from segments\n  const getAffectedHours = (segments) => {\n    const hours = new Set(segments.map(segmentToHour));\n    return Array.from(hours).sort((a, b) => a - b);\n  };\n\n  // Helper function to group consecutive numbers\n  const groupConsecutiveNumbers = (numbers) => {\n    if (numbers.length === 0) return [];\n    \n    const groups = [];\n    let currentGroup = [numbers[0]];\n\n    for (let i = 1; i < numbers.length; i++) {\n      // Special case for 12 and 1 being consecutive\n      const isConsecutive = \n        numbers[i] === numbers[i-1] + 1 || \n        (numbers[i-1] === 12 && numbers[i] === 1);\n\n      if (isConsecutive) {\n        currentGroup.push(numbers[i]);\n      } else {\n        groups.push(currentGroup);\n        currentGroup = [numbers[i]];\n      }\n    }\n    groups.push(currentGroup);\n    return groups;\n  };\n\n  // Helper function to format hour ranges\n  const formatHourRange = (group) => {\n    if (group.length === 1) return `${group[0]}`;\n    return `${group[0]}-${group[group.length - 1]}`;\n  };\n\n  // Create text description\n  const createDescription = () => {\n    // Handle tears\n    const tearGroups = groupConsecutiveNumbers(selectedHours.sort((a, b) => a - b));\n    const tearDescription = tearGroups.length > 0\n      ? `Tears at ${tearGroups.map(formatHourRange).join(', ')} o'clock`\n      : 'No tears marked';\n\n    // Handle detachment\n    const affectedHours = getAffectedHours(detachmentSegments);\n    const detachmentGroups = groupConsecutiveNumbers(affectedHours);\n    const detachmentDescription = detachmentGroups.length > 0\n      ? `Detachment affecting ${detachmentGroups.map(formatHourRange).join(', ')} o'clock`\n      : 'No detachment marked';\n\n    return {\n      tears: tearDescription,\n      detachment: detachmentDescription\n    };\n  };\n\n  const description = createDescription();\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <div\n        className=\"relative touch-none select-none\"\n        style={{\n          width: \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: \"200px\",\n          maxWidth: \"500px\",\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        {/* Previous SVG code remains exactly the same */}\n        {/* ... */}\n      </div>\n\n      {/* Description Panel */}\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-sm p-4\">\n        <div className=\"space-y-2\">\n          <p className=\"text-sm font-medium text-gray-900\">Current Selection:</p>\n          <div className=\"space-y-1\">\n            <p className=\"text-sm text-gray-600\">{description.tears}</p>\n            <p className=\"text-sm text-gray-600\">{description.detachment}</p>\n          </div>\n          <div className=\"mt-2 pt-2 border-t text-xs text-gray-500\">\n            <p>Debug info:</p>\n            <p>Raw segments: {detachmentSegments.sort((a, b) => a - b).join(', ')}</p>\n            <p>Raw hours: {selectedHours.sort((a, b) => a - b).join(', ')}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}