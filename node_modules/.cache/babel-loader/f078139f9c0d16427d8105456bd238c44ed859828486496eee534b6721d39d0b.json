{"ast":null,"code":"// Convert segment to clock hour\nfunction getClockHour(segment) {\n  // Special case handling for segments around hour 12\n  if (segment >= 57 || segment <= 2) return 12;\n\n  // Special case for hour 6\n  if (segment >= 28 && segment <= 32) return 6;\n\n  // Handle hour boundary cases\n  if (segment % 5 <= 2) {\n    return Math.floor(segment / 5);\n  }\n\n  // For all other segments, calculate the hour\n  const hourNumber = Math.floor(segment / 5) + 1;\n\n  // Ensure the hour is within valid bounds\n  return Math.min(Math.max(hourNumber, 1), 11);\n}\nmodule.exports = {\n  getClockHour\n};","map":{"version":3,"names":["getClockHour","segment","Math","floor","hourNumber","min","max","module","exports"],"sources":["/Users/rose/Code/RCRD/src/components/clock/utils/getClockHour.js"],"sourcesContent":["// Convert segment to clock hour\nfunction getClockHour(segment) {\n    // Special case handling for segments around hour 12\n    if (segment >= 57 || segment <= 2) return 12;\n    \n    // Special case for hour 6\n    if (segment >= 28 && segment <= 32) return 6;\n    \n    // Handle hour boundary cases\n    if (segment % 5 <= 2) {\n        return Math.floor(segment / 5);\n    }\n    \n    // For all other segments, calculate the hour\n    const hourNumber = Math.floor(segment / 5) + 1;\n    \n    // Ensure the hour is within valid bounds\n    return Math.min(Math.max(hourNumber, 1), 11);\n}\n\nmodule.exports = {\n    getClockHour\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAYA,CAACC,OAAO,EAAE;EAC3B;EACA,IAAIA,OAAO,IAAI,EAAE,IAAIA,OAAO,IAAI,CAAC,EAAE,OAAO,EAAE;;EAE5C;EACA,IAAIA,OAAO,IAAI,EAAE,IAAIA,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC;;EAE5C;EACA,IAAIA,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE;IAClB,OAAOC,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,CAAC,CAAC;EAClC;;EAEA;EACA,MAAMG,UAAU,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC;;EAE9C;EACA,OAAOC,IAAI,CAACG,GAAG,CAACH,IAAI,CAACI,GAAG,CAACF,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAChD;AAEAG,MAAM,CAACC,OAAO,GAAG;EACbR;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}