{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { segmentToClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const indicatorExtension = 1;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [longPressTimer, setLongPressTimer] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    if (readOnly) return;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback(hour => e => {\n    if (readOnly) return;\n    e.preventDefault();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`,\n    style: {\n      width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n      aspectRatio: \"1\",\n      minWidth: readOnly ? \"200px\" : \"200px\",\n      maxWidth: readOnly ? \"200px\" : \"500px\"\n    },\n    onContextMenu: e => e.preventDefault(),\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      viewBox: \"-110 -110 220 220\",\n      className: \"w-full h-full\",\n      preserveAspectRatio: \"xMidYMid meet\",\n      onMouseDown: !isTouchDevice ? handleDrawingStart : undefined,\n      onMouseMove: !isTouchDevice ? handleDrawing : undefined,\n      onMouseUp: !isTouchDevice ? handleDrawingEnd : undefined,\n      onMouseLeave: !isTouchDevice ? handleDrawingEnd : undefined,\n      onTouchStart: isTouchDevice ? handleDrawingStart : undefined,\n      onTouchMove: isTouchDevice ? handleDrawing : undefined,\n      onTouchEnd: isTouchDevice ? handleDrawingEnd : undefined,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-auto\",\n        children: [...Array(60)].map((_, i) => {\n          const degree = segmentToDegree(i);\n          const pos = polarToCartesian(degree, innerRadius);\n          const posOuter = polarToCartesian(degree, outerRadius);\n          const nextDegree = segmentToDegree(i + 1);\n          const nextPos = polarToCartesian(nextDegree, innerRadius);\n          const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: `M ${pos.x} ${pos.y} \n                    L ${posOuter.x} ${posOuter.y} \n                    A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                    L ${nextPos.x} ${nextPos.y}\n                    A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`,\n            fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n            className: `cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`\n          }, `segment-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-auto\",\n        children: [...Array(12)].map((_, i) => {\n          const hour = i === 0 ? 12 : i;\n          const visualPos = getPosition(hour, tearRadius);\n          const isSelected = selectedHours.includes(hour);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            onClick: !isTouchDevice && !readOnly ? e => {\n              e.preventDefault();\n              e.stopPropagation();\n              onTearToggle(hour);\n            } : undefined,\n            onTouchStart: isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined,\n            onTouchEnd: isTouchDevice && !readOnly ? handleTouchEnd : undefined,\n            onMouseEnter: !isTouchDevice && !readOnly ? () => onHoverChange(hour) : undefined,\n            onMouseLeave: !isTouchDevice && !readOnly ? () => onHoverChange(null) : undefined,\n            style: {\n              cursor: readOnly ? 'default' : 'pointer'\n            },\n            children: isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n              ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n              style: getStyles(hour, hoveredHour, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: visualPos.x,\n              cy: visualPos.y,\n              r: \"12\",\n              style: getStyles(hour, hoveredHour, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)\n          }, `tear-${hour}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"pointer-events-none\",\n        x1: \"0\",\n        y1: -outerRadius,\n        x2: \"0\",\n        y2: -(outerRadius + indicatorExtension),\n        stroke: \"#666\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"dvtBpXK1ftUh18yITAoIz/FQkuE=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","segmentToClockHour","clockHourToSegmentsMap","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","onHoverChange","onTearToggle","onSegmentToggle","readOnly","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","isTouchDevice","setIsTouchDevice","longPressTimer","setLongPressTimer","svgRef","window","navigator","maxTouchPoints","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segmentToDegree","segment","styles","transition","tear","default","fill","stroke","strokeWidth","hover","circle","getStyles","hour","isSelected","isHovered","createTearPath","tearPath","d","transform","getPosition","radius","point","getSegmentFromPoint","clientX","clientY","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTouchStart","timer","setTimeout","handleTouchEnd","clearTimeout","className","style","aspectRatio","minWidth","maxWidth","onContextMenu","children","ref","viewBox","preserveAspectRatio","onMouseDown","undefined","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","pos","posOuter","nextDegree","nextPos","nextPosOuter","includes","visualPos","onClick","stopPropagation","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport {\n  segmentToClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const indicatorExtension = 1;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [longPressTimer, setLongPressTimer] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n  // Style constants for tears\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // Style helper for tears\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered && !readOnly ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered && !readOnly ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Tear path creation\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n        M -4 -8\n        c -0.091 -0.936 0.333 -1.232 0.777 0.658\n        c 0.389 1.655 1.060 3.281 1.060 3.281\n        s 0 0.254 1.022 0.617\n        c 0.793 0.282 2.183 -2.882 2.183 -2.882\n        s 1.953 -4.433 1.437 -1.294\n        c -1.217 7.410 -1.640 6.716 -1.664 6.897\n        c -0.024 0.181 -0.510 0.596 -0.510 0.596\n        s -0.178 0.183 -0.585 0.327\n        c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n        L -4 -8\n      `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Position calculation for hours\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle\n    };\n  };\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  const handleDrawingStart = useCallback((e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback((hour) => (e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n\n  return (\n    <div className={`relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`}\n      style={{\n        width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: readOnly ? \"200px\" : \"200px\",\n        maxWidth: readOnly ? \"200px\" : \"500px\",\n      }}\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      <svg\n        ref={svgRef}\n        viewBox=\"-110 -110 220 220\"\n        className=\"w-full h-full\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        onMouseDown={!isTouchDevice ? handleDrawingStart : undefined}\n        onMouseMove={!isTouchDevice ? handleDrawing : undefined}\n        onMouseUp={!isTouchDevice ? handleDrawingEnd : undefined}\n        onMouseLeave={!isTouchDevice ? handleDrawingEnd : undefined}\n        onTouchStart={isTouchDevice ? handleDrawingStart : undefined}\n        onTouchMove={isTouchDevice ? handleDrawing : undefined}\n        onTouchEnd={isTouchDevice ? handleDrawingEnd : undefined}\n      >\n        {/* Background and grid circles */}\n        <g className=\"pointer-events-none\">\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n          <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n        </g>\n\n        {/* Detachment segments layer */}\n        <g className=\"pointer-events-auto\">\n          {[...Array(60)].map((_, i) => {\n            const degree = segmentToDegree(i);\n            const pos = polarToCartesian(degree, innerRadius);\n            const posOuter = polarToCartesian(degree, outerRadius);\n            const nextDegree = segmentToDegree(i + 1);\n            const nextPos = polarToCartesian(nextDegree, innerRadius);\n            const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n\n            return (\n              <path\n                key={`segment-${i}`}\n                d={`M ${pos.x} ${pos.y} \n                    L ${posOuter.x} ${posOuter.y} \n                    A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                    L ${nextPos.x} ${nextPos.y}\n                    A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`}\n                fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                className={`cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`}\n              />\n            );\n          })}\n        </g>\n\n        {/* Tear markers layer */}\n        <g className=\"pointer-events-auto\">\n          {[...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i;\n            const visualPos = getPosition(hour, tearRadius);\n            const isSelected = selectedHours.includes(hour);\n\n            return (\n              <g\n                key={`tear-${hour}`}\n                onClick={!isTouchDevice && !readOnly ? (e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  onTearToggle(hour);\n                } : undefined}\n                onTouchStart={isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined}\n                onTouchEnd={isTouchDevice && !readOnly ? handleTouchEnd : undefined}\n                onMouseEnter={!isTouchDevice && !readOnly ? () => onHoverChange(hour) : undefined}\n                onMouseLeave={!isTouchDevice && !readOnly ? () => onHoverChange(null) : undefined}\n                style={{\n                  cursor: readOnly ? 'default' : 'pointer'\n                }}\n              >\n                {isSelected ? (\n                  <path\n                    {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                    style={getStyles(hour, hoveredHour, true)}\n                  />\n                ) : (\n                  <circle\n                    cx={visualPos.x}\n                    cy={visualPos.y}\n                    r=\"12\"\n                    style={getStyles(hour, hoveredHour, false)}\n                  />\n                )}\n              </g>\n            );\n          })}\n        </g>\n\n        {/* 12 o'clock indicator */}\n        <line\n          className=\"pointer-events-none\"\n          x1=\"0\"\n          y1={-outerRadius}\n          x2=\"0\"\n          y2={-(outerRadius + indicatorExtension)}\n          stroke=\"#666\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default ClockFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}