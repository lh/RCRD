{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useLongPress = (onLongPress, onClick, {\n  shouldPreventDefault = true,\n  delay = 500\n} = {}) => {\n  _s();\n  const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n  const preventDefault = React.useCallback(event => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n  const start = React.useCallback(event => {\n    const element = event.type.includes('touch') ? document.elementFromPoint(event.touches[0].clientX, event.touches[0].clientY) : event.currentTarget;\n    if (shouldPreventDefault && element) {\n      element.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = element;\n    }\n    timeout.current = setTimeout(() => {\n      onLongPress(element);\n      setLongPressTriggered(true);\n    }, delay);\n  }, [onLongPress, delay, shouldPreventDefault, preventDefault]);\n  const clear = React.useCallback((event, shouldTriggerClick = true) => {\n    timeout.current && clearTimeout(timeout.current);\n    shouldTriggerClick && !longPressTriggered && (onClick === null || onClick === void 0 ? void 0 : onClick(event));\n    setLongPressTriggered(false);\n    if (shouldPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, [shouldPreventDefault, onClick, longPressTriggered, preventDefault]);\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: e => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n_s(useLongPress, \"NHdUO3uZeF4j8gnciUBsjuZws/4=\");\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s2();\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n  const [isDrawing, setIsDrawing] = React.useState(false);\n  const [lastPosition, setLastPosition] = React.useState(null);\n  const svgRef = React.useRef(null);\n  const getSegmentFromPoint = (x, y) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n\n    // Get vector from center to click point\n    const dx = x - centerX;\n    const dy = -(y - centerY); // Keep y-axis flip\n\n    // Calculate angle in radians\n    let angle = Math.atan2(dy, dx);\n    // First negate to change to clockwise\n    angle = -angle;\n    // Then rotate reference to 12 o'clock\n    angle = angle + Math.PI / 2;\n\n    // Convert to degrees and normalize to 0-360\n    angle = (angle * 180 / Math.PI + 360) % 360;\n    // Adjust for segment boundaries\n    angle = (angle - 18) % 360;\n\n    // Convert to segment (0-59)\n    return Math.round(angle / 6);\n  };\n  const getSegmentsBetween = (start, end) => {\n    const segments = new Set();\n    let diff = (end - start + 60) % 60;\n    if (diff > 30) {\n      diff = diff - 60;\n    }\n    const step = Math.sign(diff);\n    let current = start;\n    do {\n      segments.add(current);\n      current = (current + step + 60) % 60;\n    } while (current !== (end + step + 60) % 60);\n    return Array.from(segments);\n  };\n  const handleDrawingStart = e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  };\n  const handleDrawing = e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n      segmentsBetween.forEach(segment => {\n        onSegmentToggle(segment);\n      });\n      setLastPosition(currentSegment);\n    }\n  };\n  const handleDrawingEnd = e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  };\n  const longPressHandlers = useLongPress(element => {\n    const hourElement = element === null || element === void 0 ? void 0 : element.closest('[data-hour]');\n    const hour = hourElement ? parseInt(hourElement.dataset.hour) : null;\n    if (hour) {\n      onTearToggle(hour);\n    }\n  }, null, {\n    delay: 500\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: 'min(80vw, min(80vh, 500px))',\n        aspectRatio: '1',\n        minWidth: '200px',\n        maxWidth: '500px'\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseUp: handleDrawingEnd,\n        onMouseMove: handleDrawing,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const isDetachmentSelected = detachmentSegments.includes(i);\n            const nextSegment = (i + 1) % 60;\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                                        L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                                        A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                                        L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                                        A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`,\n              fill: isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\",\n              \"data-segment-id\": i\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i + 1;\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? longPressHandlers : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: 'pointer'\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\",\n                className: \"touch-target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s2(ClockFace, \"lmVQPKOTKQH4yyIdOkPSiy6OPkM=\", false, function () {\n  return [useLongPress];\n});\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","getPosition","getSegmentPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","_s","longPressTriggered","setLongPressTriggered","useState","timeout","useRef","target","preventDefault","useCallback","event","start","element","type","includes","document","elementFromPoint","touches","clientX","clientY","currentTarget","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","e","onTouchEnd","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s2","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","getSegmentFromPoint","x","y","svgRect","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","dy","angle","atan2","PI","round","getSegmentsBetween","end","segments","Set","diff","step","sign","add","Array","from","handleDrawingStart","_e$touches","touch","segment","handleDrawing","_e$touches2","currentSegment","segmentsBetween","forEach","handleDrawingEnd","longPressHandlers","hourElement","closest","hour","parseInt","dataset","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","_","i","isDetachmentSelected","nextSegment","d","visualPos","interactionPos","isSelected","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\n\nconst useLongPress = (onLongPress, onClick, { shouldPreventDefault = true, delay = 500 } = {}) => {\n  const [longPressTriggered, setLongPressTriggered] = React.useState(false);\n  const timeout = React.useRef();\n  const target = React.useRef();\n\n  const preventDefault = React.useCallback((event) => {\n    if (!longPressTriggered) {\n      event.preventDefault();\n    }\n  }, [longPressTriggered]);\n\n  const start = React.useCallback(\n    (event) => {\n      const element = event.type.includes('touch') \n        ? document.elementFromPoint(\n            event.touches[0].clientX,\n            event.touches[0].clientY\n          )\n        : event.currentTarget;\n\n      if (shouldPreventDefault && element) {\n        element.addEventListener('touchend', preventDefault, {\n          passive: false\n        });\n        target.current = element;\n      }\n\n      timeout.current = setTimeout(() => {\n        onLongPress(element);\n        setLongPressTriggered(true);\n      }, delay);\n    },\n    [onLongPress, delay, shouldPreventDefault, preventDefault]\n  );\n\n  const clear = React.useCallback(\n    (event, shouldTriggerClick = true) => {\n      timeout.current && clearTimeout(timeout.current);\n      shouldTriggerClick && !longPressTriggered && onClick?.(event);\n      setLongPressTriggered(false);\n      if (shouldPreventDefault && target.current) {\n        target.current.removeEventListener('touchend', preventDefault);\n      }\n    },\n    [shouldPreventDefault, onClick, longPressTriggered, preventDefault]\n  );\n\n  return {\n    onMouseDown: start,\n    onTouchStart: start,\n    onMouseUp: clear,\n    onMouseLeave: (e) => clear(e, false),\n    onTouchEnd: clear\n  };\n};\n\nconst ClockFace = ({\n    selectedHours,\n    detachmentSegments,\n    hoveredHour,\n    isTouchDevice,\n    onSegmentToggle,\n    onTearToggle,\n    onHoverChange\n  }) => {\n    const outerRadius = 110;\n    const innerRadius = 65;\n    const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n    const tearRadius = middleRadius + 12;\n    const indicatorExtension = 10;\n  \n    const [isDrawing, setIsDrawing] = React.useState(false);\n    const [lastPosition, setLastPosition] = React.useState(null);\n    const svgRef = React.useRef(null);\n  \n    const getSegmentFromPoint = (x, y) => {\n        const svgRect = svgRef.current.getBoundingClientRect();\n        const centerX = svgRect.left + svgRect.width / 2;\n        const centerY = svgRect.top + svgRect.height / 2;\n        \n        // Get vector from center to click point\n        const dx = x - centerX;\n        const dy = -(y - centerY);  // Keep y-axis flip\n        \n        // Calculate angle in radians\n        let angle = Math.atan2(dy, dx);\n        // First negate to change to clockwise\n        angle = -angle;\n        // Then rotate reference to 12 o'clock\n        angle = angle + Math.PI/2;\n        \n        // Convert to degrees and normalize to 0-360\n        angle = (angle * 180 / Math.PI + 360) % 360;\n        // Adjust for segment boundaries\n        angle = (angle - 18) % 360;\n        \n        // Convert to segment (0-59)\n        return Math.round(angle / 6);\n    };\n\n\n    const getSegmentsBetween = (start, end) => {\n      const segments = new Set();\n      \n      let diff = (end - start + 60) % 60;\n      if (diff > 30) {\n        diff = diff - 60;\n      }\n      \n      const step = Math.sign(diff);\n      let current = start;\n      \n      do {\n        segments.add(current);\n        current = (current + step + 60) % 60;\n      } while (current !== (end + step + 60) % 60);\n      \n      return Array.from(segments);\n    };\n  \n    const handleDrawingStart = (e) => {\n        e.preventDefault();\n        setIsDrawing(true);\n        const touch = e.touches?.[0] || e;\n        const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        setLastPosition(segment);\n        onSegmentToggle(segment);\n    };\n  \n    const handleDrawing = (e) => {\n        if (!isDrawing) return;\n        e.preventDefault();\n        \n        const touch = e.touches?.[0] || e;\n        const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n        \n        if (currentSegment !== lastPosition) {\n            const segmentsBetween = getSegmentsBetween(lastPosition, currentSegment);\n            segmentsBetween.forEach(segment => {\n                onSegmentToggle(segment);\n            });\n            setLastPosition(currentSegment);\n        }\n    };\n  \n    const handleDrawingEnd = (e) => {\n        if (!isDrawing) return;\n        e.preventDefault();\n        setIsDrawing(false);\n        setLastPosition(null);\n    };\n\n    const longPressHandlers = useLongPress(\n        (element) => {\n            const hourElement = element?.closest('[data-hour]');\n            const hour = hourElement ? parseInt(hourElement.dataset.hour) : null;\n            if (hour) {\n                onTearToggle(hour);\n            }\n        },\n        null,\n        { delay: 500 }\n    );\n\n    return (\n        <div className=\"flex justify-center\">\n            <div \n                className=\"relative touch-none select-none\"\n                style={{\n                    width: 'min(80vw, min(80vh, 500px))',\n                    aspectRatio: '1',\n                    minWidth: '200px',\n                    maxWidth: '500px'\n                }}\n                onContextMenu={(e) => e.preventDefault()}\n            >\n                <svg \n                    ref={svgRef}\n                    viewBox=\"-110 -110 220 220\" \n                    className=\"w-full h-full\"\n                    preserveAspectRatio=\"xMidYMid meet\"\n                    onMouseDown={handleDrawingStart}\n                    onMouseUp={handleDrawingEnd}\n                    onMouseMove={handleDrawing}\n                    onMouseLeave={handleDrawingEnd}\n                    onTouchStart={handleDrawingStart}\n                    onTouchMove={handleDrawing}\n                    onTouchEnd={handleDrawingEnd}\n                >\n                    {/* Grid circles */}\n                    <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n                    <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\"/>\n                    <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n\n                    {/* Detachment segments */}\n                    <g>\n                        {[...Array(60)].map((_, i) => {\n                            const isDetachmentSelected = detachmentSegments.includes(i);\n                            const nextSegment = (i + 1) % 60;\n                            \n                            return (\n                                <path\n                                    key={`segment-${i}`}\n                                    d={`M ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y} \n                                        L ${getSegmentPosition(i, outerRadius).x} ${getSegmentPosition(i, outerRadius).y} \n                                        A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(nextSegment, outerRadius).x} ${getSegmentPosition(nextSegment, outerRadius).y}\n                                        L ${getSegmentPosition(nextSegment, innerRadius).x} ${getSegmentPosition(nextSegment, innerRadius).y}\n                                        A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(i, innerRadius).x} ${getSegmentPosition(i, innerRadius).y}`}\n                                    fill={isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                                    className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                                    data-segment-id={i}\n                                />\n                            );\n                        })}\n                    </g>\n\n                    {/* Tear markers */}\n                    <g>\n                        {[...Array(12)].map((_, i) => {\n                            const hour = i + 1;\n                            const visualPos = getPosition(hour, tearRadius);\n                            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n                            const isSelected = selectedHours.includes(hour);\n                            \n                            return (\n                                <g \n                                    key={`tear-${hour}`}\n                                    {...(isTouchDevice ? longPressHandlers : { onClick: () => onTearToggle(hour) })}\n                                    onMouseEnter={() => onHoverChange(hour)}\n                                    onMouseLeave={() => onHoverChange(null)}\n                                    style={{ cursor: 'pointer' }}\n                                    data-hour={hour}\n                                >\n                                    {isTouchDevice && (\n                                        <circle\n                                            cx={interactionPos.x}\n                                            cy={interactionPos.y}\n                                            r=\"12\"\n                                            fill=\"transparent\"\n                                            className=\"touch-target\"\n                                        />\n                                    )}\n                                    \n                                    {isSelected ? (\n                                        <path\n                                            {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                                            style={getStyles(hour, hoveredHour, true)}\n                                        />\n                                    ) : (\n                                        <circle\n                                            cx={visualPos.x}\n                                            cy={visualPos.y}\n                                            r=\"12\"\n                                            style={getStyles(hour, hoveredHour, false)}\n                                        />\n                                    )}\n                                </g>\n                            );\n                        })}\n                    </g>\n\n                    {/* 12 o'clock indicator */}\n                    <line \n                        x1=\"0\" \n                        y1={-outerRadius} \n                        x2=\"0\" \n                        y2={-(outerRadius + indicatorExtension)} \n                        stroke=\"#666\" \n                        strokeWidth=\"2\"\n                    />\n                </svg>\n            </div>\n        </div>\n    );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}