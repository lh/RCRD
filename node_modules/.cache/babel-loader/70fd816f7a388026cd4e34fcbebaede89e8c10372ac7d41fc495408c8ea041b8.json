{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/utils/clockCalculations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Coordinate conversion helpers\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180); // -90 to start at top\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360; // Convert to clockwise from top\n  };\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n  const hourToDegree = hour => {\n    return (hour - 1) * 30 % 360;\n  };\n\n  // Get segment from mouse/touch position\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n\n    // Get coordinates relative to center\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY); // Flip Y for SVG coordinate system\n\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  // Drawing event handlers\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler for tears\n  const handleTearLongPress = useCallback(hour => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: e => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel\n    };\n  }, [onTearToggle]);\n\n  // Create tear path for selected hours\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n      M -4 -8\n      c -0.091 -0.936 0.333 -1.232 0.777 0.658\n      c 0.389 1.655 1.060 3.281 1.060 3.281\n      s 0 0.254 1.022 0.617\n      c 0.793 0.282 2.183 -2.882 2.183 -2.882\n      s 1.953 -4.433 1.437 -1.294\n      c -1.217 7.410 -1.640 6.716 -1.664 6.897\n      c -0.024 0.181 -0.510 0.596 -0.510 0.596\n      s -0.178 0.183 -0.585 0.327\n      c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n      L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Style helper\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    const baseStyle = {\n      transition: 'fill 0.2s ease, stroke 0.2s ease',\n      strokeWidth: '1.5'\n    };\n    if (isSelected) {\n      return {\n        ...baseStyle,\n        fill: isHovered ? '#b91c1c' : '#dc2626',\n        stroke: isHovered ? '#b91c1c' : '#dc2626'\n      };\n    }\n    return {\n      ...baseStyle,\n      fill: isHovered ? '#fee2e2' : 'white',\n      stroke: '#d1d5db'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: \"200px\",\n        maxWidth: \"500px\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const degree = segmentToDegree(i);\n            const pos = polarToCartesian(degree, innerRadius);\n            const posOuter = polarToCartesian(degree, outerRadius);\n            const nextDegree = segmentToDegree(i + 1);\n            const nextPos = polarToCartesian(nextDegree, innerRadius);\n            const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`,\n              fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\"\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i;\n            const degree = hourToDegree(hour);\n            const visualPos = polarToCartesian(degree, tearRadius);\n            const interactionPos = isTouchDevice ? polarToCartesian(degree, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? handleTearLongPress(hour) : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: \"pointer\"\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, degree),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: visualPos.x,\n                y: visualPos.y,\n                textAnchor: \"middle\",\n                alignmentBaseline: \"middle\",\n                fontSize: \"8\",\n                fill: \"black\",\n                children: hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"Uy+H0dy2aI7YeAR/EOLSd72XEdY=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segmentToDegree","segment","hourToDegree","hour","getSegmentFromPoint","clientX","clientY","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTearLongPress","timeout","start","setTimeout","cancel","clearTimeout","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","onTouchCancel","createTearPath","tearPath","d","transform","getStyles","isSelected","isHovered","baseStyle","transition","strokeWidth","fill","stroke","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","pos","posOuter","nextDegree","nextPos","nextPosOuter","includes","visualPos","interactionPos","onClick","onMouseEnter","cursor","textAnchor","alignmentBaseline","fontSize","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/utils/clockCalculations.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange,\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Coordinate conversion helpers\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180); // -90 to start at top\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360; // Convert to clockwise from top\n  };\n\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n  const hourToDegree = (hour) => {\n    return ((hour - 1) * 30) % 360;\n  };\n\n  // Get segment from mouse/touch position\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n\n    // Get coordinates relative to center\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY); // Flip Y for SVG coordinate system\n\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  // Drawing event handlers\n  const handleDrawingStart = useCallback((e) => {\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n\n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler for tears\n  const handleTearLongPress = useCallback((hour) => {\n    let timeout;\n\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n\n    return {\n      onMouseDown: start,\n      onTouchStart: (e) => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel,\n    };\n  }, [onTearToggle]);\n\n  // Create tear path for selected hours\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n      M -4 -8\n      c -0.091 -0.936 0.333 -1.232 0.777 0.658\n      c 0.389 1.655 1.060 3.281 1.060 3.281\n      s 0 0.254 1.022 0.617\n      c 0.793 0.282 2.183 -2.882 2.183 -2.882\n      s 1.953 -4.433 1.437 -1.294\n      c -1.217 7.410 -1.640 6.716 -1.664 6.897\n      c -0.024 0.181 -0.510 0.596 -0.510 0.596\n      s -0.178 0.183 -0.585 0.327\n      c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n      L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Style helper\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    const baseStyle = {\n      transition: 'fill 0.2s ease, stroke 0.2s ease',\n      strokeWidth: '1.5'\n    };\n\n    if (isSelected) {\n      return {\n        ...baseStyle,\n        fill: isHovered ? '#b91c1c' : '#dc2626',\n        stroke: isHovered ? '#b91c1c' : '#dc2626',\n      };\n    }\n\n    return {\n      ...baseStyle,\n      fill: isHovered ? '#fee2e2' : 'white',\n      stroke: '#d1d5db',\n    };\n  };\n\n  return (\n    <div className=\"flex justify-center\">\n      <div\n        className=\"relative touch-none select-none\"\n        style={{\n          width: \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: \"200px\",\n          maxWidth: \"500px\",\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Grid circles */}\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n          <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n\n          {/* Detachment segments */}\n          <g>\n            {[...Array(60)].map((_, i) => {\n              const degree = segmentToDegree(i);\n              const pos = polarToCartesian(degree, innerRadius);\n              const posOuter = polarToCartesian(degree, outerRadius);\n              const nextDegree = segmentToDegree(i + 1);\n              const nextPos = polarToCartesian(nextDegree, innerRadius);\n              const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n\n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`}\n                  fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                />\n              );\n            })}\n          </g>\n\n          {/* Hour markers and tears */}\n          <g>\n            {[...Array(12)].map((_, i) => {\n              const hour = i === 0 ? 12 : i;\n              const degree = hourToDegree(hour);\n              const visualPos = polarToCartesian(degree, tearRadius);\n              const interactionPos = isTouchDevice\n                ? polarToCartesian(degree, outerRadius)\n                : visualPos;\n              const isSelected = selectedHours.includes(hour);\n\n              return (\n                <g\n                  key={`tear-${hour}`}\n                  {...(isTouchDevice\n                    ? handleTearLongPress(hour)\n                    : { onClick: () => onTearToggle(hour) })}\n                  onMouseEnter={() => onHoverChange(hour)}\n                  onMouseLeave={() => onHoverChange(null)}\n                  style={{ cursor: \"pointer\" }}\n                  data-hour={hour}\n                >\n                  {isTouchDevice && (\n                    <circle\n                      cx={interactionPos.x}\n                      cy={interactionPos.y}\n                      r=\"12\"\n                      fill=\"transparent\"\n                    />\n                  )}\n\n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, degree)}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n\n                  {/* Hour label */}\n                  <text\n                    x={visualPos.x}\n                    y={visualPos.y}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"middle\"\n                    fontSize=\"8\"\n                    fill=\"black\"\n                  >\n                    {hour}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}