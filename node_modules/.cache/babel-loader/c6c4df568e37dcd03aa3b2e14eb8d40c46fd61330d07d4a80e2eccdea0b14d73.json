{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { segmentToClockHour, getSegmentsForClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { getPosition, createTearPath } from \"./utils/clockCalculations\";\nimport { getStyles } from \"./styles/clockStyles\";\nimport CoordinateSystem from \"./utils/clockCoordinates\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // Style constants remain unchanged\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Updated coordinate conversion functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180); // -90 to start at top\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360; // Convert to clockwise from top\n  };\n\n  // Updated hour and position calculations\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle,\n      debug: {\n        hour,\n        clockAngle: angle\n      }\n    };\n  };\n\n  // Rest of the utility functions remain unchanged\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n\n  // Updated grouping function for consecutive hours with strict continuity checking\n  const groupConsecutive = numbers => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n      const currSegments = clockHourToSegmentsMap.get(curr) || [];\n      const prevSegments = clockHourToSegmentsMap.get(prev) || [];\n\n      // Check if hours are consecutive\n      const isConsecutive = curr === prev + 1 || prev === 12 && curr === 1;\n\n      // Check if all segments for both hours are present\n      const allPrevSegmentsPresent = prevSegments.every(seg => detachmentSegments.includes(seg));\n      const allCurrSegmentsPresent = currSegments.every(seg => detachmentSegments.includes(seg));\n\n      // Check if the transition between hours is continuous\n      const isTransitionComplete = isConsecutive && allPrevSegmentsPresent && allCurrSegmentsPresent;\n      if (isTransitionComplete) {\n        range.push(curr);\n      } else {\n        if (allPrevSegmentsPresent) {\n          ranges.push(range);\n        }\n        if (allCurrSegmentsPresent) {\n          range = [curr];\n        } else {\n          range = [];\n        }\n      }\n    }\n\n    // Don't forget to add the last range if it's complete\n    if (range.length > 0) {\n      const lastHour = range[range.length - 1];\n      const lastHourSegments = clockHourToSegmentsMap.get(lastHour) || [];\n      if (lastHourSegments.every(seg => detachmentSegments.includes(seg))) {\n        ranges.push(range);\n      }\n    }\n    return ranges.filter(range => range.length > 0);\n  };\n\n  // Create description of current selections with strict continuity checking\n  const createSelectionDescription = () => {\n    // Handle tears (already in clock hours)\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0 ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock` : 'No breaks marked';\n\n    // Handle detachment with strict continuity checking\n    const detachmentHours = [...new Set(detachmentSegments.map(segmentToClockHour))];\n    const detachmentRanges = groupConsecutive(detachmentHours);\n    const detachmentDescription = detachmentRanges.length > 0 ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock` : 'No detachment marked';\n    return {\n      tearDescription,\n      detachmentDescription\n    };\n  };\n\n  // Style helper remains unchanged\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Create tear path remains unchanged\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n      M -4 -8\n      c -0.091 -0.936 0.333 -1.232 0.777 0.658\n      c 0.389 1.655 1.060 3.281 1.060 3.281\n      s 0 0.254 1.022 0.617\n      c 0.793 0.282 2.183 -2.882 2.183 -2.882\n      s 1.953 -4.433 1.437 -1.294\n      c -1.217 7.410 -1.640 6.716 -1.664 6.897\n      c -0.024 0.181 -0.510 0.596 -0.510 0.596\n      s -0.178 0.183 -0.585 0.327\n      c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n      L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Event handlers remain unchanged\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler remains unchanged\n  const handleTearLongPress = useCallback(hour => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: e => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel\n    };\n  }, [onTearToggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: \"200px\",\n        maxWidth: \"500px\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const degree = segmentToDegree(i);\n            const pos = polarToCartesian(degree, innerRadius);\n            const posOuter = polarToCartesian(degree, outerRadius);\n            const nextDegree = segmentToDegree(i + 1);\n            const nextPos = polarToCartesian(nextDegree, innerRadius);\n            const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`,\n              fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\"\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i; // Fixed hour calculation\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? handleTearLongPress(hour) : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: \"pointer\"\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: visualPos.x,\n                y: visualPos.y,\n                textAnchor: \"middle\",\n                alignmentBaseline: \"middle\",\n                fontSize: \"8\",\n                fill: \"black\",\n                children: hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white rounded-lg shadow-sm p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-medium text-gray-900\",\n          children: \"Current Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: (() => {\n            const {\n              tearDescription,\n              detachmentDescription\n            } = createSelectionDescription();\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: tearDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: detachmentDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 pt-2 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Debug Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Raw segments: \", detachmentSegments.sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Mapped clock hours: \", [...new Set(detachmentSegments.map(segmentToClockHour))].sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Selected tear hours: \", selectedHours.sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Complete hours: \", Array.from(clockHourToSegmentsMap.entries()).filter(([hour]) => {\n                const segments = clockHourToSegmentsMap.get(hour) || [];\n                return segments.every(seg => detachmentSegments.includes(seg));\n              }).map(([hour]) => hour).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Partial hours: \", Array.from(clockHourToSegmentsMap.entries()).filter(([hour]) => {\n                const segments = clockHourToSegmentsMap.get(hour) || [];\n                const hasAny = segments.some(seg => detachmentSegments.includes(seg));\n                const hasAll = segments.every(seg => detachmentSegments.includes(seg));\n                return hasAny && !hasAll;\n              }).map(([hour, segs]) => `${hour}:(${segs.filter(seg => detachmentSegments.includes(seg)).join(',')})`).join(' | ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"Uy+H0dy2aI7YeAR/EOLSd72XEdY=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","segmentToClockHour","getSegmentsForClockHour","clockHourToSegmentsMap","getPosition","createTearPath","getStyles","CoordinateSystem","jsxDEV","_jsxDEV","Fragment","_Fragment","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","styles","transition","tear","default","fill","stroke","strokeWidth","hover","circle","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","hour","radius","point","debug","clockAngle","degreeToSegment","degree","segmentToDegree","segment","groupConsecutive","numbers","length","sorted","Set","sort","a","b","ranges","range","i","curr","prev","currSegments","get","prevSegments","isConsecutive","allPrevSegmentsPresent","every","seg","includes","allCurrSegmentsPresent","isTransitionComplete","push","lastHour","lastHourSegments","filter","createSelectionDescription","tearRanges","tearDescription","map","formatHourRange","join","detachmentHours","detachmentRanges","detachmentDescription","isSelected","isHovered","tearPath","d","transform","getSegmentFromPoint","clientX","clientY","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTearLongPress","timeout","start","setTimeout","cancel","clearTimeout","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","onTouchCancel","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","Array","_","pos","posOuter","nextDegree","nextPos","nextPosOuter","visualPos","interactionPos","onClick","onMouseEnter","cursor","textAnchor","alignmentBaseline","fontSize","x1","y1","x2","y2","from","entries","segments","hasAny","some","hasAll","segs","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  segmentToClockHour,\n  getSegmentsForClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nimport {\n  getPosition,\n  createTearPath,\n} from \"./utils/clockCalculations\";\nimport { getStyles } from \"./styles/clockStyles\";\nimport CoordinateSystem from \"./utils/clockCoordinates\";\n\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange,\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // Style constants remain unchanged\n  const styles = {\n    transition: 'fill 0.2s ease, stroke 0.2s ease',\n    tear: {\n      default: {\n        fill: '#dc2626',\n        stroke: '#dc2626',\n        strokeWidth: '0.5'\n      },\n      hover: {\n        fill: '#b91c1c',\n        stroke: '#b91c1c',\n        strokeWidth: '0.5'\n      }\n    },\n    circle: {\n      default: {\n        fill: 'white',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      },\n      hover: {\n        fill: '#fee2e2',\n        stroke: '#d1d5db',\n        strokeWidth: '1.5'\n      }\n    }\n  };\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Updated coordinate conversion functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180); // -90 to start at top\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360; // Convert to clockwise from top\n  };\n\n  // Updated hour and position calculations\n  const getPosition = (hour, radius) => {\n    const angle = hour * 30; // 360/12 = 30 degrees per hour\n    const point = polarToCartesian(angle, radius);\n    return {\n      ...point,\n      angle,\n      debug: {\n        hour,\n        clockAngle: angle\n      }\n    };\n  };\n\n  // Rest of the utility functions remain unchanged\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n\n\n   // Updated grouping function for consecutive hours with strict continuity checking\n   const groupConsecutive = (numbers) => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n      const currSegments = clockHourToSegmentsMap.get(curr) || [];\n      const prevSegments = clockHourToSegmentsMap.get(prev) || [];\n      \n      // Check if hours are consecutive\n      const isConsecutive = curr === prev + 1 || (prev === 12 && curr === 1);\n      \n      // Check if all segments for both hours are present\n      const allPrevSegmentsPresent = prevSegments.every(seg => detachmentSegments.includes(seg));\n      const allCurrSegmentsPresent = currSegments.every(seg => detachmentSegments.includes(seg));\n      \n      // Check if the transition between hours is continuous\n      const isTransitionComplete = isConsecutive && allPrevSegmentsPresent && allCurrSegmentsPresent;\n\n      if (isTransitionComplete) {\n        range.push(curr);\n      } else {\n        if (allPrevSegmentsPresent) {\n          ranges.push(range);\n        }\n        if (allCurrSegmentsPresent) {\n          range = [curr];\n        } else {\n          range = [];\n        }\n      }\n    }\n    \n    // Don't forget to add the last range if it's complete\n    if (range.length > 0) {\n      const lastHour = range[range.length - 1];\n      const lastHourSegments = clockHourToSegmentsMap.get(lastHour) || [];\n      if (lastHourSegments.every(seg => detachmentSegments.includes(seg))) {\n        ranges.push(range);\n      }\n    }\n    \n    return ranges.filter(range => range.length > 0);\n  };\n\n  // Create description of current selections with strict continuity checking\n  const createSelectionDescription = () => {\n    // Handle tears (already in clock hours)\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0\n      ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No breaks marked';\n\n    // Handle detachment with strict continuity checking\n    const detachmentHours = [...new Set(detachmentSegments.map(segmentToClockHour))];\n    const detachmentRanges = groupConsecutive(detachmentHours);\n    const detachmentDescription = detachmentRanges.length > 0\n      ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No detachment marked';\n\n    return { tearDescription, detachmentDescription };\n  };\n\n  // Style helper remains unchanged\n  const getStyles = (hour, hoveredHour, isSelected) => {\n    const isHovered = hoveredHour === hour;\n    if (isSelected) {\n      return {\n        ...styles.tear.default,\n        ...(isHovered ? styles.tear.hover : {}),\n        transition: styles.transition\n      };\n    }\n    return {\n      ...styles.circle.default,\n      ...(isHovered ? styles.circle.hover : {}),\n      transition: styles.transition\n    };\n  };\n\n  // Create tear path remains unchanged\n  const createTearPath = (x, y, angle) => {\n    const tearPath = `\n      M -4 -8\n      c -0.091 -0.936 0.333 -1.232 0.777 0.658\n      c 0.389 1.655 1.060 3.281 1.060 3.281\n      s 0 0.254 1.022 0.617\n      c 0.793 0.282 2.183 -2.882 2.183 -2.882\n      s 1.953 -4.433 1.437 -1.294\n      c -1.217 7.410 -1.640 6.716 -1.664 6.897\n      c -0.024 0.181 -0.510 0.596 -0.510 0.596\n      s -0.178 0.183 -0.585 0.327\n      c -3.121 1.110 -3.163 -3.001 -3.163 -3.001\n      L -4 -8\n    `;\n    return {\n      d: tearPath,\n      transform: `translate(${x}, ${y}) scale(1.5) rotate(${angle})`\n    };\n  };\n\n  // Event handlers remain unchanged\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  const handleDrawingStart = useCallback((e) => {\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler remains unchanged\n  const handleTearLongPress = useCallback((hour) => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: (e) => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel,\n    };\n  }, [onTearToggle]);\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      <div className=\"relative touch-none select-none\"\n        style={{\n          width: \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: \"200px\",\n          maxWidth: \"500px\",\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Grid circles */}\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n          <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n\n          {/* Detachment segments */}\n          <g>\n            {[...Array(60)].map((_, i) => {\n              const degree = segmentToDegree(i);\n              const pos = polarToCartesian(degree, innerRadius);\n              const posOuter = polarToCartesian(degree, outerRadius);\n              const nextDegree = segmentToDegree(i + 1);\n              const nextPos = polarToCartesian(nextDegree, innerRadius);\n              const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n\n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`}\n                  fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                />\n              );\n            })}\n          </g>\n\n          {/* Hour markers and tears */}\n          <g>\n            {[...Array(12)].map((_, i) => {\n              const hour = i === 0 ? 12 : i; // Fixed hour calculation\n              const visualPos = getPosition(hour, tearRadius);\n              const interactionPos = isTouchDevice\n                ? getPosition(hour, outerRadius)\n                : visualPos;\n              const isSelected = selectedHours.includes(hour);\n\n              return (\n                <g\n                  key={`tear-${hour}`}\n                  {...(isTouchDevice\n                    ? handleTearLongPress(hour)\n                    : { onClick: () => onTearToggle(hour) })}\n                  onMouseEnter={() => onHoverChange(hour)}\n                  onMouseLeave={() => onHoverChange(null)}\n                  style={{ cursor: \"pointer\" }}\n                  data-hour={hour}\n                >\n                  {isTouchDevice && (\n                    <circle\n                      cx={interactionPos.x}\n                      cy={interactionPos.y}\n                      r=\"12\"\n                      fill=\"transparent\"\n                    />\n                  )}\n\n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n\n                  {/* Hour label - simplified */}\n                  <text\n                    x={visualPos.x}\n                    y={visualPos.y}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"middle\"\n                    fontSize=\"8\"\n                    fill=\"black\"\n                  >\n                    {hour}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n  \n\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-sm p-4\">\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900\">Current Selection:</h3>\n          <div className=\"space-y-1\">\n            {(() => {\n              const { tearDescription, detachmentDescription } = createSelectionDescription();\n              return (\n                <>\n                  <p className=\"text-sm text-gray-600\">{tearDescription}</p>\n                  <p className=\"text-sm text-gray-600\">{detachmentDescription}</p>\n                </>\n              );\n            })()}\n          </div>\n          \n          <div className=\"mt-4 pt-2 border-t border-gray-200\">\n            <p className=\"text-xs font-medium text-gray-700\">Debug Information:</p>\n            <div className=\"mt-1 space-y-1\">\n              <p className=\"text-xs text-gray-600\">\n                Raw segments: {detachmentSegments.sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Mapped clock hours: {[...new Set(detachmentSegments.map(segmentToClockHour))].sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Selected tear hours: {selectedHours.sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Complete hours: {\n                  Array.from(clockHourToSegmentsMap.entries())\n                    .filter(([hour]) => {\n                      const segments = clockHourToSegmentsMap.get(hour) || [];\n                      return segments.every(seg => detachmentSegments.includes(seg));\n                    })\n                    .map(([hour]) => hour)\n                    .join(', ')\n                }\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Partial hours: {\n                  Array.from(clockHourToSegmentsMap.entries())\n                    .filter(([hour]) => {\n                      const segments = clockHourToSegmentsMap.get(hour) || [];\n                      const hasAny = segments.some(seg => detachmentSegments.includes(seg));\n                      const hasAll = segments.every(seg => detachmentSegments.includes(seg));\n                      return hasAny && !hasAll;\n                    })\n                    .map(([hour, segs]) => `${hour}:(${segs.filter(seg => detachmentSegments.includes(seg)).join(',')})`)\n                    .join(' | ')\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}