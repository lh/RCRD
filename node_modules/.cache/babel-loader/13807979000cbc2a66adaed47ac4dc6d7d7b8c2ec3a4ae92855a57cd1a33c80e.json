{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { segmentToClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { getSegmentFromPoint, getPosition, createTearPath, getStyles } from \"./utils/clockCalculations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const mobileInnerRadius = 40; // Smaller inner radius for mobile\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20; // Larger hit area for tears on mobile\n  const indicatorExtension = 1;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [longPressTimer, setLongPressTimer] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n  const degreeToSegment = degree => {\n    const segments = isTouchDevice ? 24 : 12;\n    return Math.floor(degree / (360 / segments)) % segments;\n  };\n  const segmentToDegree = segment => {\n    const segments = isTouchDevice ? 24 : 12;\n    return segment * (360 / segments) % 360;\n  };\n\n  // Check if a point is within tear hit area\n  const isWithinTearArea = useCallback((x, y) => {\n    if (!isTouchDevice) return false;\n    const {\n      x: cx,\n      y: cy\n    } = polarToCartesian(0, tearRadius);\n    const distance = Math.sqrt((x - cx) ** 2 + (y - cy) ** 2);\n    return distance <= tearHitRadius;\n  }, [isTouchDevice, tearRadius, tearHitRadius]);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    if (readOnly) return;\n    e.preventDefault();\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    if (isWithinTearArea(touch.clientX, touch.clientY)) return;\n    setIsDrawing(true);\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (segment !== null) {\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    }\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly, isWithinTearArea]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    if (isWithinTearArea(touch.clientX, touch.clientY)) return;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== null && currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly, isWithinTearArea]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback(hour => e => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n  const handleTouchEnd = useCallback(e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n  const effectiveInnerRadius = isTouchDevice ? mobileInnerRadius : innerRadius;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`,\n    style: {\n      width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n      aspectRatio: \"1\",\n      minWidth: readOnly ? \"200px\" : \"200px\",\n      maxWidth: readOnly ? \"200px\" : \"500px\"\n    },\n    onContextMenu: e => e.preventDefault(),\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      viewBox: \"-110 -110 220 220\",\n      className: \"w-full h-full\",\n      preserveAspectRatio: \"xMidYMid meet\",\n      onMouseDown: !isTouchDevice ? handleDrawingStart : undefined,\n      onMouseMove: !isTouchDevice ? handleDrawing : undefined,\n      onMouseUp: !isTouchDevice ? handleDrawingEnd : undefined,\n      onMouseLeave: !isTouchDevice ? handleDrawingEnd : undefined,\n      onTouchStart: isTouchDevice ? handleDrawingStart : undefined,\n      onTouchMove: isTouchDevice ? handleDrawing : undefined,\n      onTouchEnd: isTouchDevice ? handleDrawingEnd : undefined,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: effectiveInnerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-auto\",\n        children: [...Array(isTouchDevice ? 24 : 12)].map((_, i) => {\n          const degree = segmentToDegree(i);\n          const pos = polarToCartesian(degree, effectiveInnerRadius);\n          const posOuter = polarToCartesian(degree, outerRadius);\n          const nextDegree = segmentToDegree(i + 1);\n          const nextPos = polarToCartesian(nextDegree, effectiveInnerRadius);\n          const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            d: `M ${pos.x} ${pos.y} \n                    L ${posOuter.x} ${posOuter.y} \n                    A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                    L ${nextPos.x} ${nextPos.y}\n                    A ${effectiveInnerRadius} ${effectiveInnerRadius} 0 0 0 ${pos.x} ${pos.y}`,\n            fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n            className: `cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`\n          }, `segment-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"pointer-events-auto\",\n        children: [...Array(12)].map((_, i) => {\n          const hour = i === 0 ? 12 : i;\n          const visualPos = getPosition(hour, tearRadius);\n          const isSelected = selectedHours.includes(hour);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            onClick: !isTouchDevice && !readOnly ? e => {\n              e.preventDefault();\n              e.stopPropagation();\n              onTearToggle(hour);\n            } : undefined,\n            onTouchStart: isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined,\n            onTouchEnd: isTouchDevice && !readOnly ? handleTouchEnd : undefined,\n            onMouseEnter: !isTouchDevice && !readOnly ? () => onHoverChange(hour) : undefined,\n            onMouseLeave: !isTouchDevice && !readOnly ? () => onHoverChange(null) : undefined,\n            style: {\n              cursor: readOnly ? 'default' : 'pointer'\n            },\n            children: [isTouchDevice && !readOnly && /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: visualPos.x,\n              cy: visualPos.y,\n              r: tearHitRadius,\n              fill: \"transparent\",\n              className: \"pointer-events-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n              ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n              style: getStyles(hour, hoveredHour, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: visualPos.x,\n              cy: visualPos.y,\n              r: \"12\",\n              style: getStyles(hour, hoveredHour, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, `tear-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"pointer-events-none\",\n        x1: \"0\",\n        y1: -outerRadius,\n        x2: \"0\",\n        y2: -(outerRadius + indicatorExtension),\n        stroke: \"#666\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"7/KztHmZ4f70H8vXjauKKgf9I9I=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","segmentToClockHour","clockHourToSegmentsMap","getSegmentFromPoint","getPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","onHoverChange","onTearToggle","onSegmentToggle","readOnly","_s","outerRadius","innerRadius","mobileInnerRadius","middleRadius","Math","floor","tearRadius","tearHitRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","isTouchDevice","setIsTouchDevice","longPressTimer","setLongPressTimer","svgRef","window","navigator","maxTouchPoints","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segments","segmentToDegree","segment","isWithinTearArea","cx","cy","distance","sqrt","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","clientX","clientY","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTouchStart","hour","stopPropagation","timer","setTimeout","handleTouchEnd","clearTimeout","effectiveInnerRadius","className","style","width","aspectRatio","minWidth","maxWidth","onContextMenu","children","ref","viewBox","preserveAspectRatio","onMouseDown","undefined","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","pos","posOuter","nextDegree","nextPos","nextPosOuter","d","includes","visualPos","isSelected","onClick","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RCRD/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport {\n  segmentToClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nimport {\n  getSegmentFromPoint,\n  getPosition,\n  createTearPath,\n  getStyles\n} from \"./utils/clockCalculations\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  onHoverChange,\n  onTearToggle,\n  onSegmentToggle,\n  readOnly = false\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 60;\n  const mobileInnerRadius = 40; // Smaller inner radius for mobile\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 14;\n  const tearHitRadius = 20; // Larger hit area for tears on mobile\n  const indicatorExtension = 1;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const [isTouchDevice, setIsTouchDevice] = useState(false);\n  const [longPressTimer, setLongPressTimer] = useState(null);\n  const svgRef = useRef(null);\n\n  // Detect touch device\n  useEffect(() => {\n    setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0);\n  }, []);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n\n  const degreeToSegment = (degree) => {\n    const segments = isTouchDevice ? 24 : 12;\n    return Math.floor(degree / (360 / segments)) % segments;\n  };\n\n  const segmentToDegree = (segment) => {\n    const segments = isTouchDevice ? 24 : 12;\n    return (segment * (360 / segments)) % 360;\n  };\n\n  // Check if a point is within tear hit area\n  const isWithinTearArea = useCallback((x, y) => {\n    if (!isTouchDevice) return false;\n    const { x: cx, y: cy } = polarToCartesian(0, tearRadius);\n    const distance = Math.sqrt((x - cx) ** 2 + (y - cy) ** 2);\n    return distance <= tearHitRadius;\n  }, [isTouchDevice, tearRadius, tearHitRadius]);\n\n  const handleDrawingStart = useCallback((e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    \n    const touch = e.touches?.[0] || e;\n    if (isWithinTearArea(touch.clientX, touch.clientY)) return;\n\n    setIsDrawing(true);\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (segment !== null) {\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    }\n  }, [getSegmentFromPoint, onSegmentToggle, readOnly, isWithinTearArea]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    \n    const touch = e.touches?.[0] || e;\n    if (isWithinTearArea(touch.clientX, touch.clientY)) return;\n\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== null && currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle, readOnly, isWithinTearArea]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing || readOnly) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing, readOnly]);\n\n  // Long press handlers for mobile\n  const handleTouchStart = useCallback((hour) => (e) => {\n    if (readOnly) return;\n    e.preventDefault();\n    e.stopPropagation();\n    const timer = setTimeout(() => {\n      onTearToggle(hour);\n    }, 500);\n    setLongPressTimer(timer);\n  }, [onTearToggle, readOnly]);\n\n  const handleTouchEnd = useCallback((e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (longPressTimer) {\n      clearTimeout(longPressTimer);\n      setLongPressTimer(null);\n    }\n  }, [longPressTimer]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (longPressTimer) {\n        clearTimeout(longPressTimer);\n      }\n    };\n  }, [longPressTimer]);\n\n  const effectiveInnerRadius = isTouchDevice ? mobileInnerRadius : innerRadius;\n\n  return (\n    <div className={`relative touch-none select-none ${readOnly ? 'pointer-events-none' : ''}`}\n      style={{\n        width: readOnly ? \"200px\" : \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: readOnly ? \"200px\" : \"200px\",\n        maxWidth: readOnly ? \"200px\" : \"500px\",\n      }}\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      <svg\n        ref={svgRef}\n        viewBox=\"-110 -110 220 220\"\n        className=\"w-full h-full\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        onMouseDown={!isTouchDevice ? handleDrawingStart : undefined}\n        onMouseMove={!isTouchDevice ? handleDrawing : undefined}\n        onMouseUp={!isTouchDevice ? handleDrawingEnd : undefined}\n        onMouseLeave={!isTouchDevice ? handleDrawingEnd : undefined}\n        onTouchStart={isTouchDevice ? handleDrawingStart : undefined}\n        onTouchMove={isTouchDevice ? handleDrawing : undefined}\n        onTouchEnd={isTouchDevice ? handleDrawingEnd : undefined}\n      >\n        {/* Background and grid circles */}\n        <g className=\"pointer-events-none\">\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n          <circle cx=\"0\" cy=\"0\" r={effectiveInnerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n        </g>\n\n        {/* Detachment segments layer */}\n        <g className=\"pointer-events-auto\">\n          {[...Array(isTouchDevice ? 24 : 12)].map((_, i) => {\n            const degree = segmentToDegree(i);\n            const pos = polarToCartesian(degree, effectiveInnerRadius);\n            const posOuter = polarToCartesian(degree, outerRadius);\n            const nextDegree = segmentToDegree(i + 1);\n            const nextPos = polarToCartesian(nextDegree, effectiveInnerRadius);\n            const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n\n            return (\n              <path\n                key={`segment-${i}`}\n                d={`M ${pos.x} ${pos.y} \n                    L ${posOuter.x} ${posOuter.y} \n                    A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                    L ${nextPos.x} ${nextPos.y}\n                    A ${effectiveInnerRadius} ${effectiveInnerRadius} 0 0 0 ${pos.x} ${pos.y}`}\n                fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                className={`cursor-pointer hover:fill-blue-200 transition-colors ${readOnly ? '' : 'pointer-events-auto'}`}\n              />\n            );\n          })}\n        </g>\n\n        {/* Tear markers layer */}\n        <g className=\"pointer-events-auto\">\n          {[...Array(12)].map((_, i) => {\n            const hour = i === 0 ? 12 : i;\n            const visualPos = getPosition(hour, tearRadius);\n            const isSelected = selectedHours.includes(hour);\n\n            return (\n              <g\n                key={`tear-${hour}`}\n                onClick={!isTouchDevice && !readOnly ? (e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  onTearToggle(hour);\n                } : undefined}\n                onTouchStart={isTouchDevice && !readOnly ? handleTouchStart(hour) : undefined}\n                onTouchEnd={isTouchDevice && !readOnly ? handleTouchEnd : undefined}\n                onMouseEnter={!isTouchDevice && !readOnly ? () => onHoverChange(hour) : undefined}\n                onMouseLeave={!isTouchDevice && !readOnly ? () => onHoverChange(null) : undefined}\n                style={{\n                  cursor: readOnly ? 'default' : 'pointer'\n                }}\n              >\n                {/* Invisible larger hit area for mobile */}\n                {isTouchDevice && !readOnly && (\n                  <circle\n                    cx={visualPos.x}\n                    cy={visualPos.y}\n                    r={tearHitRadius}\n                    fill=\"transparent\"\n                    className=\"pointer-events-auto\"\n                  />\n                )}\n                \n                {isSelected ? (\n                  <path\n                    {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                    style={getStyles(hour, hoveredHour, true)}\n                  />\n                ) : (\n                  <circle\n                    cx={visualPos.x}\n                    cy={visualPos.y}\n                    r=\"12\"\n                    style={getStyles(hour, hoveredHour, false)}\n                  />\n                )}\n              </g>\n            );\n          })}\n        </g>\n\n        {/* 12 o'clock indicator */}\n        <line\n          className=\"pointer-events-none\"\n          x1=\"0\"\n          y1={-outerRadius}\n          x2=\"0\"\n          y2={-(outerRadius + indicatorExtension)}\n          stroke=\"#666\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default ClockFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}