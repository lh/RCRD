{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { segmentToClockHour, clockHourToSegmentsMap } from \"./utils/clockMapping\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n  const degreeToSegment = degree => {\n    return Math.floor(degree / 6) % 60;\n  };\n  const segmentToDegree = segment => {\n    return segment * 6 % 360;\n  };\n  const formatHourRange = range => {\n    if (!Array.isArray(range)) return '';\n    if (range.length === 0) return '';\n    if (range.length === 1) return `${range[0]}`;\n    return `${range[0]}-${range[range.length - 1]}`;\n  };\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Selection description logic\n  const groupConsecutive = numbers => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n      const currSegments = clockHourToSegmentsMap.get(curr) || [];\n      const prevSegments = clockHourToSegmentsMap.get(prev) || [];\n      const isConsecutive = curr === prev + 1 || prev === 12 && curr === 1;\n      const allPrevSegmentsPresent = prevSegments.every(seg => detachmentSegments.includes(seg));\n      const allCurrSegmentsPresent = currSegments.every(seg => detachmentSegments.includes(seg));\n      const isTransitionComplete = isConsecutive && allPrevSegmentsPresent && allCurrSegmentsPresent;\n      if (isTransitionComplete) {\n        range.push(curr);\n      } else {\n        if (allPrevSegmentsPresent) {\n          ranges.push(range);\n        }\n        if (allCurrSegmentsPresent) {\n          range = [curr];\n        } else {\n          range = [];\n        }\n      }\n    }\n    if (range.length > 0) {\n      const lastHour = range[range.length - 1];\n      const lastHourSegments = clockHourToSegmentsMap.get(lastHour) || [];\n      if (lastHourSegments.every(seg => detachmentSegments.includes(seg))) {\n        ranges.push(range);\n      }\n    }\n    return ranges.filter(range => range.length > 0);\n  };\n  const createSelectionDescription = () => {\n    // Handle tears\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0 ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock` : 'No breaks marked';\n\n    // Handle detachment\n    const completeHours = Array.from(clockHourToSegmentsMap.entries()).filter(([hour, segments]) => segments.every(seg => detachmentSegments.includes(seg))).map(([hour]) => hour);\n    const detachmentRanges = groupConsecutive(completeHours);\n    const detachmentDescription = detachmentRanges.length > 0 ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock` : 'No detachment marked';\n    return {\n      tearDescription,\n      detachmentDescription\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: \"200px\",\n        maxWidth: \"500px\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const degree = segmentToDegree(i);\n            const pos = polarToCartesian(degree, innerRadius);\n            const posOuter = polarToCartesian(degree, outerRadius);\n            const nextDegree = segmentToDegree(i + 1);\n            const nextPos = polarToCartesian(nextDegree, innerRadius);\n            const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`,\n              fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\"\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md bg-white rounded-lg shadow-sm p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-medium text-gray-900\",\n          children: \"Current Selection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: (() => {\n            const {\n              tearDescription,\n              detachmentDescription\n            } = createSelectionDescription();\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: tearDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: detachmentDescription\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 pt-2 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Debug Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Raw segments: \", detachmentSegments.sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Mapped clock hours: \", Array.from(new Set(detachmentSegments.map(segmentToClockHour))).sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Complete hours: \", Array.from(clockHourToSegmentsMap.entries()).filter(([_, segments]) => segments.every(seg => detachmentSegments.includes(seg))).map(([hour]) => hour).sort((a, b) => a - b).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: [\"Partial hours: \", Array.from(clockHourToSegmentsMap.entries()).filter(([_, segments]) => {\n                const hasAny = segments.some(seg => detachmentSegments.includes(seg));\n                const hasAll = segments.every(seg => detachmentSegments.includes(seg));\n                return hasAny && !hasAll;\n              }).map(([hour, segs]) => `${hour}:(${segs.filter(seg => detachmentSegments.includes(seg)).join(',')})`).join(' | ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"TUNK6VUtufIG5TV6r45GxjAz8yc=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","segmentToClockHour","clockHourToSegmentsMap","jsxDEV","_jsxDEV","Fragment","_Fragment","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","polarToCartesian","angle","r","radian","PI","x","cos","y","sin","cartesianToPolar","atan2","degreeToSegment","degree","segmentToDegree","segment","formatHourRange","range","Array","isArray","length","getSegmentFromPoint","clientX","clientY","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","relX","relY","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","groupConsecutive","numbers","sorted","Set","sort","a","b","ranges","i","curr","prev","currSegments","get","prevSegments","isConsecutive","allPrevSegmentsPresent","every","seg","includes","allCurrSegmentsPresent","isTransitionComplete","push","lastHour","lastHourSegments","filter","createSelectionDescription","tearRanges","tearDescription","map","join","completeHours","from","entries","hour","segments","detachmentRanges","detachmentDescription","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","cx","cy","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","_","pos","posOuter","nextDegree","nextPos","nextPosOuter","d","x1","y1","x2","y2","hasAny","some","hasAll","segs","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  segmentToClockHour,\n  clockHourToSegmentsMap\n} from \"./utils/clockMapping\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange,\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Utility functions\n  const polarToCartesian = (angle, r) => {\n    const radian = (angle - 90) * (Math.PI / 180);\n    return {\n      x: r * Math.cos(radian),\n      y: r * Math.sin(radian)\n    };\n  };\n\n  const cartesianToPolar = (x, y) => {\n    const angle = Math.atan2(y, x) * (180 / Math.PI);\n    return (90 - angle + 360) % 360;\n  };\n\n  const degreeToSegment = (degree) => {\n    return Math.floor(degree / 6) % 60;\n  };\n\n  const segmentToDegree = (segment) => {\n    return (segment * 6) % 360;\n  };\n\n  const formatHourRange = (range) => {\n    if (!Array.isArray(range)) return '';\n    if (range.length === 0) return '';\n    if (range.length === 1) return `${range[0]}`;\n    return `${range[0]}-${range[range.length - 1]}`;\n  };\n\n  // Event handlers\n  const getSegmentFromPoint = useCallback((clientX, clientY) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const relX = clientX - centerX;\n    const relY = -(clientY - centerY);\n    const angle = cartesianToPolar(relX, relY);\n    return degreeToSegment(angle);\n  }, []);\n\n  const handleDrawingStart = useCallback((e) => {\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = e.touches?.[0] || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawing = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = e.touches?.[0] || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n\n  const handleDrawingEnd = useCallback((e) => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Selection description logic\n  const groupConsecutive = (numbers) => {\n    if (numbers.length === 0) return [];\n    const sorted = [...new Set(numbers)].sort((a, b) => a - b);\n    const ranges = [];\n    let range = [sorted[0]];\n\n    for (let i = 1; i < sorted.length; i++) {\n      const curr = sorted[i];\n      const prev = sorted[i - 1];\n      const currSegments = clockHourToSegmentsMap.get(curr) || [];\n      const prevSegments = clockHourToSegmentsMap.get(prev) || [];\n      \n      const isConsecutive = curr === prev + 1 || (prev === 12 && curr === 1);\n      const allPrevSegmentsPresent = prevSegments.every(seg => detachmentSegments.includes(seg));\n      const allCurrSegmentsPresent = currSegments.every(seg => detachmentSegments.includes(seg));\n      const isTransitionComplete = isConsecutive && allPrevSegmentsPresent && allCurrSegmentsPresent;\n\n      if (isTransitionComplete) {\n        range.push(curr);\n      } else {\n        if (allPrevSegmentsPresent) {\n          ranges.push(range);\n        }\n        if (allCurrSegmentsPresent) {\n          range = [curr];\n        } else {\n          range = [];\n        }\n      }\n    }\n    \n    if (range.length > 0) {\n      const lastHour = range[range.length - 1];\n      const lastHourSegments = clockHourToSegmentsMap.get(lastHour) || [];\n      if (lastHourSegments.every(seg => detachmentSegments.includes(seg))) {\n        ranges.push(range);\n      }\n    }\n    \n    return ranges.filter(range => range.length > 0);\n  };\n\n  const createSelectionDescription = () => {\n    // Handle tears\n    const tearRanges = groupConsecutive(selectedHours);\n    const tearDescription = tearRanges.length > 0\n      ? `Breaks at ${tearRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No breaks marked';\n\n    // Handle detachment\n    const completeHours = Array.from(clockHourToSegmentsMap.entries())\n      .filter(([hour, segments]) => segments.every(seg => detachmentSegments.includes(seg)))\n      .map(([hour]) => hour);\n    \n    const detachmentRanges = groupConsecutive(completeHours);\n    const detachmentDescription = detachmentRanges.length > 0\n      ? `Detachment from ${detachmentRanges.map(formatHourRange).join(', ')} o'clock`\n      : 'No detachment marked';\n\n    return { tearDescription, detachmentDescription };\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4\">\n      {/* SVG container */}\n      <div className=\"relative touch-none select-none\"\n        style={{\n          width: \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: \"200px\",\n          maxWidth: \"500px\",\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Grid circles */}\n          <circle cx=\"0\" cy=\"0\" r={outerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n          <circle cx=\"0\" cy=\"0\" r={middleRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\" />\n          <circle cx=\"0\" cy=\"0\" r={innerRadius} fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\" />\n\n          {/* Detachment segments */}\n          <g>\n            {[...Array(60)].map((_, i) => {\n              const degree = segmentToDegree(i);\n              const pos = polarToCartesian(degree, innerRadius);\n              const posOuter = polarToCartesian(degree, outerRadius);\n              const nextDegree = segmentToDegree(i + 1);\n              const nextPos = polarToCartesian(nextDegree, innerRadius);\n              const nextPosOuter = polarToCartesian(nextDegree, outerRadius);\n\n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${pos.x} ${pos.y} \n                      L ${posOuter.x} ${posOuter.y} \n                      A ${outerRadius} ${outerRadius} 0 0 1 ${nextPosOuter.x} ${nextPosOuter.y}\n                      L ${nextPos.x} ${nextPos.y}\n                      A ${innerRadius} ${innerRadius} 0 0 0 ${pos.x} ${pos.y}`}\n                  fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                />\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n\n      {/* Description panel */}\n      <div className=\"w-full max-w-md bg-white rounded-lg shadow-sm p-4\">\n        <div className=\"space-y-2\">\n          <h3 className=\"text-sm font-medium text-gray-900\">Current Selection:</h3>\n          <div className=\"space-y-1\">\n            {(() => {\n              const { tearDescription, detachmentDescription } = createSelectionDescription();\n              return (\n                <>\n                  <p className=\"text-sm text-gray-600\">{tearDescription}</p>\n                  <p className=\"text-sm text-gray-600\">{detachmentDescription}</p>\n                </>\n              );\n            })()}\n          </div>\n          \n          <div className=\"mt-4 pt-2 border-t border-gray-200\">\n            <p className=\"text-xs font-medium text-gray-700\">Debug Information:</p>\n            <div className=\"mt-1 space-y-1\">\n              <p className=\"text-xs text-gray-600\">\n                Raw segments: {detachmentSegments.sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Mapped clock hours: {Array.from(new Set(detachmentSegments.map(segmentToClockHour))).sort((a, b) => a - b).join(', ')}\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Complete hours: {\n                  Array.from(clockHourToSegmentsMap.entries())\n                    .filter(([_, segments]) => segments.every(seg => detachmentSegments.includes(seg)))\n                    .map(([hour]) => hour)\n                    .sort((a, b) => a - b)\n                    .join(', ')\n                }\n              </p>\n              <p className=\"text-xs text-gray-600\">\n                Partial hours: {\n                  Array.from(clockHourToSegmentsMap.entries())\n                    .filter(([_, segments]) => {\n                      const hasAny = segments.some(seg => detachmentSegments.includes(seg));\n                      const hasAll = segments.every(seg => detachmentSegments.includes(seg));\n                      return hasAny && !hasAll;\n                    })\n                    .map(([hour, segs]) => `${hour}:(${segs.filter(seg => detachmentSegments.includes(seg)).join(',')})`)\n                    .join(' | ')\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}