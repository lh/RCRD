{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { getPosition, getSegmentPosition, createTearPath } from \"./utils/clockCalculations\";\nimport { getStyles } from \"./styles/clockStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange\n}) => {\n  _s();\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Segment calculation functions\n  const getSegmentFromPoint = useCallback((x, y) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n    const dx = x - centerX;\n    const dy = -(y - centerY);\n    let angle = Math.atan2(dy, dx);\n    angle = -angle + Math.PI / 2;\n    angle = (angle * 180 / Math.PI + 360) % 360;\n    return Math.floor(angle / 6);\n  }, []);\n\n  // Drawing event handlers\n  const handleDrawingStart = useCallback(e => {\n    var _e$touches;\n    e.preventDefault();\n    setIsDrawing(true);\n    const touch = ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : _e$touches[0]) || e;\n    const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    console.log(\"Drawing Start:\", {\n      segment\n    });\n    setLastPosition(segment);\n    onSegmentToggle(segment);\n  }, [getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawing = useCallback(e => {\n    var _e$touches2;\n    if (!isDrawing) return;\n    e.preventDefault();\n    const touch = ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : _e$touches2[0]) || e;\n    const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n    if (currentSegment !== lastPosition) {\n      console.log(\"Drawing Move:\", {\n        lastPosition,\n        currentSegment\n      });\n      onSegmentToggle(currentSegment);\n      setLastPosition(currentSegment);\n    }\n  }, [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]);\n  const handleDrawingEnd = useCallback(e => {\n    if (!isDrawing) return;\n    e.preventDefault();\n    console.log(\"Drawing End\");\n    setIsDrawing(false);\n    setLastPosition(null);\n  }, [isDrawing]);\n\n  // Long press handler for tears\n  const handleTearLongPress = useCallback(hour => {\n    let timeout;\n    const start = () => {\n      timeout = setTimeout(() => {\n        onTearToggle(hour);\n      }, 500);\n    };\n    const cancel = () => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onTouchStart: e => {\n        e.preventDefault();\n        start();\n      },\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchEnd: cancel,\n      onTouchCancel: cancel\n    };\n  }, [onTearToggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: \"min(80vw, min(80vh, 500px))\",\n        aspectRatio: \"1\",\n        minWidth: \"200px\",\n        maxWidth: \"500px\"\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseDown: handleDrawingStart,\n        onMouseMove: handleDrawing,\n        onMouseUp: handleDrawingEnd,\n        onMouseLeave: handleDrawingEnd,\n        onTouchStart: handleDrawingStart,\n        onTouchMove: handleDrawing,\n        onTouchEnd: handleDrawingEnd,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: outerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: middleRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: innerRadius,\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [[...Array(60)].map((_, i) => {\n            // Adjust the positions for drawing the path\n            const adjustedPos = (i + 2) % 60;\n            const adjustedNextPos = (adjustedPos + 1) % 60;\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${getSegmentPosition(adjustedPos, innerRadius).x} ${getSegmentPosition(adjustedPos, innerRadius).y} \n               L ${getSegmentPosition(adjustedPos, outerRadius).x} ${getSegmentPosition(adjustedPos, outerRadius).y} \n               A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(adjustedNextPos, outerRadius).x} ${getSegmentPosition(adjustedNextPos, outerRadius).y}\n               L ${getSegmentPosition(adjustedNextPos, innerRadius).x} ${getSegmentPosition(adjustedNextPos, innerRadius).y}\n               A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(adjustedPos, innerRadius).x} ${getSegmentPosition(adjustedPos, innerRadius).y}`,\n              fill: detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\"\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this);\n          }), \"          \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), [...Array(60)].map((_, i) => {\n          const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n          const adjustedLabel = (i - 2) % 60; // +2 to match current segment coloring\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            x: pos.x,\n            y: pos.y,\n            textAnchor: \"middle\",\n            alignmentBaseline: \"middle\",\n            fontSize: \"6\",\n            fill: \"#666\",\n            children: adjustedLabel\n          }, `debug-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i + 1;\n            const visualPos = getPosition(hour, tearRadius);\n            const interactionPos = isTouchDevice ? getPosition(hour, outerRadius) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              ...(isTouchDevice ? handleTearLongPress(hour) : {\n                onClick: () => onTearToggle(hour)\n              }),\n              onMouseEnter: () => onHoverChange(hour),\n              onMouseLeave: () => onHoverChange(null),\n              style: {\n                cursor: \"pointer\"\n              },\n              \"data-hour\": hour,\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: -outerRadius,\n          x2: \"0\",\n          y2: -(outerRadius + indicatorExtension),\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockFace, \"Uy+H0dy2aI7YeAR/EOLSd72XEdY=\");\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","useState","useRef","useCallback","getPosition","getSegmentPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","onSegmentToggle","onTearToggle","onHoverChange","_s","outerRadius","innerRadius","middleRadius","Math","floor","tearRadius","indicatorExtension","isDrawing","setIsDrawing","lastPosition","setLastPosition","svgRef","getSegmentFromPoint","x","y","svgRect","current","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","dy","angle","atan2","PI","handleDrawingStart","e","_e$touches","preventDefault","touch","touches","segment","clientX","clientY","console","log","handleDrawing","_e$touches2","currentSegment","handleDrawingEnd","handleTearLongPress","hour","timeout","start","setTimeout","cancel","clearTimeout","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","onTouchCancel","className","children","style","aspectRatio","minWidth","maxWidth","onContextMenu","ref","viewBox","preserveAspectRatio","onMouseMove","onTouchMove","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","adjustedPos","adjustedNextPos","d","includes","pos","adjustedLabel","textAnchor","alignmentBaseline","fontSize","visualPos","interactionPos","isSelected","onClick","onMouseEnter","cursor","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\nimport {\n  getPosition,\n  getSegmentPosition,\n  createTearPath,\n} from \"./utils/clockCalculations\";\nimport { getStyles } from \"./styles/clockStyles\";\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  onSegmentToggle,\n  onTearToggle,\n  onHoverChange,\n}) => {\n  // Constants\n  const outerRadius = 110;\n  const innerRadius = 65;\n  const middleRadius = Math.floor((outerRadius + innerRadius) / 2);\n  const tearRadius = middleRadius + 12;\n  const indicatorExtension = 10;\n\n  // State\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lastPosition, setLastPosition] = useState(null);\n  const svgRef = useRef(null);\n\n  // Segment calculation functions\n  const getSegmentFromPoint = useCallback((x, y) => {\n    const svgRect = svgRef.current.getBoundingClientRect();\n    const centerX = svgRect.left + svgRect.width / 2;\n    const centerY = svgRect.top + svgRect.height / 2;\n\n    const dx = x - centerX;\n    const dy = -(y - centerY);\n\n    let angle = Math.atan2(dy, dx);\n    angle = -angle + Math.PI / 2;\n    angle = ((angle * 180) / Math.PI + 360) % 360;\n\n    return Math.floor(angle / 6);\n  }, []);\n\n  // Drawing event handlers\n  const handleDrawingStart = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsDrawing(true);\n      const touch = e.touches?.[0] || e;\n      const segment = getSegmentFromPoint(touch.clientX, touch.clientY);\n      console.log(\"Drawing Start:\", { segment });\n      setLastPosition(segment);\n      onSegmentToggle(segment);\n    },\n    [getSegmentFromPoint, onSegmentToggle]\n  );\n\n  const handleDrawing = useCallback(\n    (e) => {\n      if (!isDrawing) return;\n      e.preventDefault();\n\n      const touch = e.touches?.[0] || e;\n      const currentSegment = getSegmentFromPoint(touch.clientX, touch.clientY);\n\n      if (currentSegment !== lastPosition) {\n        console.log(\"Drawing Move:\", { lastPosition, currentSegment });\n        onSegmentToggle(currentSegment);\n        setLastPosition(currentSegment);\n      }\n    },\n    [isDrawing, lastPosition, getSegmentFromPoint, onSegmentToggle]\n  );\n\n  const handleDrawingEnd = useCallback(\n    (e) => {\n      if (!isDrawing) return;\n      e.preventDefault();\n      console.log(\"Drawing End\");\n      setIsDrawing(false);\n      setLastPosition(null);\n    },\n    [isDrawing]\n  );\n\n  // Long press handler for tears\n  const handleTearLongPress = useCallback(\n    (hour) => {\n      let timeout;\n\n      const start = () => {\n        timeout = setTimeout(() => {\n          onTearToggle(hour);\n        }, 500);\n      };\n\n      const cancel = () => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n      };\n\n      return {\n        onMouseDown: start,\n        onTouchStart: (e) => {\n          e.preventDefault();\n          start();\n        },\n        onMouseUp: cancel,\n        onMouseLeave: cancel,\n        onTouchEnd: cancel,\n        onTouchCancel: cancel,\n      };\n    },\n    [onTearToggle]\n  );\n\n  return (\n    <div className=\"flex justify-center\">\n      <div\n        className=\"relative touch-none select-none\"\n        style={{\n          width: \"min(80vw, min(80vh, 500px))\",\n          aspectRatio: \"1\",\n          minWidth: \"200px\",\n          maxWidth: \"500px\",\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg\n          ref={svgRef}\n          viewBox=\"-110 -110 220 220\"\n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseDown={handleDrawingStart}\n          onMouseMove={handleDrawing}\n          onMouseUp={handleDrawingEnd}\n          onMouseLeave={handleDrawingEnd}\n          onTouchStart={handleDrawingStart}\n          onTouchMove={handleDrawing}\n          onTouchEnd={handleDrawingEnd}\n        >\n          {/* Grid circles */}\n          <circle\n            cx=\"0\"\n            cy=\"0\"\n            r={outerRadius}\n            fill=\"none\"\n            stroke=\"#e5e5e5\"\n            strokeWidth=\"1\"\n          />\n          <circle\n            cx=\"0\"\n            cy=\"0\"\n            r={middleRadius}\n            fill=\"none\"\n            stroke=\"#e5e5e5\"\n            strokeWidth=\"0.5\"\n          />\n          <circle\n            cx=\"0\"\n            cy=\"0\"\n            r={innerRadius}\n            fill=\"none\"\n            stroke=\"#e5e5e5\"\n            strokeWidth=\"1\"\n          />\n\n          {/* Detachment segments */}\n          <g>\n          {[...Array(60)].map((_, i) => {\n    // Adjust the positions for drawing the path\n    const adjustedPos = (i + 2) % 60;\n    const adjustedNextPos = (adjustedPos + 1) % 60;\n    \n    return (\n        <path\n            key={`segment-${i}`}\n            d={`M ${getSegmentPosition(adjustedPos, innerRadius).x} ${getSegmentPosition(adjustedPos, innerRadius).y} \n               L ${getSegmentPosition(adjustedPos, outerRadius).x} ${getSegmentPosition(adjustedPos, outerRadius).y} \n               A ${outerRadius} ${outerRadius} 0 0 1 ${getSegmentPosition(adjustedNextPos, outerRadius).x} ${getSegmentPosition(adjustedNextPos, outerRadius).y}\n               L ${getSegmentPosition(adjustedNextPos, innerRadius).x} ${getSegmentPosition(adjustedNextPos, innerRadius).y}\n               A ${innerRadius} ${innerRadius} 0 0 0 ${getSegmentPosition(adjustedPos, innerRadius).x} ${getSegmentPosition(adjustedPos, innerRadius).y}`}\n            fill={detachmentSegments.includes(i) ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n            className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n        />\n    );\n})}          </g>\n\n          {/* Debug numbers */}\n          {[...Array(60)].map((_, i) => {\n            const pos = getSegmentPosition(i, (innerRadius + outerRadius) / 2);\n            const adjustedLabel = (i -2) % 60; // +2 to match current segment coloring\n            return (\n              <text\n                key={`debug-${i}`}\n                x={pos.x}\n                y={pos.y}\n                textAnchor=\"middle\"\n                alignmentBaseline=\"middle\"\n                fontSize=\"6\"\n                fill=\"#666\"\n              >\n                {adjustedLabel}\n              </text>\n            );\n          })}\n\n          {/* Tear markers */}\n          <g>\n            {[...Array(12)].map((_, i) => {\n              const hour = i + 1;\n              const visualPos = getPosition(hour, tearRadius);\n              const interactionPos = isTouchDevice\n                ? getPosition(hour, outerRadius)\n                : visualPos;\n              const isSelected = selectedHours.includes(hour);\n\n              return (\n                <g\n                  key={`tear-${hour}`}\n                  {...(isTouchDevice\n                    ? handleTearLongPress(hour)\n                    : { onClick: () => onTearToggle(hour) })}\n                  onMouseEnter={() => onHoverChange(hour)}\n                  onMouseLeave={() => onHoverChange(null)}\n                  style={{ cursor: \"pointer\" }}\n                  data-hour={hour}\n                >\n                  {isTouchDevice && (\n                    <circle\n                      cx={interactionPos.x}\n                      cy={interactionPos.y}\n                      r=\"12\"\n                      fill=\"transparent\"\n                    />\n                  )}\n\n                  {isSelected ? (\n                    <path\n                      {...createTearPath(\n                        visualPos.x,\n                        visualPos.y,\n                        visualPos.angle\n                      )}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n\n          {/* 12 o'clock indicator */}\n          <line\n            x1=\"0\"\n            y1={-outerRadius}\n            x2=\"0\"\n            y2={-(outerRadius + indicatorExtension)}\n            stroke=\"#666\"\n            strokeWidth=\"2\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}