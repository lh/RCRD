{"ast":null,"code":"var _jsxFileName = \"/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx\";\nimport React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  handlers\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative touch-none select-none\",\n      style: {\n        width: 'min(80vw, min(80vh, 500px))',\n        aspectRatio: '1',\n        minWidth: '200px',\n        maxWidth: '500px'\n      },\n      onContextMenu: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"-110 -110 220 220\",\n        className: \"w-full h-full\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        onMouseLeave: handlers.handleEndDrawing,\n        onTouchEnd: handlers.handleEndDrawing,\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: \"100\",\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: \"85\",\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: \"70\",\n          fill: \"none\",\n          stroke: \"#e5e5e5\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(60)].map((_, i) => {\n            const isDetachmentSelected = detachmentSegments.includes(i);\n            const nextSegment = (i + 1) % 60;\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M ${getSegmentPosition(i, 70).x} ${getSegmentPosition(i, 70).y} \n                      L ${getSegmentPosition(i, 100).x} ${getSegmentPosition(i, 100).y} \n                      A 100 100 0 0 1 ${getSegmentPosition(nextSegment, 100).x} ${getSegmentPosition(nextSegment, 100).y}\n                      L ${getSegmentPosition(nextSegment, 70).x} ${getSegmentPosition(nextSegment, 70).y}\n                      A 70 70 0 0 0 ${getSegmentPosition(i, 70).x} ${getSegmentPosition(i, 70).y}`,\n              fill: isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\",\n              className: \"cursor-pointer hover:fill-blue-200 transition-colors\",\n              onMouseDown: e => handlers.handleMouseDown(i, e),\n              onTouchStart: e => handlers.handleStartDrawing(i, e),\n              onMouseEnter: () => handlers.handleDrawing(i),\n              onTouchMove: e => {\n                const touch = e.touches[0];\n                const element = document.elementFromPoint(touch.clientX, touch.clientY);\n                const segmentId = element === null || element === void 0 ? void 0 : element.getAttribute('data-segment-id');\n                if (segmentId !== null) {\n                  handlers.handleDrawing(parseInt(segmentId));\n                }\n              },\n              \"data-segment-id\": i\n            }, `segment-${i}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [...Array(12)].map((_, i) => {\n            const hour = i + 1;\n            const visualPos = getPosition(hour, 75);\n            const interactionPos = isTouchDevice ? getPosition(hour, 100) : visualPos;\n            const isSelected = selectedHours.includes(hour);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              onClick: e => handlers.handleTearClick(hour, e),\n              onTouchStart: e => handlers.handleTearTouchStart(hour, e),\n              onTouchMove: handlers.handleTearTouchMove,\n              onTouchEnd: handlers.handleTearTouchEnd,\n              onMouseEnter: () => handlers.setHoveredHour(hour),\n              onMouseLeave: () => handlers.setHoveredHour(null),\n              style: {\n                cursor: 'pointer'\n              },\n              children: [isTouchDevice && /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: interactionPos.x,\n                cy: interactionPos.y,\n                r: \"12\",\n                fill: \"transparent\",\n                className: \"touch-target\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"path\", {\n                ...createTearPath(visualPos.x, visualPos.y, visualPos.angle),\n                style: getStyles(hour, hoveredHour, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: visualPos.x,\n                cy: visualPos.y,\n                r: \"12\",\n                style: getStyles(hour, hoveredHour, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, `tear-${hour}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: \"-100\",\n          x2: \"0\",\n          y2: \"-110\",\n          stroke: \"#666\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ClockFace;\nexport default ClockFace;\nvar _c;\n$RefreshReg$(_c, \"ClockFace\");","map":{"version":3,"names":["React","getPosition","getSegmentPosition","createTearPath","getStyles","jsxDEV","_jsxDEV","ClockFace","selectedHours","detachmentSegments","hoveredHour","isTouchDevice","handlers","className","children","style","width","aspectRatio","minWidth","maxWidth","onContextMenu","e","preventDefault","viewBox","preserveAspectRatio","onMouseLeave","handleEndDrawing","onTouchEnd","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","isDetachmentSelected","includes","nextSegment","d","x","y","onMouseDown","handleMouseDown","onTouchStart","handleStartDrawing","onMouseEnter","handleDrawing","onTouchMove","touch","touches","element","document","elementFromPoint","clientX","clientY","segmentId","getAttribute","parseInt","hour","visualPos","interactionPos","isSelected","onClick","handleTearClick","handleTearTouchStart","handleTearTouchMove","handleTearTouchEnd","setHoveredHour","cursor","angle","x1","y1","x2","y2","_c","$RefreshReg$"],"sources":["/Users/rose/Code/RD_risk/retinal-calculator/src/components/clock/ClockFace.jsx"],"sourcesContent":["import React from 'react';\nimport { getPosition, getSegmentPosition, createTearPath } from './utils/clockCalculations';\nimport { getStyles } from './styles/clockStyles';\n\nconst ClockFace = ({\n  selectedHours,\n  detachmentSegments,\n  hoveredHour,\n  isTouchDevice,\n  handlers\n}) => {\n  return (\n    <div className=\"flex justify-center\">\n      <div \n        className=\"relative touch-none select-none\"\n        style={{\n          width: 'min(80vw, min(80vh, 500px))',\n          aspectRatio: '1',\n          minWidth: '200px',\n          maxWidth: '500px'\n        }}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        <svg \n          viewBox=\"-110 -110 220 220\" \n          className=\"w-full h-full\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          onMouseLeave={handlers.handleEndDrawing}\n          onTouchEnd={handlers.handleEndDrawing}\n        >\n          <circle cx=\"0\" cy=\"0\" r=\"100\" fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n          <circle cx=\"0\" cy=\"0\" r=\"85\" fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"0.5\"/>\n          <circle cx=\"0\" cy=\"0\" r=\"70\" fill=\"none\" stroke=\"#e5e5e5\" strokeWidth=\"1\"/>\n\n          <g>\n            {[...Array(60)].map((_, i) => {\n              const isDetachmentSelected = detachmentSegments.includes(i);\n              const nextSegment = (i + 1) % 60;\n              \n              return (\n                <path\n                  key={`segment-${i}`}\n                  d={`M ${getSegmentPosition(i, 70).x} ${getSegmentPosition(i, 70).y} \n                      L ${getSegmentPosition(i, 100).x} ${getSegmentPosition(i, 100).y} \n                      A 100 100 0 0 1 ${getSegmentPosition(nextSegment, 100).x} ${getSegmentPosition(nextSegment, 100).y}\n                      L ${getSegmentPosition(nextSegment, 70).x} ${getSegmentPosition(nextSegment, 70).y}\n                      A 70 70 0 0 0 ${getSegmentPosition(i, 70).x} ${getSegmentPosition(i, 70).y}`}\n                  fill={isDetachmentSelected ? \"rgba(59, 130, 246, 0.5)\" : \"transparent\"}\n                  className=\"cursor-pointer hover:fill-blue-200 transition-colors\"\n                  onMouseDown={(e) => handlers.handleMouseDown(i, e)}\n                  onTouchStart={(e) => handlers.handleStartDrawing(i, e)}\n                  onMouseEnter={() => handlers.handleDrawing(i)}\n                  onTouchMove={(e) => {\n                    const touch = e.touches[0];\n                    const element = document.elementFromPoint(touch.clientX, touch.clientY);\n                    const segmentId = element?.getAttribute('data-segment-id');\n                    if (segmentId !== null) {\n                      handlers.handleDrawing(parseInt(segmentId));\n                    }\n                  }}\n                  data-segment-id={i}\n                />\n              );\n            })}\n          </g>\n\n          <g>\n            {[...Array(12)].map((_, i) => {\n              const hour = i + 1;\n              const visualPos = getPosition(hour, 75);\n              const interactionPos = isTouchDevice ? getPosition(hour, 100) : visualPos;\n              const isSelected = selectedHours.includes(hour);\n              \n              return (\n                <g \n                  key={`tear-${hour}`}\n                  onClick={(e) => handlers.handleTearClick(hour, e)}\n                  onTouchStart={(e) => handlers.handleTearTouchStart(hour, e)}\n                  onTouchMove={handlers.handleTearTouchMove}\n                  onTouchEnd={handlers.handleTearTouchEnd}\n                  onMouseEnter={() => handlers.setHoveredHour(hour)}\n                  onMouseLeave={() => handlers.setHoveredHour(null)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  {isTouchDevice && (\n                    <circle\n                      cx={interactionPos.x}\n                      cy={interactionPos.y}\n                      r=\"12\"\n                      fill=\"transparent\"\n                      className=\"touch-target\"\n                    />\n                  )}\n                  \n                  {isSelected ? (\n                    <path\n                      {...createTearPath(visualPos.x, visualPos.y, visualPos.angle)}\n                      style={getStyles(hour, hoveredHour, true)}\n                    />\n                  ) : (\n                    <circle\n                      cx={visualPos.x}\n                      cy={visualPos.y}\n                      r=\"12\"\n                      style={getStyles(hour, hoveredHour, false)}\n                    />\n                  )}\n                </g>\n              );\n            })}\n          </g>\n\n          <line x1=\"0\" y1=\"-100\" x2=\"0\" y2=\"-110\" stroke=\"#666\" strokeWidth=\"2\"/>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockFace;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}